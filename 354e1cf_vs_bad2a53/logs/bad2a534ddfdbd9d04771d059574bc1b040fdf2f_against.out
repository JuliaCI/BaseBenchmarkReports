cset: moving following pidspec: 7398
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.040443122 seconds)
loading group "string"... done (took 0.607910459 seconds)
loading group "linalg"... done (took 9.613233884 seconds)
loading group "parallel"... done (took 0.181176576 seconds)
loading group "find"... done (took 1.521222192 seconds)
loading group "tuple"... done (took 2.166300709 seconds)
loading group "dates"... done (took 1.514114187 seconds)
loading group "micro"... done (took 0.239884868 seconds)
loading group "io"... done (took 0.583487596 seconds)
loading group "scalar"... done (took 47.04103053 seconds)
loading group "sparse"... done (took 14.277223704 seconds)
loading group "broadcast"... done (took 1.263909369 seconds)
loading group "union"... done (took 12.931578528 seconds)
loading group "simd"... done (took 2.711431679 seconds)
loading group "random"... done (took 10.961313412 seconds)
loading group "problem"... done (took 1832.748458864 seconds)
loading group "array"... done (took 27.696264084 seconds)
loading group "misc"... done (took 1.203218701 seconds)
loading group "sort"... done (took 3.99799054 seconds)
loading group "collection"... done (took 20.187013799 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.754668313 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142914647 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.216426746 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.375193129 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.24147809 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166667848 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.171910308 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.585833485 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.010112047 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.289082902 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152815103 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.602039859 seconds)
done (took 6.426494755 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.309232704 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.389335337 seconds)
    (2/2) benchmarking "String"...
    done (took 0.178928803 seconds)
  done (took 1.233359342 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073652025 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.184985442 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.114750277 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112164108 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097850729 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113362096 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.11259186 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112189306 seconds)
  done (took 1.513546915 seconds)
done (took 3.799522509 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.558334529 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.877476677 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.571920676 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.169425863 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.20360265 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.179043438 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320661564 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.157944869 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.112349544 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.107375387 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.222541646 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.349492683 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.49992614 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.01084615 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.08932306 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126277965 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.096239389 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68027932 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080613422 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.140512033 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.600288315 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116573524 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113880456 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12453939 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.207542396 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132337875 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.166172145 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092552152 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676928769 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100149529 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.232221817 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083133486 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181542045 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.256802367 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079808829 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106371271 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672037801 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.181449367 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116807366 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100902571 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671760722 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079906741 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.24425745 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106358636 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110289878 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18507427 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103156571 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.099220642 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101404916 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084217431 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173549592 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.45178804 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104308436 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171444531 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107759802 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692514913 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09786943 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154045337 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141096297 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110340243 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082131188 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.109167699 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158084867 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112182837 seconds)
  done (took 20.116220298 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.159723911 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168256132 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09208829 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141147734 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144799535 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096007189 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097787525 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077232075 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126894193 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.236908638 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14041191 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.186729572 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073622945 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099867138 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.143452013 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25012988 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10469497 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121495004 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099262526 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090904499 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142886894 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111809399 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108296918 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095177617 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.185143136 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204380174 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10675743 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122036475 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098033753 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11618914 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139071599 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14694093 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091228316 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081988424 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.2034816 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104405453 seconds)
  done (took 5.398139468 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.224773958 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117645644 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.241350064 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.17950653 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147220587 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182025248 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142894745 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.300842423 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.319055635 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183618413 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128648312 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.205743893 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.092758798 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095583989 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095616536 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07801921 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.723067159 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.18122187 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.14932851 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.150260195 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103003616 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080088726 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.382853773 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099493821 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079594511 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101677699 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.092514712 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081755991 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225182562 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101934759 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.371666746 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116110805 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089628918 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131602751 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213088338 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133965553 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140665463 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085456405 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098193814 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.21974603 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109429542 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092581337 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.110096859 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132867298 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131601207 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099447965 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110964168 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.244024278 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084128023 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120562796 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.144000694 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.216240305 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.136723314 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080345078 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.366735954 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116397063 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105024016 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080553516 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.337219921 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13941006 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080397752 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093526565 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084863375 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.0942606 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.444067868 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090274443 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.947523158 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096362745 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.166313198 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099695393 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105157987 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101684557 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083650798 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117304784 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09520846 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077355997 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09638122 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077360962 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100935753 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11824229 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083481428 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093817048 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158713047 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101511196 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115325643 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12376315 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099772807 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078902594 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128287268 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096327716 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083296275 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.189310441 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086847121 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122386877 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100138385 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14317271 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094966271 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081940779 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.227132123 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09694196 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083177776 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128091298 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100053812 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128404085 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.123575917 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095895573 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082738709 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093950096 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095297212 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146567669 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094214951 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080076239 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100242283 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111055807 seconds)
  done (took 24.613120873 seconds)
done (took 50.791563944 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.523771975 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.122419614 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.121670967 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.121376591 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.120591219 seconds)
  done (took 1.75365504 seconds)
done (took 2.470990562 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.387206292 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.188768149 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121314969 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18654193 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106420899 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.211902158 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.178223453 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119260152 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207242782 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100377402 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186082156 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102038346 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105318975 seconds)
  done (took 2.954849236 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09859031 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.125303066 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085198756 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114396586 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077256792 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11467833 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111769427 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119834123 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113354657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106507611 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079655277 seconds)
  done (took 1.8603272 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09492818 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118505861 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083901661 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111918684 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0782454 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111434399 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109835484 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105529389 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110904901 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089439145 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096193976 seconds)
  done (took 1.826075887 seconds)
done (took 7.355805628 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.2378947 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.749006694 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.153320889 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.203743613 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.40053179 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.258880667 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.644309228 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.167348538 seconds)
  done (took 13.742681096 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.117157486 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.141198144 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103061463 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101943747 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085309757 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100655604 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085358997 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100001242 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100447771 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085809677 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101146579 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085467372 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099657336 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08565318 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099027708 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098254508 seconds)
  done (took 2.380566415 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13865054 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138400918 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092461002 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112762044 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.105980345 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.08899044 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107922974 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106833509 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089047623 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104891306 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111338453 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09599273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.110306144 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.102860399 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093268252 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113199877 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.103132245 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092874376 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108340359 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108004425 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096365865 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10550907 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110078237 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.095317242 seconds)
  done (took 3.34901396 seconds)
done (took 20.194278274 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.184572059 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099908251 seconds)
  done (took 1.018649303 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.15013755 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153904642 seconds)
  done (took 1.032748128 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113798793 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098332634 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143430753 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120498062 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098976945 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082892484 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.13604986 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099601534 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083871193 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099725619 seconds)
  done (took 1.809187467 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088106439 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.104042308 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.111239899 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.150368009 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.096942243 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.1057194 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104606474 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087643912 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104998305 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.099042932 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093081012 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123399227 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107276904 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.246445019 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090169466 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.109436691 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113203986 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.107965998 seconds)
  done (took 2.778302944 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083273467 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100174717 seconds)
  done (took 0.914457632 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088393276 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099807001 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089349784 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105122957 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099578523 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085076895 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09973905 seconds)
  done (took 1.399316816 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.547637097 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.275504458 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.378900204 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.122145667 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145043549 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.399201315 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145156344 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117343952 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.117872504 seconds)
  done (took 3.025406071 seconds)
done (took 12.716776351 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089040189 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.237591783 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.596105697 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122994252 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083079158 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157133565 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.32959704 seconds)
done (took 2.349313632 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360714629 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.157937477 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091748348 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095995105 seconds)
  done (took 1.446282276 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076863072 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106821413 seconds)
  done (took 0.922584534 seconds)
done (took 3.119100099 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082200039 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132067043 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079988367 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097781203 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.098429121 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08101441 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.096317197 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08109969 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095116119 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080270908 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095359245 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080010881 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09548622 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080820838 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095819991 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080440204 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096091472 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080608546 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096417122 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080683383 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096421583 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095981559 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081294653 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095302126 seconds)
  done (took 2.96169184 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106938218 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100451195 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104474689 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087897303 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106134977 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104705528 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087061839 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.10029725 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104114411 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084484148 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105018857 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105374094 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083940241 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.105878809 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098794198 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.089928545 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.10559692 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100903022 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08441556 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105867432 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104094667 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08508858 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.107279417 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105034519 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.089849242 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1066809 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085412402 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101552017 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104752977 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090031772 seconds)
  done (took 3.695534801 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089633793 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093695396 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08325347 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.109251428 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079973057 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101899057 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.08007212 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098676722 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.100970976 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08465514 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.104559556 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081614922 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094080527 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083243629 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.100353535 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084649555 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114876492 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.094535697 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07771553 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.0982754 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084252712 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094036 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081412538 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.099327359 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08071171 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.095233073 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081982017 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096646603 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082767462 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096945946 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099767055 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086578375 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096603243 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092644765 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102088302 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.081046719 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103593986 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094656572 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.083441691 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094851587 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078717996 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097628795 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079342299 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107504579 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081652388 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099034213 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079704236 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099490698 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098052067 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.086955732 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094313636 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078028088 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101551546 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083525297 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101887274 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079325977 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099451881 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077838432 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.1003774 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.098071789 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079398443 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095555342 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.086027174 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.099340031 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104400939 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107706814 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095125973 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085217208 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099376272 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087894847 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101957456 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115241554 seconds)
  done (took 7.419888615 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096807652 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111804889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08382182 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100257196 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098558833 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082452782 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108149697 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082685122 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101112917 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108318956 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082460407 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100256357 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085086397 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099770363 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082408004 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099961385 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108874892 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082479287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.098208838 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082890221 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098754673 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108035699 seconds)
  done (took 2.850394953 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.263997882 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089673347 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.153663852 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117315526 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.123758863 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117528808 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087023018 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105660306 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103740247 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094026148 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109376625 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104604036 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122602111 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094059224 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111065867 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112655809 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086305538 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111581736 seconds)
  done (took 2.857584505 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100781131 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102421317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125477897 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084324683 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10418248 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085651595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110721785 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119732048 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102266149 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.086197825 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.114154223 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10118623 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087253038 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102240667 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08579461 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101572504 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102126859 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085739293 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113246854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113212875 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096173008 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113052584 seconds)
  done (took 2.993910432 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102901471 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103171618 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.140309945 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089436968 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101126604 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101725976 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091239937 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.103425784 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094385873 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101661327 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103135979 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084177938 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.110879448 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103606868 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092669046 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103354135 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085338167 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10320957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101654049 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084452046 seconds)
  done (took 2.762964272 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.179129644 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100882803 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11893598 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133522249 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116012883 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101007631 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131003015 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118515927 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100919438 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133826368 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118012438 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117979497 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130686519 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108833046 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115893577 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132296517 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131301044 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132174629 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101140012 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116679847 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135722665 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100097456 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130547724 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118432587 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117351718 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101023538 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1176706 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127467588 seconds)
  done (took 4.151450057 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081409537 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098770329 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082817205 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09812444 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082016975 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098094538 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082808336 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098750274 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081681153 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098415109 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08154196 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098923219 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08109023 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099726294 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081057307 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098320266 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081919052 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098532548 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098227446 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081973058 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098804891 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082259961 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.098182917 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081165653 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099315557 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081907649 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098840394 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08337128 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102788263 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086047131 seconds)
  done (took 3.474353823 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098240746 seconds)
    (2/2) benchmarking "in"...
    done (took 0.128180066 seconds)
  done (took 0.995421037 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.094270733 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122172426 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081952674 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101269631 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.110819158 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083257132 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11230299 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112096744 seconds)
  done (took 1.583794205 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.154342142 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.15289081 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090109349 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113745899 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.150863065 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.144880346 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168829406 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.107852101 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086639039 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098219171 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.148969914 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.078191913 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107349476 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10368207 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089300391 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112775419 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101818021 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.094433932 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108857793 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087268636 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107460647 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115505909 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091310712 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.113135484 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099449776 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092458128 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112685056 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.114280867 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085620855 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11043943 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.103672356 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085164118 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104885784 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08984742 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101736845 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.152297739 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116582842 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08467946 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107168118 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090271553 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111671815 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.101558033 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091397711 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10459178 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110247934 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08924217 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.107674496 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.084405561 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097684724 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.100687572 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.085463709 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10099795 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083472643 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107117308 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107296036 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100698129 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103723687 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085950912 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101881774 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099984419 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087636864 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102140156 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108668789 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096038183 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107933312 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089811742 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104949876 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.101332328 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.08579351 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101763809 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089996685 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124377919 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111296949 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089396777 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108395713 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102481232 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085414048 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108477496 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106089404 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093376629 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105977798 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091058479 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108968109 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101870056 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083222013 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109182517 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087071167 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104602315 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09699314 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10370686 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103319611 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086339474 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099025945 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109577065 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084900923 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105437109 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08034561 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108175002 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.100981797 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.089759579 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109565444 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08625418 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111320622 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10900397 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091125273 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108744307 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.146577391 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104533339 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084420335 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.104675528 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090160411 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104454276 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109119011 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.082875371 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103160816 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084608244 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108518321 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11040403 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085158413 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108178544 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091256429 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110875491 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.105096456 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084772149 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10234087 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089426383 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113071988 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110755238 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.084994774 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10346854 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084368554 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107571032 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105525417 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087652599 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107606324 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10286888 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.083153783 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103838329 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088787877 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111153229 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083714756 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.104934711 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109518704 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0880508 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.105140889 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109514238 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082774383 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100030525 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108616388 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085528605 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.103201051 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094828318 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10350842 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087204119 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103989784 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113280535 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085343564 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108751693 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10465666 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089726387 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108436173 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080325698 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103362649 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085945271 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11249824 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103081736 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.084401197 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101455331 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090690259 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099915319 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106880854 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081566431 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103709416 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090300447 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103712294 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088093656 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100917979 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121051019 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098939227 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109190437 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107971462 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093199558 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.107114638 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105869493 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088494523 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109121705 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089691468 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109230759 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106371545 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089741513 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102847718 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.088616498 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106088042 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110694099 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08068809 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103986463 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08083694 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106759132 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11151585 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090395645 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.108422009 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086462913 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106452275 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113289978 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084682346 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10635149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080980029 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107314989 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.094805845 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108414242 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10902296 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09389545 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104345223 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.102912004 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09617975 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10514549 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090297788 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.104002247 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098880278 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081608676 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.109967803 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086994557 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103019583 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.084311748 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110758733 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110434869 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08656878 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100263595 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090926904 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113197349 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102444729 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089428768 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102990648 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108153811 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101492375 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099647378 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103487774 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094829388 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108425992 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.083323758 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107239881 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105156473 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.090540328 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.106038898 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087447344 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105128843 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09161548 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105810252 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.102261661 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085129372 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.105599013 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08154357 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.106056768 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.1104846 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087210467 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105312769 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095743644 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109531216 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.108893429 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088067723 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107082476 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.110211537 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.091405971 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105116681 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.089997504 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102692009 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081929374 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104977653 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099608974 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085626089 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103475696 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090378058 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105333791 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106683527 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.088532124 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110274265 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104440053 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.091097639 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.127776468 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101862773 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080706592 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106411002 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106690523 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084975729 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103216856 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.085335273 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109398581 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088641597 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110944983 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103672063 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083205539 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10924162 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086319452 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110287017 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.110286425 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.091952044 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102472143 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089797518 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103648759 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115128978 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082772705 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112530819 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10861544 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089040727 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104899502 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086670114 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104297694 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10016548 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086667826 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.11054753 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086811294 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106334502 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10682467 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086189611 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104040582 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083940495 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.11118849 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105806401 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.093400003 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.10307531 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081102331 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100528099 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090374768 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109599731 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.110573983 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084801781 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.107112099 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111692387 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088311534 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102763477 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094144892 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112838502 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092202998 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115467599 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100597198 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086801045 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116836136 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.103444006 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086920725 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105650358 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083079942 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112510858 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.110146318 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093078211 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106526182 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081202741 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103774987 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092379246 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106407939 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.108833008 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086510669 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109318621 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083276199 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106792259 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090696451 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108942966 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110921799 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091101308 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.108165308 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105230537 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090842067 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104569441 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082250833 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101276476 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086349637 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.11097195 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101138726 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.090190839 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.109718767 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086972417 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107369563 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107646802 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086112726 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112848535 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089676242 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106171071 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116128175 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085223118 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106895593 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090314511 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109069093 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082362761 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106989414 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107420715 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093256016 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112161034 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.108431562 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089648844 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110055574 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087704427 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.109351145 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091833438 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109699365 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101452445 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.093911453 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113355964 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087594347 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106682241 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107677218 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084416548 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107609954 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.112200083 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088054271 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115464846 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090976267 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106454804 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110234485 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090358371 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107475088 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09286069 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10468144 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112433132 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083356694 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115259601 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107751944 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.092374023 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104922226 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084607868 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110577566 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090716222 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108410887 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114150786 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093243122 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103010301 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082071226 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.107196812 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106645415 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097557976 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114322238 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106721315 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088248621 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.106807868 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085910589 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112131775 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.0838991 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105913371 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.1085507 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094667645 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10746252 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084813986 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107725297 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112992394 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092840301 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111003895 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102761988 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.0897472 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112222325 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088257195 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103572698 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106123843 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092578323 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109655281 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08608634 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102049035 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118525427 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092650187 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112188829 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105494568 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089863803 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106522475 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08780957 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.112175936 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106833215 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091233139 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10714811 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091476208 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118898593 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100767366 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086830986 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119213336 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089689624 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113804454 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.107083031 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088077549 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113046508 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112294263 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.088306947 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102780488 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08343729 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107524599 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08311698 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.107326089 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11974854 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093217331 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10859007 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109248451 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089485131 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.106428354 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.088012687 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102438049 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093766045 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106623825 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118047042 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083860929 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102110511 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.088073415 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109964203 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108628711 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090503862 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.106039022 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.088102678 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103738441 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088911772 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115572703 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10919782 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092271349 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108186031 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107377183 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.088353303 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118859851 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086536863 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108275811 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120522112 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.093607942 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110029249 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111283299 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095088085 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.113397944 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.088956705 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.112522864 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107530047 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089076902 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.113832676 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.093626545 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126086584 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108428168 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083703791 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.109808028 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106876565 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084313807 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11649482 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094791698 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.11214298 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109323011 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08731144 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113854831 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116257667 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090919509 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108798004 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088978371 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.109912019 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106575059 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.090327932 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105870243 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.094697649 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113179237 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092154505 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114264543 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103282035 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100725509 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1156113 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.11544893 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08666217 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102650164 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083875279 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.111588118 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.093671027 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.111736463 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10928863 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0894559 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.109012762 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091344355 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109265765 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10834672 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.093825021 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.110688515 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.086776367 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111227282 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088234951 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110899233 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10672254 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092680827 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114136439 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093338174 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117873581 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.113377267 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08797154 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106657312 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109609069 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.088399836 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111384253 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089787902 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107399753 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083407246 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111274224 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114977331 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090958849 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113692737 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095045045 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108389995 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.113128059 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096413398 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.110614723 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086406627 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11101497 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107845679 seconds)
  done (took 60.98772909 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.166356229 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095871512 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108204784 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088234301 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136743802 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109829149 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108359305 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090187949 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110033758 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101344434 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10900603 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108528453 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.132461401 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141640448 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137806785 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102964349 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107653927 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109627024 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088503887 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110514383 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130843369 seconds)
  done (took 3.201518613 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112478769 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12916952 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126134087 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131019967 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117992839 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.103892583 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.127335102 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125774711 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130138611 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122364448 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129064506 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12537033 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.101683234 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.120831114 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122232522 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121450833 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109422548 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118505739 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126978571 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.126705442 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120763625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106180456 seconds)
  done (took 3.462151475 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0961687 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.111894516 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094613947 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.107183192 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.091017117 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.108760447 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.117766674 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.087415641 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.117526071 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.087874128 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105849783 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.088924738 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112738591 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.107678984 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.085882264 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.106499188 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.09683536 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.110996963 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.092736998 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.108050604 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.132349263 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.107477476 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.088927928 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.105651439 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10276532 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.112397285 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.090882753 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.111079126 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104865116 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.092175508 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.107324021 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089991327 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111999701 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084478038 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105351976 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.11204228 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.092446205 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.108437723 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087364019 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.111383834 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.088567226 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.113397538 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116711509 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.08851823 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.108152388 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089599326 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111442459 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.107887825 seconds)
  done (took 5.736895833 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.15227926 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.170558462 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.119866044 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.158694834 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135042433 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104929572 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.114417143 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.160814058 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.116737861 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.09372392 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.135808879 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135655989 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121530791 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.124332592 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094236903 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117261478 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.119281212 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097789644 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125826123 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.116324146 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105153265 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126134123 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.134244967 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131706301 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119871221 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096428645 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122205179 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.12409392 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.13308627 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.104294694 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11979425 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126130754 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132608748 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.122393486 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094956799 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122473293 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.138317833 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.117335902 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096922301 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.113540435 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101647939 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125919212 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.118360893 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134747317 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097090137 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.122632512 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116689933 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.092486395 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.134391312 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122392656 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.129912377 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.135788328 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120009985 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.099068226 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126444744 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.137254536 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.117091683 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.094784833 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.118731415 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133933658 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096117976 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120289725 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.136336133 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121520734 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107430165 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134436264 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119488975 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120019548 seconds)
  done (took 9.174492638 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125172209 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.120326527 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135291803 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134656801 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118621383 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.09983944 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119298705 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.119715673 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099966601 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129098616 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11983814 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.206994376 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.117218108 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129055251 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099408534 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122074244 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121471785 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119377587 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10073171 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120743028 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119005065 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134246809 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100346671 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134991634 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137888471 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11609189 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099502402 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121506898 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134027006 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119934613 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136837756 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.098669151 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121357398 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133685055 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137407143 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.11973203 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091707916 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119462154 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.120089973 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099293722 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.116752447 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133948939 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120965609 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.096120163 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120934514 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120781954 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135550157 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137908032 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107024359 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130437944 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120061389 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136234578 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120589087 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100791382 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.134237241 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144461192 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134329135 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135009129 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119554854 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13576655 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135093418 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.145596503 seconds)
  done (took 8.457096339 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088681925 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10883221 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089753653 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.109657978 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089177652 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109481925 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088344186 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108636491 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089836693 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.108326238 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0883177 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109338921 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088896802 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109357263 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088326913 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110471722 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088722281 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109694115 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110102737 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08917648 seconds)
  done (took 2.803745046 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10234824 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.134576904 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.11389651 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102499578 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114555341 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123746502 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093195913 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114401555 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114194725 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093962152 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12490319 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126121845 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093257947 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.12232093 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125372343 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122297045 seconds)
  done (took 2.652726975 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116710775 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.135304526 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.169725811 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.117321575 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.114702874 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100442212 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.113925844 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094073271 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.112748113 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121320292 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.096384894 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.117915322 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091955358 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.11396157 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.113988247 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.097825147 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.111438999 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.096854754 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.11443963 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.170028773 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.119645227 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.096610835 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.116103644 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.116948736 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.096449853 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.120889292 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.122037587 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.093402612 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.115580488 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.113871593 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.098231595 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.122948236 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.113143405 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.098266332 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.114639877 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.094337001 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.113189499 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.113740371 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.097612671 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.113635833 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.093577557 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.117289048 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.114071859 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.097245772 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.112499436 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.093929354 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.112817034 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.120756326 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.095494601 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.117469654 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.093309753 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.121057675 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.118748773 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.103947595 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.123809118 seconds)
  done (took 6.976677204 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107814032 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115481051 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.12923091 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090233155 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115579709 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.096569445 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.116280199 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116861661 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095796295 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110376661 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096278248 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117143365 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116839697 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094990304 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116510857 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095342444 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.111571623 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115172593 seconds)
  done (took 2.793341948 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098696459 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113188694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098232882 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112904707 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092617042 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114616541 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112869209 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090805593 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111496758 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092682586 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113672392 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092615579 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11302158 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.11353845 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093286679 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113154304 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.092957676 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112350492 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113454421 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090761418 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112671362 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091217507 seconds)
  done (took 3.122270616 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105203634 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.170869413 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.123782468 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.180563632 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.113997201 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.111399598 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.10263267 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.11313028 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.130693333 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.090874179 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.110455939 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.090344022 seconds)
  done (took 2.278298115 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12174766 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156669321 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114853503 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093071109 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127806372 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121595033 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120794129 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100298836 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13315702 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137156635 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120833451 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13259734 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112561728 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135380474 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127270537 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127027667 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121470404 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100071081 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115119974 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146827064 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121109874 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132929036 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100057298 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121226427 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120244434 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13421079 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110367146 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137565596 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121479724 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132691053 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127509277 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100380764 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133034933 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137485114 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11488583 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133532326 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100000603 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166079137 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107981909 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135713794 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113851749 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12954526 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11234394 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130540098 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133881267 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12069225 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129513292 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100138467 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120863779 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151925879 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13001614 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136367352 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127813652 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134948346 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132038354 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153809281 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140131982 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135767964 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107511611 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13668385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135421196 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127340175 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135547659 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138510424 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12796583 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13918417 seconds)
  done (took 9.185271096 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162361263 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095904086 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121500498 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139431731 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135036716 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101136795 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121827045 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119780681 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10028083 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117773853 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174271068 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120901181 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136144653 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136434629 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120673598 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101521256 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120392049 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136015142 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095577459 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17428421 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100535062 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135706533 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135813575 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136544384 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139548064 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128401244 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099781446 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122231153 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121519991 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121631573 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109767438 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121747329 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135907623 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116077863 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135624635 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10095627 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121757789 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131061088 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09935927 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127713888 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135192169 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146677457 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121640692 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121092411 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138740032 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100193495 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122200564 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117471284 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101664142 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117583578 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138864667 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139159515 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137787492 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135407251 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100925534 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121960149 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121091141 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100226291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121911229 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128171517 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136299563 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100665709 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175001944 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100635966 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122204878 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13720856 seconds)
  done (took 9.062007961 seconds)
done (took 166.386355668 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.155827482 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.177408551 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.152238629 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.150858114 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108876806 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122203683 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142831124 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.153731107 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108021252 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087048577 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108619059 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091634648 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17510169 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086858255 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10773082 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11118809 seconds)
  done (took 2.877385874 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.210025945 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.302859835 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130033843 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113888004 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096164448 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11285735 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091829217 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115158636 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109864715 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.102626898 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111294966 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089889822 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12345627 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111439704 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08891997 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.111740582 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123513988 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090218965 seconds)
  done (took 3.078619488 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116016286 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.167131023 seconds)
  done (took 1.135761311 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130479776 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.217389675 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296471653 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171106379 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.141300842 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136239629 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.173433013 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130463922 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.203798685 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134421688 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.135118784 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095336113 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144303909 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.123109434 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.10609775 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116086685 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145161865 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.104214574 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.36871765 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117942812 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139110962 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.096924446 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123884518 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.125171952 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.192561045 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135184692 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.09678347 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117807989 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116777577 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.103197068 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.124189988 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13484648 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.132860439 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.183022515 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123047965 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.200556569 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103368053 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115273573 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.123562474 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095255651 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120766069 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120024748 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110740104 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117008637 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116304372 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102489738 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.116888079 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116372293 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104239189 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128827878 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125566994 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123523711 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17821106 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126480733 seconds)
  done (took 8.333282301 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.907176336 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156908253 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093334832 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.038838538 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148335832 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131334941 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.914423393 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116946418 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.282433592 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.907257992 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132757739 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106592439 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.288631921 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.28082031 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.190674011 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.396320311 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.748505378 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130051314 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144701128 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.167242138 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123451097 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147297826 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114289671 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.47377964 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094287665 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114046586 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122602157 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105615578 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.203371553 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09190458 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118217143 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.226026739 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.286302619 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232113175 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116029834 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091681183 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113376329 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188979056 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.298609666 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.274232827 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186915209 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088941001 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11318258 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129997682 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115343502 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111612917 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205066134 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194916307 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.216144958 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096353137 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129584724 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125537639 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128136836 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.18185293 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111203566 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.373232427 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.383124573 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113655882 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102237394 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135950063 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.296797096 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113445129 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260849059 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144750946 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.244312389 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112889432 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819077118 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186060608 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112898804 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102840895 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124016243 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121009524 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127636637 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182467799 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395705223 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130815455 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097307594 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113845244 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.277976106 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092757527 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113546523 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18318107 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117037921 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123619136 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131270278 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10742097 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.213971737 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271876012 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131123655 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124830483 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119475078 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107567631 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116930311 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234026586 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.274331025 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.181613341 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.258152926 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109188712 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.207255564 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187863567 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128957981 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.212650395 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101583565 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133781054 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129261526 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.248071889 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155274264 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114529281 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097454063 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123917272 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157699535 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117174131 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123570874 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189718461 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.514706481 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186720115 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.113526404 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095189694 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124405167 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20197909 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10139965 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.293399688 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125774683 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.21014255 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102634846 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111025269 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10190266 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.207843518 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129830464 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125080488 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106884606 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124166531 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.301117564 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.254158256 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1086865 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270139908 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.214176037 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103862272 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.219723026 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12461405 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189629414 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125543616 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105154362 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117469272 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814485651 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129969065 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123802278 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099314091 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.232485265 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091996918 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11484759 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092295303 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110497581 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.845774791 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094475286 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112437813 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093312751 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126332578 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124235875 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121106023 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098688687 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.204079494 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271110555 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128702122 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101834018 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113924215 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179596101 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118102117 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.11409684 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092375645 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115929986 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124347696 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099734454 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115946202 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193492673 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.202515566 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.255043209 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577780636 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091481066 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115468012 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266490685 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114535355 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349595852 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123774077 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.262015106 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188586429 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112052877 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.38056992 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.211413145 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.214107198 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094653293 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.21507409 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089476969 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123474733 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.203523021 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092524491 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122586693 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178378232 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133394504 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131341464 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.24348824 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114732453 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247940829 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112091328 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188985488 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119258604 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128524737 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349034875 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090828785 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138467742 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.204179597 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097258601 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115730703 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.753705622 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092710355 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12849487 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125471133 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.25922888 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.207852445 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103072944 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125562338 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128972208 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181966618 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.253885304 seconds)
  done (took 48.215409277 seconds)
done (took 64.483948961 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.331030444 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.288335616 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.341960799 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236435993 seconds)
  done (took 2.153527948 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238994417 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163945366 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.21819436 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091133091 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.229639387 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090760808 seconds)
  done (took 1.911311306 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.544498406 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.447970275 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.380010578 seconds)
  done (took 2.256678089 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269739158 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.277499315 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.369906491 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.499973139 seconds)
  done (took 2.423009874 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.287409459 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115076288 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131827649 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.184478059 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.257812632 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.283991329 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.159775708 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.208472412 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.118610706 seconds)
  done (took 2.672487538 seconds)
done (took 12.295978553 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.297238761 seconds)
    (2/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.261784286 seconds)
    (3/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.240612952 seconds)
    (4/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.278470922 seconds)
    (5/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.254387653 seconds)
    (6/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.205579011 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095695803 seconds)
    (8/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.167850571 seconds)
    (9/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.168697261 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.123652282 seconds)
    (11/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109094386 seconds)
    (12/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.344569275 seconds)
    (13/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.147098676 seconds)
    (14/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100655294 seconds)
    (15/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.247366458 seconds)
    (16/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.121609942 seconds)
    (17/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.30550985 seconds)
    (18/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.134514388 seconds)
    (19/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.229717435 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.223978144 seconds)
    (21/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.168362962 seconds)
    (22/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099930538 seconds)
    (23/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.221487163 seconds)
    (24/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.2247052 seconds)
    (25/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133684965 seconds)
    (26/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.201781259 seconds)
    (27/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.227279178 seconds)
    (28/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.289128845 seconds)
    (29/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.134336151 seconds)
    (30/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.121884935 seconds)
    (31/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.171579139 seconds)
    (32/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.269156381 seconds)
    (33/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.212267258 seconds)
    (34/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.10704851 seconds)
    (35/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.340432036 seconds)
    (36/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.165981982 seconds)
    (37/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.14339391 seconds)
    (38/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.231190232 seconds)
    (39/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.101046463 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.15692961 seconds)
    (41/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.131842697 seconds)
    (42/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.110441815 seconds)
    (43/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.1665155 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.129868141 seconds)
    (45/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09078425 seconds)
    (46/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.298626141 seconds)
    (47/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.131226159 seconds)
    (48/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.195399552 seconds)
    (49/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.12490604 seconds)
    (50/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.215781195 seconds)
    (51/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.124822133 seconds)
    (52/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090996825 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121738277 seconds)
    (54/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.170672313 seconds)
    (55/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.145932668 seconds)
    (56/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.164868645 seconds)
    (57/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.123322377 seconds)
    (58/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.108709301 seconds)
    (59/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.218453163 seconds)
    (60/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.201104311 seconds)
    (61/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.136234135 seconds)
    (62/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.163887145 seconds)
    (63/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.15582968 seconds)
    (64/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.098593205 seconds)
    (65/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.122303469 seconds)
    (66/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.099979885 seconds)
    (67/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.124160499 seconds)
    (68/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.208359024 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.154506111 seconds)
    (70/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108841058 seconds)
    (71/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.173136052 seconds)
    (72/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.203899773 seconds)
    (73/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081592768 seconds)
    (74/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.142084189 seconds)
    (75/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.15725826 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.132836414 seconds)
    (77/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100268441 seconds)
    (78/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.236111614 seconds)
    (79/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.198590038 seconds)
    (80/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.22353322 seconds)
    (81/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.106996855 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.156411012 seconds)
    (83/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.149533371 seconds)
    (84/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.200796353 seconds)
    (85/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13291546 seconds)
    (86/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.214521353 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098276829 seconds)
    (88/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.130822603 seconds)
    (89/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136112391 seconds)
    (90/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175525948 seconds)
    (91/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.106454419 seconds)
    (92/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.215803036 seconds)
    (93/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.1353273 seconds)
    (94/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083259808 seconds)
    (95/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120258713 seconds)
    (96/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.113103775 seconds)
    (97/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.105736037 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098403991 seconds)
    (99/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.106219419 seconds)
    (100/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.15758748 seconds)
    (101/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108823608 seconds)
    (102/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.158107559 seconds)
    (103/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.169501331 seconds)
    (104/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.199089821 seconds)
    (105/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090399498 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.133366978 seconds)
    (107/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099547797 seconds)
    (108/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.200343427 seconds)
    (109/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.107337338 seconds)
    (110/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084267958 seconds)
    (111/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.209947982 seconds)
    (112/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083318316 seconds)
    (113/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.216952126 seconds)
    (114/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.107090769 seconds)
    (115/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.109941303 seconds)
    (116/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.169711609 seconds)
    (117/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.109902341 seconds)
    (118/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.083126714 seconds)
    (119/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083688879 seconds)
    (120/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.124957768 seconds)
    (121/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.175349742 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09827959 seconds)
    (123/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129166445 seconds)
    (124/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115269065 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098362132 seconds)
    (126/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.123181543 seconds)
    (127/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.094966464 seconds)
    (128/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132967263 seconds)
    (129/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.139389205 seconds)
    (130/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.08945777 seconds)
    (131/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119110134 seconds)
    (132/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097506124 seconds)
    (133/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135157154 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121774971 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100132399 seconds)
    (136/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.225584852 seconds)
    (137/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.182417102 seconds)
    (138/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.16971179 seconds)
    (139/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.091168364 seconds)
    (140/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.107578718 seconds)
    (141/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.197640507 seconds)
    (142/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.143825664 seconds)
    (143/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.107594847 seconds)
    (144/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.082562907 seconds)
    (145/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.106884898 seconds)
    (146/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098401481 seconds)
    (147/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134043117 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.123115359 seconds)
    (149/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083391709 seconds)
    (150/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.123843311 seconds)
    (151/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084025915 seconds)
    (152/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.128076764 seconds)
    (153/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099075036 seconds)
    (154/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.108112434 seconds)
    (155/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08346386 seconds)
    (156/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11404232 seconds)
    (157/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.10125062 seconds)
    (158/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126812647 seconds)
    (159/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.136953023 seconds)
    (160/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.112950931 seconds)
    (161/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.106009288 seconds)
    (162/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083372692 seconds)
    (163/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.10628493 seconds)
    (164/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.084246077 seconds)
    (165/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11308978 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.101489159 seconds)
    (167/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.10748083 seconds)
    (168/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098369662 seconds)
    (169/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.173091058 seconds)
    (170/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091144863 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.123200314 seconds)
    (172/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.162579697 seconds)
    (173/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.126794955 seconds)
    (174/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106893212 seconds)
    (175/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.090040629 seconds)
    (176/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.107825349 seconds)
    (177/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.08343555 seconds)
    (178/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.122064334 seconds)
    (179/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.199126632 seconds)
    (180/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084035181 seconds)
    (181/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125286197 seconds)
    (182/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082588568 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.107094517 seconds)
    (184/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.08235599 seconds)
    (185/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.107157072 seconds)
    (186/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091020866 seconds)
    (187/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.106292871 seconds)
    (188/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.108715281 seconds)
    (189/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.106657961 seconds)
    (190/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083981115 seconds)
    (191/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.12337756 seconds)
    (192/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083614893 seconds)
    (193/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120497096 seconds)
    (194/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.112534081 seconds)
    (195/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.108428586 seconds)
    (196/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.109706168 seconds)
    (197/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10687461 seconds)
    (198/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122486173 seconds)
    (199/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.102955204 seconds)
    (200/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.106673649 seconds)
    (201/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100350289 seconds)
    (202/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135464023 seconds)
    (203/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.0825217 seconds)
    (204/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.106575242 seconds)
    (205/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.089465141 seconds)
    (206/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.123620631 seconds)
    (207/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099569506 seconds)
    (208/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123794767 seconds)
    (209/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082574476 seconds)
    (210/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114473455 seconds)
    (211/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083538861 seconds)
    (212/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135432624 seconds)
    (213/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083015076 seconds)
    (214/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.108715987 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.137277321 seconds)
    (216/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102449742 seconds)
    (217/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.106761633 seconds)
    (218/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083255202 seconds)
    (219/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.108119478 seconds)
    (220/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083375139 seconds)
    (221/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.083645446 seconds)
    (222/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.10812179 seconds)
    (223/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084140055 seconds)
    (224/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.124706281 seconds)
  done (took 32.23390755 seconds)
done (took 33.120225926 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.510528259 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134041625 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102961381 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128147142 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.184324665 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.13174569 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113004881 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.132851362 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.133445576 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100422591 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117206801 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.107627772 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.127303163 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.183570131 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.132066487 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.096330128 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120296999 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.133240385 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111115091 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.136814326 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.183257782 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122033764 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.108177503 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12101248 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18453982 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121319947 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.10202515 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.129806246 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.133077026 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.10136107 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127465187 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095841593 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137021212 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.1358259 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09214809 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.124651908 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093873855 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.116320453 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.127129834 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.101484129 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.133619553 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.100717503 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13054871 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121107214 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.102520894 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.125708188 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092479613 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.131246001 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.117735242 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10305973 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119624954 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.137106727 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.100255221 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117830099 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093086574 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120463618 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.133525423 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093240377 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.134007224 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093251111 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120607333 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117608107 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.102721336 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117918278 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.099435958 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119949353 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.124860702 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.103229958 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.124097548 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095827991 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117294248 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.099732408 seconds)
done (took 9.962138326 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.099505417 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180822009 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.185680175 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.192660639 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152755909 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.13774944 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.142103469 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151216466 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111267146 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14524167 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.157622549 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.149226568 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.191654096 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.133800188 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112557652 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.126843963 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134633371 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107393438 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.193782776 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14697963 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156810994 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.134815297 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158736101 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118860341 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127113101 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.159654935 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.127472854 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.101850766 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.125518797 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134377217 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121610015 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.127200092 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127879813 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12326902 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.137116433 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.131590067 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11346673 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.128234945 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.125298787 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.099459645 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141224829 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.143007484 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099364167 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138178341 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.128219437 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.108350869 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.134557964 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.133608285 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103080365 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.129513434 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128053531 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132811218 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.13380061 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.133437242 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.134179134 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.107515882 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.134243227 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.107759064 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128605938 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.132302247 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10003785 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126866642 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129086057 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153496915 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.102908393 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.133257887 seconds)
  done (took 9.73323255 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120586904 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159910736 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136942538 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.136182847 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.107388436 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.115420318 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090022193 seconds)
  done (took 1.798819003 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092788873 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188413703 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18721359 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188535518 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.205496506 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196238863 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140457167 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093161856 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.157054134 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.12913241 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188136708 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219360813 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.12674863 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.111043409 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215891928 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093311631 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.191390745 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.118724837 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130288428 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.18761914 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10931912 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151160906 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.13449848 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092693425 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207650396 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095034158 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.269381676 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110429226 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.125210956 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103029822 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132133699 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204068726 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.180682688 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.1352931 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123443983 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.183652332 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.183035475 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13225597 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.199423502 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09812044 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.182283042 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.131821058 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.133168777 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.106615512 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.130834191 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.169015154 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.136311975 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107524738 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.130132019 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187722791 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132813194 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182815612 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.101615493 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.133945404 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.13170578 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.107747105 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138263912 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.131585571 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189909449 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134492676 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183335669 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.182960228 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183381616 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183360141 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144150251 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184867776 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.180936938 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.103370074 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12909094 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.131322852 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183831123 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.131078502 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.107434522 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170268999 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135453757 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18496354 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184687766 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128081722 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.108596547 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123562992 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.128620909 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094605545 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171994111 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.134808277 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102406503 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140254468 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133802471 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.105749349 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.123461949 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145357006 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.105052609 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.133539574 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.135392416 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.133561618 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112127424 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.186378847 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.133845122 seconds)
  done (took 15.158411367 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0969102 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.119514562 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.100417712 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120854249 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094946924 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121539583 seconds)
  done (took 1.608095739 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.127948222 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.133246706 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.144543877 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.10822202 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191390546 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.217714839 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.194721344 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132074359 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.123984083 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.144414989 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.191483567 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.195008575 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.215531582 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.110168878 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.192691704 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.137182327 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.194209404 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131544177 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.142223759 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103176659 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140214545 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.136547146 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104391129 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.183662393 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.13685501 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.135959268 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133640408 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.117039055 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.140981954 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.132659393 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.109741032 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.136833114 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.130757404 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131142431 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.195693137 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102861288 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129543512 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.140213484 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1114042 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.138631123 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194036933 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130472716 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.141667207 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.138986225 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106826098 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.130102947 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.139203719 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107663788 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.220326541 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.113637848 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.1411133 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.134274426 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.111369673 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.142647577 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.128763012 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132005755 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.114352771 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.220075167 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.110927865 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.13005238 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.135969647 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.111091436 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132474541 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.141483361 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.137891939 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.114590216 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.131768963 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.134139903 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104030332 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.136528978 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.141644882 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.108671593 seconds)
  done (took 11.09547723 seconds)
done (took 40.324050837 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.136637464 seconds)
  done (took 2.086294402 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.981572632 seconds)
  done (took 1.936280429 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.846507107 seconds)
  done (took 18.835088105 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.578103475 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.656506605 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999460803 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150916368 seconds)
  done (took 3.339094093 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.012189715 seconds)
  done (took 1.988258373 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.330194208 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.285232577 seconds)
  done (took 1.574237075 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.871062578 seconds)
  done (took 1.837787785 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.47826771 seconds)
  done (took 3.442713573 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.385039222 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.200470917 seconds)
  done (took 1.562377496 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.674924059 seconds)
  done (took 1.646365427 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.909093471 seconds)
  done (took 37.880877989 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249205336 seconds)
  done (took 1.233327922 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31981196 seconds)
  done (took 1.292545635 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.723313538 seconds)
  done (took 4.698045497 seconds)
done (took 84.316731061 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105890222 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134153819 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108082474 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13266011 seconds)
  done (took 1.451986535 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.115605743 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.134298957 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.136771811 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.107645602 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.143003558 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.107022511 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.132608382 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140274478 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.106084688 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.134815554 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.133132053 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.107750913 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.134450474 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131830323 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.105425227 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.135382224 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.110521057 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.135254187 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.133398424 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.107385755 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.131960231 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.133397505 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.109880265 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.133307343 seconds)
  done (took 3.981539646 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106150398 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.12488821 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102258122 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.12462939 seconds)
  done (took 1.439850973 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.114704732 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.15036145 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.147332423 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.114571405 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.150214859 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.147135545 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.101870609 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.127523262 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104145222 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.14085564 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131100369 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152815438 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.122400797 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.135256448 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.14158082 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100894716 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.134165966 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.123583609 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.143176241 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.140710139 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101104635 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.139817209 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.130758851 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118571409 seconds)
  done (took 4.098222067 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.216914066 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119490669 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.156047525 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.184083477 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.157959214 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.10209915 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.160072764 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.137688695 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.138869493 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.109163151 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.136131317 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.193888291 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.134330561 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.110945534 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.134450168 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.139531046 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.112778452 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135237422 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.138514634 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.119783977 seconds)
  done (took 3.828394046 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108325029 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124085002 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09302486 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124581274 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.132231724 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101717907 seconds)
  done (took 1.670643227 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094519291 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117917038 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09359624 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118558769 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09917784 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.119409108 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091908414 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.119596525 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093266726 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118892928 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092239279 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119347945 seconds)
  done (took 2.267776699 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.310221131 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097123 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.128967014 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.124083557 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.102828785 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.124743129 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140821697 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096129267 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.26139948 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.125380757 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114326108 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.201699749 seconds)
  done (took 2.814960143 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231041613 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107140345 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293093109 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397139447 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175668108 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184334332 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29381959 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183246482 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.234441503 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128257179 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24556564 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174054518 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169024049 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197864467 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126609996 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.203399951 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219967863 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222562887 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162677149 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227806072 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181333973 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185584844 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200489536 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166968975 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152841418 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176538033 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.13195452 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113719969 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218120441 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188685346 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19524924 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164022578 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155643717 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222804088 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268680549 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199203473 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.335092376 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147184057 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.209693596 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201031237 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284885634 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154838039 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243895465 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145224034 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14555635 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200485705 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173545369 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.227809407 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.120943871 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156674288 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207151608 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222223942 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.206128899 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151952619 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320950896 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162440381 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164245767 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196296762 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210613255 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24084322 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184455365 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.1076892 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225864477 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202247883 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19974397 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16346651 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190249869 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139192998 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196632755 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216435636 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20089641 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213619225 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.204736357 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148172602 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181386659 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187796404 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169786309 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196744046 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177863614 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.131661496 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138133591 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151605323 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140607911 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.202185608 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10657404 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254533323 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147660992 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.206753254 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224156108 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17537875 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177992926 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181539462 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18535068 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162115072 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.131946913 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160245184 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.176282962 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144381681 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143034767 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173272023 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159846533 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.142533172 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167386087 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106794792 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174115752 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.14880345 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185159809 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180259943 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.143843347 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18221697 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165423011 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.175797231 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191451992 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207120836 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145215506 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118792332 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240339217 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174208337 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125464854 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221575961 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20967717 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.184057655 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151150926 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189379406 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220006469 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157120933 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210003038 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157308586 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146377895 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169249914 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175124929 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172770286 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14264955 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141519589 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.170185609 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21389989 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.141171539 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149281264 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1922267 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140675226 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112591558 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15861657 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151094847 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.155920805 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.169051532 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.127396807 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173702945 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178492688 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169353639 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175288347 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157764473 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246752583 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119137583 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.176711916 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161682749 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.132365804 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204004794 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204054024 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143456558 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205289955 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190165583 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241231745 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18192549 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141939198 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200330789 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115033493 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.135820504 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184820438 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180294279 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179845786 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205244843 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238630415 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190422226 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.17162864 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163464868 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187291907 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.19301816 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175540626 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.16068146 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179487509 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189504542 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.134065244 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.109576668 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.142614257 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153527419 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145668682 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118270873 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229964579 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183134016 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20255537 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177792375 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153622014 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204626257 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.141494841 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183363929 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.194888654 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153796251 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.208350218 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200249043 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185914496 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155647177 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189589195 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.135694477 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136687133 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122619651 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188164615 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146361639 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148029996 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160258872 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203150076 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195354516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164545657 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247460091 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189543426 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214928184 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.135161209 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.152605781 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216396214 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172971323 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.175376605 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144223765 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.179383133 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197125939 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158712493 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214351401 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180952874 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186118517 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251971954 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.174423915 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143468414 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136074206 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212818952 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126179213 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182582434 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160548882 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150001969 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170435261 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.151679231 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112706786 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230129513 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157403932 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203560035 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.172868697 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194500368 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138976248 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157640984 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176199896 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160320427 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10429675 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187767239 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238481485 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161104654 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175030109 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194511975 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113221728 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.353543239 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211729233 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204672708 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152754807 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159656584 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177623727 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176852184 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182668042 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202399823 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15933072 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200502155 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175369117 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.157988096 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120302611 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16197866 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165823414 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170867643 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.15038752 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.172272778 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.156464964 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207798265 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158815957 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175514142 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183146802 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.161322944 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143417778 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154471074 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221427848 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175707164 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225484147 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170225728 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188720802 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208513269 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107818204 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141605015 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.142713209 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203071172 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145557974 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146974839 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.225015493 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214968602 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175013126 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215897996 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123493266 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.138781492 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176843274 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164659484 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215497501 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156404999 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152770251 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213169564 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.166583617 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143924123 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181447485 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298550455 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15995692 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194808391 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.103982233 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.317428443 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111880368 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145370849 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179175181 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190949623 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164938108 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.198687168 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184926447 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130592398 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177854018 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152474431 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23136057 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226731513 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191457761 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194834471 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.158682801 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17679039 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179636962 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222497132 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131343127 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.162177965 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17850254 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202775158 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209247637 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.149195184 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179828034 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179453316 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176992133 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225165396 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119045106 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206519607 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145409165 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185919726 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1554701 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139249191 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176142112 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197403704 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146460599 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195062541 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174356906 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143860203 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113070939 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16789314 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174856586 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159600593 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.14298919 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20164662 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.139453546 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179849693 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198662289 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114362512 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173475964 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161568937 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147878001 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157381913 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131174952 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148817587 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.185779356 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204747111 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.148795147 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196786425 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192220836 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184264403 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176425417 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159483846 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.680642923 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.142363846 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203584133 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161064136 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211735108 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164019536 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184434628 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17750285 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135646308 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21730658 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16567795 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2097177 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216184046 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179580338 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114835924 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159493378 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160421619 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146922357 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168140902 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181799169 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125743169 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.1537157 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176034884 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160477882 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.160725331 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151725176 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204468721 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163362554 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206403699 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203132813 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153183978 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185540138 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198719393 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142261752 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182625894 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192327673 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15829854 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169797059 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.11875754 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15175268 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197951588 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.136277825 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179903697 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17628864 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179262624 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179726009 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150534107 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147747775 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159206185 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179371423 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141259216 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176845325 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174220478 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147188644 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.115188513 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171967785 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177099601 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.174713506 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142964799 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.18312626 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203027843 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107861396 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147995314 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299458672 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175296221 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215382584 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.171466937 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149746408 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158591835 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174094049 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172068831 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176831054 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115205191 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14598877 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.147832971 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.198928659 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1753193 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172568248 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197667824 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17910064 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208286236 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160500566 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283205805 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124414706 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171527888 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.146483153 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.146529722 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126583508 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149479913 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162509774 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206938886 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197884299 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.167816149 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.160155495 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142875614 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106088372 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145005593 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179328445 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171300916 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174703978 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16032121 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102279158 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160380722 seconds)
  done (took 86.029005099 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167386079 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15312575 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.157487458 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.209008479 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178780221 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267654034 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.218159002 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238788223 seconds)
  done (took 2.663512294 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.135012146 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.119758064 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152821437 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.133672917 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.134368297 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.447293738 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144107331 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.10659708 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.196807147 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.172822173 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.104603045 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.679462469 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.131089239 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.132988866 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12421732 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132009772 seconds)
  done (took 4.111485124 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.553553863 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.564443619 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.135547454 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.264837463 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.24466947 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.191901151 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.775234884 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204721719 seconds)
  done (took 13.001640125 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137922742 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151794493 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.352927359 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.223013587 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.170523454 seconds)
  done (took 2.113088233 seconds)
done (took 130.446042014 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.109553206 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.155024334 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109492533 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154102104 seconds)
  done (took 1.593217544 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.157210391 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.122822492 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094691098 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120927604 seconds)
  done (took 1.572045414 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.540584328 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090843622 seconds)
  done (took 1.73695461 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.136282217 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.156991056 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.155284909 seconds)
  done (took 1.534769723 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117014291 seconds)
  done (took 1.193437553 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.109740949 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.140272751 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.192372344 seconds)
  done (took 1.524429738 seconds)
done (took 10.231834551 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131001355 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436305914 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423274834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117252103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.736327155 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.416508026 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04668327 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164454292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147336313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12657182 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148910128 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677209969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.069572396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378023639 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.025335172 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.375510463 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.68162205 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129013965 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132495473 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100275568 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.02258999 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096415847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127951385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126978777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67922315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.431370606 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097695028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.390132725 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125204469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103412526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.416776216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097518832 seconds)
  done (took 17.251100181 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14324799 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193519168 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137480444 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09897993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132019598 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128620467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.109666064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142437864 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193449494 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126533041 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119785409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127022565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103283116 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12875102 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150231222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096873048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130933615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100960802 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134518666 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128575315 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118778239 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126598109 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099360871 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129235512 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125923485 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113233206 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127338541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138678448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097803135 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132167817 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104545015 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127497511 seconds)
  done (took 5.155009799 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1490252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201689622 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136755917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.16130009 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181956425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099910038 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.21870941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.168881151 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195624947 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127865084 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148015735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098361197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.168537642 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098979215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152462211 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12656431 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101841596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130989724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134110793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10210625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.149452342 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098240532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129373681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128137474 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099287256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.142216018 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098973124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141832333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127166973 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105832039 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133959513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098797382 seconds)
  done (took 5.443237308 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.111261848 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.141592029 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120889095 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.151404249 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.136024591 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.110331245 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.14279215 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.105671573 seconds)
  done (took 2.111492973 seconds)
done (took 31.040929321 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123895028 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.147362353 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117845067 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.141297157 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.202829594 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100742714 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.14554317 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.130258503 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.112890323 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.149469216 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.098102496 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.133688168 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.118652582 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.136846995 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.186660455 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.140729637 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.190824583 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185783613 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.104230889 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.142925759 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.10377073 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.192668141 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.140137462 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.103299981 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.196384984 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.133237539 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183166776 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.136183463 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10823923 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.130063539 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.185024476 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.110014884 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.134166276 seconds)
  done (took 5.74569408 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.203013055 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.214676984 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103370731 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.134198877 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.213107087 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.103562961 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.232523146 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.103677069 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.133543657 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.103902949 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.131735937 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.20369735 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.210734472 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.224290006 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.244311939 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.212605237 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.199548244 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.211030365 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.196367634 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.214171404 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.201811584 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.133218142 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.214520427 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.216764423 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102589529 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.134360465 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.237584471 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.210055863 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.239075255 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.199501007 seconds)
  done (took 6.577326594 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113705571 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14548584 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125147025 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201344389 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.174057926 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.143279703 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111848521 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.154711705 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.154421947 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099003288 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.139246169 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.136721578 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147601053 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.139496786 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104859503 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.148597072 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.153815861 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.101946891 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.136216971 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119655325 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.148040596 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.14745718 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115767687 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14003606 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.098733959 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140385858 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133779217 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113553484 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138014286 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107130694 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134103072 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.133937101 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.103270033 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.138864017 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103516806 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.143008618 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.156664421 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109377407 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.142012792 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165682683 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.107749739 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.135010274 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151213656 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.146791202 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132159842 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.141316067 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113662533 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139737728 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098282669 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150830959 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.142485243 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.10153262 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.15295242 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.098452405 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128580959 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137280005 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101846438 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132210822 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.108174613 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.134187619 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.156357517 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.108776732 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136225066 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.1013894 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.136287996 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099635944 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.13006276 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.136679745 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124789709 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135311649 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160583421 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099954601 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.140392117 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107647146 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135134947 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138873254 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100957237 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136033094 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108285774 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.136156937 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109418973 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.133889645 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.133716038 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119780149 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.152859648 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.143117806 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.110375028 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.140975073 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102831212 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.131600881 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142307393 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102021335 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.134639804 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11060842 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.131846636 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132176365 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.111335149 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.13914041 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09849798 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.149564446 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.137735667 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100563731 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.146942086 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100681981 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.134386251 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109807348 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.143164165 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129262692 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.109493431 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.142499047 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098636279 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.135747532 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.133251701 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100694106 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.1481317 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.11055274 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.135595316 seconds)
  done (took 16.207808277 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.303753313 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.313881918 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210302217 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.40618233 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.123858205 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.230049845 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.278755641 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.23051284 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132025645 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175187309 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.191938874 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.270320233 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.1006325 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.163972304 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.310893077 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.380630265 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.163166909 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176638512 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.174079366 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124810301 seconds)
  done (took 5.571236397 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.124216109 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.173515422 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16235768 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.164245463 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.107709164 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.145344169 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128935737 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.127425807 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.139464899 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.136325004 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.099708147 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.146042224 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.107728209 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.141035055 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.149944155 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147885396 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136326248 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.137776258 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.123960269 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.138032424 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.142726359 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.160340974 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111770529 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.159997304 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.145960373 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115173529 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.129719457 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.135924848 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.104027122 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.13553666 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106878325 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.150562606 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.138458951 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106762112 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.140485526 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.11205455 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.132946648 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.13151004 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.103005684 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.133203457 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.118762368 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.139331149 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103543524 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.126884879 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.112857723 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.13421292 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.141727616 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.110490038 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.142461859 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.117143492 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.142582055 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.143335402 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107926612 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.151055472 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.101645382 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.146156402 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144385299 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.142653505 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109178159 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129781797 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099269502 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.135107629 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.105644597 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.143057179 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.140968064 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.12604243 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.14814485 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133851008 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.107447294 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134629646 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.104055556 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.150654858 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.159704432 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.136475919 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.105720469 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15274804 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.106006721 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.124044934 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111360035 seconds)
  done (took 11.450941054 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131287354 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.136434097 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.12135296 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.169856011 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.151514265 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106497627 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.135939003 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.122073402 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.14567096 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.14682109 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.113586232 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.145008557 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15679808 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114432272 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.136049768 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.14561964 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.110900339 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.176517818 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150624863 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.136170862 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.149710083 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.136830408 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.114974301 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.145279536 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.166479929 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.113689251 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16503907 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.14116961 seconds)
  done (took 5.016370442 seconds)
done (took 51.660143259 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.299928707 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.41774363 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.193646481 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.198541249 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.237705864 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.235852116 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.193172264 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.386603255 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.906747559 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.185387729 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.19112367 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.188583669 seconds)
done (took 27.752213101 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.259487955 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.791605578 seconds)
    (2/2) benchmarking "String"...
    done (took 1.504236438 seconds)
  done (took 4.407919182 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.184941986 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.185152256 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.429602439 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.18757144 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.205161241 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.205096619 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.185027153 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.198978245 seconds)
  done (took 15.708401016 seconds)
done (took 25.672935097 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.266787288 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.393533704 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.45669059 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.2045444 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.205229378 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.192602782 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.180563963 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.222109304 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.191488678 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.177069126 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.185005881 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.456595127 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.180407053 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.579849734 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.179242126 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.188970885 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.203969932 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.429867031 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.201298899 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.230121734 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.176424984 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.202988593 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.212984492 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.211356371 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.193140353 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.184758562 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.192307961 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.187226387 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.393258776 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.205492809 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.234215656 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.183864793 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.202584044 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.194072195 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.296400153 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.209591008 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.374820821 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.184178019 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.18022443 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.195692943 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.376007513 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.590446793 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.185681149 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.180316621 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.187326756 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.265561609 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.18474496 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.920473524 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.187979132 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.183333168 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.18746251 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.574497807 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.186375433 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.190143893 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.193357013 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.429756849 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.214882687 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.215304809 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.212335828 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.183658667 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.183428098 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.194528675 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.191977062 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.197937423 seconds)
  done (took 142.474243417 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.183982329 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.188010899 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.186118263 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.251575601 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.18857847 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.188322974 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.182687179 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.182409263 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.187242711 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.215049793 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.188213159 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.187793006 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.18912966 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.161336376 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.189426761 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.196367027 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.186965767 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.188055822 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.191063275 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.184997033 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.211856878 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.187600663 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.201236787 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.184449656 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.223071283 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.258897928 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.222014316 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.209289482 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.190283302 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.1829895 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.228640238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.206313385 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.805200153 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.042615432 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.189657269 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.202778849 seconds)
  done (took 79.676516008 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.185307721 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.185460615 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.185347666 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.218029811 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.184873637 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.747007263 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.747137258 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.915026196 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.640529229 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.534166115 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.433751043 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.18515516 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.185405154 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280621618 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.200046345 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.187222507 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203162991 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.228600142 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191118105 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186763158 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.748593129 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.198473245 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.254283424 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.362995936 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.205525534 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22045611 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593337912 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.186968203 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18893881 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218260533 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.518943432 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236806316 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18734106 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.571632331 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.69207649 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300834124 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190990752 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219966872 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.188729512 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.468779578 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.18714862 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.188568568 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194326977 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.871328801 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.189788518 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.761212965 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191342434 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.158618811 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190378908 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187796863 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.563848694 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.863818174 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.204811018 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.188465109 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.191069737 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.187840713 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.18783758 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.221896075 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.679961114 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.300471149 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.205947383 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.191584304 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221355565 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.18856294 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.297152776 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204733631 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.443935796 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.237984025 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.399576703 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.751789193 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190394538 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28386789 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306920905 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.187857554 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.187190618 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187223903 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.188543166 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298018591 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.187641616 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.601955057 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.361347213 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.204072554 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.541010659 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.286510505 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.187775233 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.552923624 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.189512797 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.186195634 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910896474 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.282342623 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.187401113 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.187572078 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.1875456 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.599816759 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.740500389 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.427698803 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.191773567 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.188506698 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.878283357 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.189102876 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.186635329 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.608177101 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.729899487 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.862166357 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.191128298 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299860743 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.359806803 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.205563012 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.188169878 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.516631349 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.192174661 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.245970314 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.193482961 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.58710962 seconds)
  done (took 365.017075346 seconds)
done (took 588.280996897 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.944173623 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.893215729 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.026204317 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.92089342 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.886027985 seconds)
  done (took 10.783187931 seconds)
done (took 11.895949719 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.377084205 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.375685175 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250063545 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.377098419 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220264659 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396330756 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.357333525 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.208527416 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.293594917 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.271691507 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.292512802 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241192585 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2250639 seconds)
  done (took 18.000819591 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.458483712 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.196361909 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256670423 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.435203439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231458508 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.468671996 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.491910498 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.194263058 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368111811 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205153917 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204265148 seconds)
  done (took 17.625451616 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49962182 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.197551036 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258507433 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.445136977 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234156521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448027487 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.491505034 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.195053896 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.369449218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205851314 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204361187 seconds)
  done (took 17.662898921 seconds)
done (took 54.401716529 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.231301015 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.357371307 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220745181 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.209350134 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.202104536 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.20292675 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.211017393 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.202505771 seconds)
  done (took 10.951952868 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.200072435 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.201253914 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.2003612 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.19889638 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.200272047 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.19988412 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.199748846 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.19937947 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.200878686 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.201022506 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.200486615 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.200183177 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.20021706 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.199379159 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200805554 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.200477524 seconds)
  done (took 20.318765373 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204442796 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200380877 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.201120019 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.201503525 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202470071 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202568249 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.203542463 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200980398 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.201276831 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.20203576 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.201865297 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.2029172 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203064324 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.202404152 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.201371194 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.20419642 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.202311403 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.202495885 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.207131557 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.201882181 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.203013785 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.202653566 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.202436289 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.201572244 seconds)
  done (took 29.977551154 seconds)
done (took 62.361182679 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.209369307 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.201037985 seconds)
  done (took 5.526615541 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.26269926 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.263769306 seconds)
  done (took 3.644267652 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.203830692 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.202057752 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.205332482 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.203343091 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.202054628 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.202885703 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.202559807 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.202315641 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.203185659 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.203780649 seconds)
  done (took 13.14773388 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.204414089 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.204300272 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204119159 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.202561005 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.203808694 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.203591801 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.203590421 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.203308891 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.203733532 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204320118 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.203164067 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.204874184 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.203608241 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.203960356 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.203820122 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204064968 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.203619244 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.203385295 seconds)
  done (took 22.785668439 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.219349012 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225573588 seconds)
  done (took 3.56178971 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.344106517 seconds)
    (2/7) benchmarking "second"...
    done (took 1.246719118 seconds)
    (3/7) benchmarking "month"...
    done (took 1.320163223 seconds)
    (4/7) benchmarking "year"...
    done (took 1.309911764 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.2457701 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224356279 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.246631466 seconds)
  done (took 10.055959335 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.205931802 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.412850543 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.509852622 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.768506589 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.20654223 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.252427027 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.059629066 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.251430888 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.240572401 seconds)
  done (took 14.026435905 seconds)
done (took 73.865108271 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.193762188 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.262453216 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.203013224 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.217235946 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.544449715 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.207075964 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.200023457 seconds)
done (took 15.947570915 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.199182161 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.192984169 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.194070392 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.203922554 seconds)
  done (took 9.91042705 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.195747643 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552612975 seconds)
  done (took 4.867519315 seconds)
done (took 15.898154191 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20592 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.206494228 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.205075648 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.204495991 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.205438351 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.205815764 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.205470367 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.207279079 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.206298027 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.206678645 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.206213085 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.206150322 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.207646816 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207364402 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206334577 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206080085 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206132354 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.207432715 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207263894 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207427805 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207252304 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.207002124 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.205932584 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.207846544 seconds)
  done (took 30.075814746 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210909623 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.207900929 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.207734304 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.207141482 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208427168 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.207167415 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.207391232 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.206516019 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.205816746 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.208052048 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207458852 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.207952327 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.207473798 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.207606103 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207119615 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.207875792 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.208412546 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207489025 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207624843 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208630009 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.20755686 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209088998 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.208107421 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208430348 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.20943246 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208514285 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.20755277 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.208884945 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209138792 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.208164055 seconds)
  done (took 37.36259979 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.214489741 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.215467856 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.210169223 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.209793755 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.2089349 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.210369429 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.210083558 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209018132 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.208694948 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.208327512 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21181479 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.20990716 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209472245 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.210072771 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.210429387 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.211493972 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.210206142 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.210739887 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.210295622 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.210961242 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.209583452 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.211439165 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.211191377 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.209809619 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.211804165 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.210811683 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.211288246 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.210733632 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.210931023 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.210590796 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.210471695 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.210869182 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.210494702 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.210962942 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.210670109 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.210939472 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.216618546 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.218438978 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.212239755 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.211071417 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.211378373 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.211065127 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21104937 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.212324936 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.211078263 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.211825901 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.212002822 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.211784063 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.211932648 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.211526404 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.211834255 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.211409861 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.210918427 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.211485081 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.211492708 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.212013656 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.212275229 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.212406196 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.21198678 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.212193797 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.213083765 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.212626629 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.212501184 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.212349009 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.213070708 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.213141409 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.213680934 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.212315177 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.213101718 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.2131783 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.213135454 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.213303214 seconds)
  done (took 88.356877725 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.214024126 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.212912303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213148474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214139589 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213495809 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.212801016 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214228946 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213567913 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214771044 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.214686835 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213610018 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213370149 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212542277 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.214280748 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214042902 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214348627 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.214860048 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213733195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.214737147 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.215060803 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215105784 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215207755 seconds)
  done (took 27.834798671 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215479998 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.214872437 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215317095 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21561021 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217316488 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214683181 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.213814151 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215558115 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214822176 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215699887 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215678822 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215048161 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217615001 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214180954 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214319336 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215899799 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214523214 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217604989 seconds)
  done (took 23.006527911 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215468634 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215063269 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.216010616 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21596021 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.215470436 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.214429212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21635022 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216677818 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.216497031 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215938858 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.216740453 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215544052 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.216661553 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215976883 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215082126 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217451989 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.217309983 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216734717 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216880117 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216427811 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217199193 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217917296 seconds)
  done (took 27.885779668 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216952721 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.21647547 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216844345 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.217297623 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216790696 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.217665646 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.217667412 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.21704778 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21902233 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.218249694 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21721842 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.216669318 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218296646 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219266668 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217770481 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218009476 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.217882094 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219014901 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217964426 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217856176 seconds)
  done (took 25.483196991 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219505974 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219499106 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219834641 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220122834 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220966152 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.220188649 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221671031 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.220875651 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220558216 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.220155097 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22118292 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220407457 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220521743 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22043368 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220587246 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220970599 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221460375 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220374884 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221632361 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220564012 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221183159 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22177774 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222112096 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222345053 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222176021 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22282453 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222576573 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222084682 seconds)
  done (took 35.320325626 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22222257 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221264569 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220697373 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221044093 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221139197 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.220734844 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221464182 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221161464 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220723704 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221669685 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221272911 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.220483394 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221013713 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.221071277 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221691286 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.221207338 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221481857 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.219811191 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222392019 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22214795 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222222742 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221452143 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223670637 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221233689 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220980088 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222033684 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222211265 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221901975 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222953072 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222356262 seconds)
  done (took 37.779782222 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.2682838 seconds)
    (2/2) benchmarking "in"...
    done (took 1.264119855 seconds)
  done (took 3.665932572 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.223168959 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223121047 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.222101931 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222383868 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222474321 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222237556 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223890154 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223834165 seconds)
  done (took 10.917881626 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.219127049 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.222221639 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.22413925 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.222934909 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.222280161 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.219449716 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225904979 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243464661 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.219821014 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.220591749 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.226129 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.226678101 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.222770849 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.221065242 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.219558633 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222875544 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225224406 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225026713 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.224407646 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.225080659 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2249852 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222814193 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223555913 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.225400547 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.223302012 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.233078812 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.24257541 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.22471047 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.220466855 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.225112419 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.22141251 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.2262708 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.224332326 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.225618638 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.226431826 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226027445 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230681538 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240916895 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.226592168 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245155296 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227589027 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224950486 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.222834552 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.223805278 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223831195 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.226303564 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.225710691 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.226692584 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.222007278 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.225246608 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233840935 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221451619 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.227695309 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224121855 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.22334857 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228930101 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.245797566 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.226700836 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.232334209 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.232117816 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.253886914 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.248356305 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224985338 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.227313043 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.231597265 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.246149767 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230665108 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.247863072 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.228385017 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.227271523 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.23080304 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25688546 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.248856846 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.227721562 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228136394 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227982949 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225169245 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227223716 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233603983 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.247248894 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.228655505 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229209679 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23446158 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247348918 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.224910045 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.228251171 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.229044328 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.229149463 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.226387363 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235074045 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.248669918 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230499732 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.226855151 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.227056936 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.228586572 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.229096967 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.225293477 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226702883 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.229067686 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.230332809 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229156773 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22917575 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.234082499 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230053352 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229243108 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.232116674 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.249142196 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227089452 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.23229267 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.232229198 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229911305 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.228309773 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.232537845 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.230049051 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229661955 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.234377269 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.232066589 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.228413146 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.231114097 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.232063231 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235596915 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.252073343 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.232039287 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.230992963 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.230926893 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.242333082 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230712301 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.230937773 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.2322011 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230756267 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230523707 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.229436839 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.231479694 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.228799389 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232006377 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228313749 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.230776086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.231316257 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.232005649 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.22914243 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.2287966 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.230117051 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.229409702 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.230058177 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.2321274 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.229428716 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.234200389 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.247159144 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.230099077 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.229479691 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.232152908 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234187905 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.229457498 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.232036228 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229005157 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231867021 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.22814665 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.232368243 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233402158 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.234434492 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232569655 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.230770239 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233111946 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233272584 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232874211 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228481115 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.232632313 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.232740441 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.234253694 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.229465182 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.233974507 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.229908054 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.234167416 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.241729895 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234086032 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.232825688 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.231107177 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234907144 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235664469 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235779908 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.233332593 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238033014 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.236964345 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.239203129 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.254455251 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236377388 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.235745466 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.231234384 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.230415625 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234587663 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.235638708 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.245037365 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246632203 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260273637 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.234985092 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.24204685 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.236085429 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.242971651 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.237792167 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.238700479 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.239341196 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239044736 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232783116 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236066033 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.234075621 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.236389415 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.233681495 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.235507008 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.237585404 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.236941911 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236940351 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.233123435 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232705125 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236060382 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237148008 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236116034 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.232977424 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.236061206 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.230992837 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.232790388 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.237587513 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.237490946 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.238141068 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.237099493 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235308377 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234536597 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.234358651 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.233436877 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.23763411 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234192827 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.234311106 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240865844 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.254028129 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.234567012 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241079841 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.255467327 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.234410563 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.235287034 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.23744257 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.238394941 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.237722629 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.245383894 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.239077676 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.238092296 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.238118061 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234480765 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237603619 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.240786386 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.259027351 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.234326999 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.239378125 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.23658007 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.238697305 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.236969343 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.236610002 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.23550908 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238059521 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238988831 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.239447788 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236737536 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.238463387 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240041255 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.240220826 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238112981 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.248136008 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.240286801 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.237193015 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.238233826 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.23627586 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.244485726 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.235944451 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.240306738 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.236722791 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249039413 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.266495482 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24490457 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.2579971 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.240865852 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244675961 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.257189575 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.241714683 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237141686 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242267487 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.238200909 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.237496662 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.241791901 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238393998 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24107466 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238528834 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.238841212 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.246539177 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.241967098 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.237357667 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.241908509 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.24079412 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.241170618 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.237566063 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.242417781 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.23906647 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238879531 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.236180562 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.751612903 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241827359 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257302815 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.237862153 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.237696789 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.237509655 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.237130036 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.242121271 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.24184187 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.241430606 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.249192487 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.241079598 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.246711488 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.238952138 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246891191 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.242676929 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.240962982 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.250208622 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.240424135 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.23698538 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.238188666 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.242767432 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244799244 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.263164768 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.240623511 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.246630821 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241681836 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.241831745 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.24239803 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.241817096 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242521911 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.242172746 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247004814 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.258659408 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.242458356 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240931977 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.24155775 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.24242953 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.242315041 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.238987586 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242717059 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.242499757 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.239660001 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.240051637 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.239244836 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.244314676 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.242933528 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.243663518 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.247244905 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.243850286 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246044746 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.261658647 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247145193 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.243089823 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.246864537 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26391347 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247226023 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.264902762 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.240018274 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.243514147 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.243760843 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.242332164 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.24030665 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.241766532 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.2454345 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.242039587 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.250223701 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.244978175 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.242501643 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.24125024 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.245026051 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24136422 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250171089 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265893374 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.242498073 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249066893 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.246639065 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.243348057 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.249242335 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.244795695 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.24045493 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.243194842 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251450298 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250896486 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.241604835 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.24584094 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242959931 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245798194 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.245914548 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.247000625 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.246017116 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.244854519 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.242178584 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.247447101 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243753673 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.245163933 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.24142013 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244023269 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.243198737 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.251840944 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.266422104 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.242936438 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247683481 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.248157798 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.243285836 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.24456012 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.247245011 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243700601 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247157622 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.244005129 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248605367 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.249624868 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.246280184 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.243654847 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.247884182 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.244481628 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.244239713 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247187306 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.245295734 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247490051 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.244410951 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.247170635 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.244725969 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.243107043 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.249047413 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.244349032 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248727743 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247165219 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.251750855 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246418787 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.248397984 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.247845047 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248851539 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.244125445 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.245734603 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.251694331 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267844056 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.254982217 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.25221396 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.253909008 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.245186265 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248103455 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.253180891 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.243718486 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.246639316 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.24997927 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.24681448 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.247451923 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.249665688 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250223523 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.251748372 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.265330077 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.24530519 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254376597 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.266333309 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249694811 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.247189718 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.250312073 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.247914354 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.249520878 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.251033856 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.246182564 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25419442 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.267433255 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25278567 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247933914 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.24666392 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.249310949 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253630486 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251069225 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.247135491 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250927908 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.246713928 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250509235 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250315301 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250922607 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.246873152 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.246929015 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.251338312 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.253575248 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.253325145 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249655278 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.248297803 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.248956188 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251264875 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25146779 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.251577681 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.251830878 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.248260754 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252118457 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.248584578 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.251993404 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.248566862 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.250271896 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.256433682 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251684264 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250979069 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.258822162 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.259346991 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.252600263 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.248649754 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.250633285 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.250979667 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252291784 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.252655472 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248277164 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.249497007 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.2537977 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255316955 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.252763341 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.252073072 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264799671 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.272209798 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249347454 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.249504075 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252411991 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256582709 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.253548354 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.252702472 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.250879061 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.251082253 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.260108878 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.253622554 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25659789 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274625091 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.249201926 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.255836073 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.252531957 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.255764662 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.251780423 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252921207 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.253402138 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.258982625 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.265087721 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253190015 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257990503 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278142006 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.270122524 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.250808797 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.253934499 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25293966 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.252249975 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.250696881 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.252613727 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.253092595 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25304496 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.252111518 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.249594474 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260413252 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.250234007 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.252737824 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.252549009 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.249072853 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.2502126 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.253439392 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.25243494 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.260286263 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.25197168 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.252479182 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.253036399 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.250050463 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262777833 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.276294941 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.252850586 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.259435922 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.252309358 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.25225111 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.252478091 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258989214 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.260438012 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.25308475 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.252280058 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.257625739 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252519079 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.253955802 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.249410291 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.25024298 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24864669 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.253724933 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.261282033 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280410784 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.253778254 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.250558925 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256401301 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.256177485 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252021456 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255822904 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256376972 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.252483391 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.254092338 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25916252 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.257557027 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.256962874 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.254930805 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.263558459 seconds)
  done (took 741.855835966 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256759916 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255897025 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25676721 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257210536 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257844331 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256422302 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257034824 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257279016 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256298967 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257275579 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256740169 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256996409 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257415286 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257290538 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256872277 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259983689 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255932768 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.256910433 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257439127 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258146461 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256593708 seconds)
  done (took 27.564383186 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.257485795 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.257323015 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258567966 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258272281 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258182712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25766029 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.257690359 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257958247 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259397508 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257919594 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.259393819 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258056146 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258882259 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.258386673 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258218392 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258308395 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.259012062 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262709175 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.257112733 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.258326106 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258150702 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258507315 seconds)
  done (took 28.850783431 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.258903668 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.258638759 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.259914225 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.25917226 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.258746977 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.259053827 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.259851679 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.25929137 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.260225407 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.254471865 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.258363717 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.254075912 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.259630772 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.264652557 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.254926229 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.257977237 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.256254529 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.257095173 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.262384577 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.257796336 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.259734464 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.27770441 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.258004149 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.253467679 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.257939553 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.257978769 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.259302548 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.258111134 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.254800036 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.260174555 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.257834961 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.254427553 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.256264508 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.254504663 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.258112673 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.260144383 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.257999416 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.258849649 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.258292432 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.262084754 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.279159052 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.25866563 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.265077781 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.276958301 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.257488731 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.257632157 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.264397925 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.257150849 seconds)
  done (took 61.630894378 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.842363118 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.864074969 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.857169811 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.859349324 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.856534135 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.855907636 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.855746384 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.861626002 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.863121193 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.856582719 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.858041943 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.862938716 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.863740983 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.860169811 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.857363957 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.859546131 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.851302746 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.854857429 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.856958489 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.856841919 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.849854056 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.852613177 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.855659365 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.853359422 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.856134643 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.853315464 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.84995889 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.855451462 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.860388326 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.862111656 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.857850802 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.870629354 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.862224844 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.854320388 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.857249879 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.859891674 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.865678842 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.857096845 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.859456919 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.858362815 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.858653883 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.859153694 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.857785559 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.861241435 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.873308316 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.875856336 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.862639993 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.858094681 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.858155813 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.868299678 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.858681349 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.859327298 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.85575373 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.868814129 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.86801924 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.861632999 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.874498547 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.866478985 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.867159397 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.853657519 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.856035186 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.859114922 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.86202968 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.859634912 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.853778822 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.862840471 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.855952169 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.858148747 seconds)
  done (took 127.609753733 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258091043 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.259436854 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259343642 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263904244 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257766445 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.258190956 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258590854 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.258602624 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258345523 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259346902 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258915744 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262699305 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.259171919 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.257879792 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.258811898 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259049425 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.258815221 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258172061 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258700407 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258068904 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.26018656 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.259043999 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25976288 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260019938 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260040048 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258498198 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259995827 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.259916892 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26023199 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259980603 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261467939 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.260447387 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26042026 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.25987753 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.261445582 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.259986269 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.26064705 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260586268 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.260736946 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.260839211 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259628136 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260472732 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261172711 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.260850005 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26105255 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.259995791 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26096253 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.261775256 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260942426 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262450435 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.260738019 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261820802 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26214484 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261868147 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.263123135 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.261791145 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260745307 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26137248 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260594405 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.262718771 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261193619 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.262242014 seconds)
  done (took 79.305686898 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261201985 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.261902528 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.262514507 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.262725493 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262415494 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.262267449 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.261584906 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.262509575 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262505154 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.263023854 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262373797 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262066246 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26740358 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263441936 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261800144 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264078403 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262341082 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.262171767 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262969869 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.262648138 seconds)
  done (took 26.422489361 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.26262083 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.263823518 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.262124358 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.263555294 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.261921782 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.263006492 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.264187031 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26717642 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262237865 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263482408 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.265178998 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262937572 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2633298 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263247717 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.265574948 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.262954534 seconds)
  done (took 21.387349747 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.264667566 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.263010774 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.262761873 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.262528864 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.263236788 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.264934722 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.263753053 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.265167853 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.264201355 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.263982598 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.26377026 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.264358225 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.264731802 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.268944173 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.262900874 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.264838826 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.263229572 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.264126149 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.264583523 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.264537452 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.264373811 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.264921676 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.264156099 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.265462623 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.264092241 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.265318094 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.264918212 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.265676631 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.264911089 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.265260772 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.265295993 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.266100708 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.26391436 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.266423309 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.264677906 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.265375828 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.266077428 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.265245367 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.265613857 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.265535798 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.264372468 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.266344204 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.26496891 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.265389759 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.267910846 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.265077298 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.266351143 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.265780396 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.266749341 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.265149278 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.266509305 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.266434687 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.266474703 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.266692599 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.266677733 seconds)
  done (took 70.750768552 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265488476 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266772127 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.266883644 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.267506165 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266823052 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.266969546 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.267202594 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.267895318 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267205661 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.266702818 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267674296 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268441916 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266325398 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268602945 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.267110657 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267142895 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26742647 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269066409 seconds)
  done (took 23.983277224 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.267757027 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268102153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.268189827 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267448281 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.26730759 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268831137 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268830687 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.268596142 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269404582 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.268512488 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267548036 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.268781577 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267362004 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.267501027 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269183994 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269159736 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.269190176 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268701878 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268163075 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268786739 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269228354 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268354356 seconds)
  done (took 29.07868348 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.263048305 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.263663978 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.263597134 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.277735814 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.284676808 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.264128887 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.264001213 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.264899411 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.284574413 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.328797455 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.322796792 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.283666538 seconds)
  done (took 16.540263868 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269547957 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269675116 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269152192 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270412294 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270099112 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269307749 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27103752 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270436854 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26955794 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270285236 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271581309 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270932018 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2696801 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26981475 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269990615 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27122414 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270076044 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26996074 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270162327 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270370539 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271146259 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270705137 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270594165 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270719565 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272462851 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27152596 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272120969 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271164006 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27004552 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27099261 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271168488 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272683617 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271755056 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271933518 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271808733 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271670306 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269663608 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270878317 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270526254 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271551044 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271323735 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272031712 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271458642 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272085234 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271454899 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272086435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272272328 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272725614 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272292372 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272171734 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272574182 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272172031 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271664447 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272888687 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273817794 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273334048 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273222483 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27319826 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272901204 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272649324 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273579269 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272840584 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273849139 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27355078 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274368697 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273823622 seconds)
  done (took 85.096785627 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273573308 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274145449 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272557598 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274589609 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273133896 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274456929 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273292646 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27343026 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274057187 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273603238 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275107295 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274017211 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273390336 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275383089 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274711051 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274163503 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27502012 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273939599 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274726281 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275734126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275347542 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275377888 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275180668 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2749855 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275423231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274502591 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274593281 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274407605 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275259087 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27506532 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27588779 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274656862 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275015839 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275429859 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275584889 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277051418 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277004815 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280714253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276404833 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276093343 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275870723 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275916134 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276806179 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275504745 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276458522 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276098111 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277381189 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276175194 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278093233 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277201735 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278037182 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276480502 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276519922 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276281709 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277196207 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277318933 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276314654 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276664153 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276376976 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277155481 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276563173 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276901603 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277450227 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277308613 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278108407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276540543 seconds)
  done (took 85.37628596 seconds)
done (took 1774.264518317 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.438612375 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.391393534 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.27292756 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.287386628 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.27169696 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.268235355 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.284910643 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.272362087 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.273595894 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.27266415 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.273212021 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463128692 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.271311131 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.274324108 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.274391444 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.369190553 seconds)
  done (took 26.14197888 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.3021633 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.281928279 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.384820705 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.29478626 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.301083252 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.457946934 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.336027416 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.278671237 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.438789745 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.297911452 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.268850712 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.299732766 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.278845179 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.268695671 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.310161151 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.461116443 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.51951339 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.278594867 seconds)
  done (took 28.242676609 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.700596698 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.312020816 seconds)
  done (took 5.196029079 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.296772177 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.278685933 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.279822399 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.277399641 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.269366685 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.26993291 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.276470718 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.275142347 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.271188938 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.398838221 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.279584084 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.294871704 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.29534236 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.279005424 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.281988714 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.323483701 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.426345539 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.28259197 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.28155704 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.283854653 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.27934043 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.387693445 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.319157523 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.284512811 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.397014895 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.283146716 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.283572836 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.287796297 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.402319795 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.284886888 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.279222911 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.280547362 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.280451994 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.274419291 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.755669892 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.307302443 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.28746608 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.303623646 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.283136323 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.439347812 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.280056904 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.287243224 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.280839741 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.750037368 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.410645108 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.396428262 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.306712993 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.280996208 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.282273836 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.345665839 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.28364807 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.28188471 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.340238181 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.078377342 seconds)
  done (took 82.42412322 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.282479933 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.274058536 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45263484 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.301288925 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27523301 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.274544666 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.292210042 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.545615909 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.304604902 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.275048106 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.556156178 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.836021598 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.299171044 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.333641592 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.145118069 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.350662664 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.276165457 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.289641278 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.277250956 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.279931753 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839544482 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.279604365 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.295363402 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.447013047 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.317194902 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.778865308 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.27894239 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.278232886 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.294749305 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.274462446 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.789702649 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.295644788 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.346736184 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.278734503 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.540183242 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.636890834 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.600461342 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.279657362 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.30659268 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.281508422 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.287069804 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.760163509 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.619662738 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.276787777 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.278258156 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770857213 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.27628385 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.278597835 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.278542984 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526225235 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.277095169 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.27881594 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.294828287 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.280541659 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.276747647 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.365479908 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.37124209 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.779210311 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277698736 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.278639045 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.299066532 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.279647399 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.283965914 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.27778585 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.296811267 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.622708084 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.430611588 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.286402875 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.62245201 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.787502526 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.294456598 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854058135 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.295184124 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.305715605 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.495119636 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289776202 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.278948371 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789443306 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.331388222 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.279586458 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.603466798 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.282556548 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.563321792 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.295330248 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.278993945 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848742067 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.285650029 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.296403019 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.280001034 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.278900746 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.2806427 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305278413 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.549044513 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.326352909 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.282263453 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.280424126 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.317203633 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.280650321 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.279659942 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.289935168 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854780515 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.296091667 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.28065185 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283337498 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.279994533 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.296156551 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.281962228 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.283914768 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548884316 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.281167022 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.304675628 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.282627367 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.282464445 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.290643943 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.451316584 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.288179052 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.5754417 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.284410906 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.280946195 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.30335722 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281599334 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.289349976 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281303961 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.289384156 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.194864756 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.553209513 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.300746058 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.297617436 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.282547945 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.298256179 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.281581952 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.285567808 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.349134893 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.288722353 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070802741 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.307810389 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.3159591 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.282598482 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.289112389 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.283256545 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.286572414 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.285356592 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.57274304 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.547992228 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.432329798 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.293438669 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.28324782 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.04824701 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.346035083 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462715811 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303597515 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.283280544 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531644588 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.518938416 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.285128955 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.283782001 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.286755947 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543951364 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.283251752 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.601372591 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821250997 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.299931768 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.293747773 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.069676213 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.97701843 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.285583859 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.286063653 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.563136111 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.300188379 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.284529931 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.285045382 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.283966422 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.301338267 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.302642704 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.292853267 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.285527736 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.284176125 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.329647198 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474555702 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.303837463 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.286821381 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780108228 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306782351 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287063489 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.303330271 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.288034827 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.285298005 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.36327837 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.288444816 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.319626356 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.288095565 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.289437731 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795619133 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.28624194 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.287106648 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.476433655 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.979135006 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.301117626 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.288511927 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.302143001 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.201903716 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.804515068 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.330891475 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.58153518 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.29594513 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.324370876 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287142263 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.402332478 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806033701 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291375854 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.30620538 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.935967141 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.303146794 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.79660365 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.2879211 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.289301806 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885363568 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.303908178 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.292940949 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.288476765 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.289670094 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.584968152 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.288415869 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.309545205 seconds)
  done (took 486.957128134 seconds)
done (took 630.14273046 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.288332246 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.29016535 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.284645193 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.29666761 seconds)
  done (took 10.361356318 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.305667357 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.2964785 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.302038576 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.296775827 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.302609081 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.29627251 seconds)
  done (took 9.00316104 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.291376926 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.29721566 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.296349181 seconds)
  done (took 8.086670556 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.490492136 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.317181399 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.605465477 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.320921326 seconds)
  done (took 8.938184187 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.301491744 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.301434205 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.302136062 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.302763434 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.306436269 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.306720304 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.303693025 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.303339302 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.306692383 seconds)
  done (took 12.93801414 seconds)
done (took 50.52644964 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.376510729 seconds)
    (2/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.373950538 seconds)
    (3/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.386844766 seconds)
    (4/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.354392704 seconds)
    (5/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.374160694 seconds)
    (6/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.403579916 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.368016966 seconds)
    (8/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.352712899 seconds)
    (9/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.310844421 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.324564955 seconds)
    (11/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.327813386 seconds)
    (12/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.286179153 seconds)
    (13/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.478296644 seconds)
    (14/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.344187781 seconds)
    (15/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.425279662 seconds)
    (16/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.401719157 seconds)
    (17/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.28574995 seconds)
    (18/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.318303796 seconds)
    (19/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.28922467 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.460334781 seconds)
    (21/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.368161191 seconds)
    (22/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.329567923 seconds)
    (23/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.290432733 seconds)
    (24/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.055066093 seconds)
    (25/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.34886229 seconds)
    (26/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.948457487 seconds)
    (27/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.422370961 seconds)
    (28/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.426721163 seconds)
    (29/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.487678526 seconds)
    (30/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.316176001 seconds)
    (31/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.342907707 seconds)
    (32/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.446867367 seconds)
    (33/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.456911634 seconds)
    (34/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.988124464 seconds)
    (35/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.642679082 seconds)
    (36/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.35601051 seconds)
    (37/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.500331351 seconds)
    (38/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.354161671 seconds)
    (39/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.333781541 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.36902944 seconds)
    (41/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.471561259 seconds)
    (42/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.291572876 seconds)
    (43/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.346630092 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.49741467 seconds)
    (45/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.393210646 seconds)
    (46/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.493644687 seconds)
    (47/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.311748971 seconds)
    (48/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.682292731 seconds)
    (49/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.329733988 seconds)
    (50/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.475086929 seconds)
    (51/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.341151342 seconds)
    (52/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.36265447 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.433892689 seconds)
    (54/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.462191246 seconds)
    (55/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.44666925 seconds)
    (56/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.331987291 seconds)
    (57/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.348480394 seconds)
    (58/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.406721831 seconds)
    (59/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.296663189 seconds)
    (60/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.305940791 seconds)
    (61/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.49820346 seconds)
    (62/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.393057855 seconds)
    (63/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.34299714 seconds)
    (64/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.40173611 seconds)
    (65/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.327260476 seconds)
    (66/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.32276452 seconds)
    (67/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.325191759 seconds)
    (68/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.491585563 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.441091606 seconds)
    (70/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.414340807 seconds)
    (71/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.449828135 seconds)
    (72/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.198760499 seconds)
    (73/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.090025589 seconds)
    (74/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.312399897 seconds)
    (75/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.376737463 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.408095346 seconds)
    (77/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.334307572 seconds)
    (78/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.466538433 seconds)
    (79/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.440711865 seconds)
    (80/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.494040894 seconds)
    (81/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.305282598 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.503595435 seconds)
    (83/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.405883931 seconds)
    (84/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.438742996 seconds)
    (85/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.330154611 seconds)
    (86/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.433491783 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.436868058 seconds)
    (88/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.499589286 seconds)
    (89/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.343937807 seconds)
    (90/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.044790657 seconds)
    (91/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.368461808 seconds)
    (92/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.476467721 seconds)
    (93/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.371927413 seconds)
    (94/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.495072234 seconds)
    (95/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.413611678 seconds)
    (96/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.377476243 seconds)
    (97/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.439480187 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.410360487 seconds)
    (99/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.081069151 seconds)
    (100/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.324848122 seconds)
    (101/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.392747743 seconds)
    (102/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.353647838 seconds)
    (103/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.347138436 seconds)
    (104/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.376579179 seconds)
    (105/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.414393839 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.407411072 seconds)
    (107/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.330185426 seconds)
    (108/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.012066281 seconds)
    (109/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.304692725 seconds)
    (110/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.42810337 seconds)
    (111/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.418079963 seconds)
    (112/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.292263386 seconds)
    (113/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.528457914 seconds)
    (114/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.377459564 seconds)
    (115/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.353251709 seconds)
    (116/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.407079264 seconds)
    (117/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.983814443 seconds)
    (118/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.649938119 seconds)
    (119/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.417461492 seconds)
    (120/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.338322682 seconds)
    (121/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.557686896 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.429958306 seconds)
    (123/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.301142862 seconds)
    (124/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.424043603 seconds)
    (125/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.407400579 seconds)
    (126/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.328892922 seconds)
    (127/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.407118168 seconds)
    (128/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.379929703 seconds)
    (129/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.32101635 seconds)
    (130/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.449969075 seconds)
    (131/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.317328888 seconds)
    (132/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.418371855 seconds)
    (133/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.317857882 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.381570349 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.335812532 seconds)
    (136/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.211364753 seconds)
    (137/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356397229 seconds)
    (138/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.297771793 seconds)
    (139/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.299117165 seconds)
    (140/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.060788335 seconds)
    (141/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.97794058 seconds)
    (142/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.360872652 seconds)
    (143/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.041529149 seconds)
    (144/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.394579499 seconds)
    (145/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.303408877 seconds)
    (146/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.466515639 seconds)
    (147/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.338352685 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.510492473 seconds)
    (149/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.293834442 seconds)
    (150/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.341861653 seconds)
    (151/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.292886522 seconds)
    (152/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.528501906 seconds)
    (153/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.317255387 seconds)
    (154/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.957330056 seconds)
    (155/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.294328888 seconds)
    (156/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.359528781 seconds)
    (157/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.334790689 seconds)
    (158/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.595870338 seconds)
    (159/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.430311625 seconds)
    (160/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.378368204 seconds)
    (161/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.386239898 seconds)
    (162/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.436718562 seconds)
    (163/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.50270964 seconds)
    (164/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.958499985 seconds)
    (165/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.473596977 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.334687953 seconds)
    (167/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.983717925 seconds)
    (168/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.441173125 seconds)
    (169/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.338552079 seconds)
    (170/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.469048043 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.511390937 seconds)
    (172/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.38421707 seconds)
    (173/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.367456007 seconds)
    (174/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.444444388 seconds)
    (175/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.45454767 seconds)
    (176/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.554294585 seconds)
    (177/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.511541319 seconds)
    (178/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.42198358 seconds)
    (179/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.459853768 seconds)
    (180/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.426289486 seconds)
    (181/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.320862964 seconds)
    (182/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.117952397 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.446704727 seconds)
    (184/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.353812366 seconds)
    (185/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.53485278 seconds)
    (186/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.354872871 seconds)
    (187/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.343276686 seconds)
    (188/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.432308215 seconds)
    (189/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.403298339 seconds)
    (190/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.177253359 seconds)
    (191/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.359481689 seconds)
    (192/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.084516584 seconds)
    (193/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.321370944 seconds)
    (194/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.412991793 seconds)
    (195/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.412034018 seconds)
    (196/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.322116357 seconds)
    (197/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.295492755 seconds)
    (198/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.445294991 seconds)
    (199/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.353202174 seconds)
    (200/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.04684841 seconds)
    (201/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.317626625 seconds)
    (202/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.310645396 seconds)
    (203/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.364524645 seconds)
    (204/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.358718379 seconds)
    (205/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.47327871 seconds)
    (206/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.35129747 seconds)
    (207/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.445232539 seconds)
    (208/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.331318817 seconds)
    (209/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.122757261 seconds)
    (210/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.503518861 seconds)
    (211/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.999535593 seconds)
    (212/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.323747868 seconds)
    (213/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.486256895 seconds)
    (214/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.226190695 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.543825057 seconds)
    (216/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.482224275 seconds)
    (217/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.299201619 seconds)
    (218/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.10999953 seconds)
    (219/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.316671387 seconds)
    (220/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.026687269 seconds)
    (221/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.407286597 seconds)
    (222/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.417905659 seconds)
    (223/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.089566612 seconds)
    (224/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.363000621 seconds)
  done (took 365.040863188 seconds)
done (took 366.244020441 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360436831 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.495004762 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.313400375 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.313052946 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35859912 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.321195978 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.355712596 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.322109189 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.323535761 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.324507479 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.3194515 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.324543278 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.327855503 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.353966296 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.427562258 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.322187282 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.314802215 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.320388409 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361791855 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.380581759 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358109874 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359315611 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.334743995 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.31508071 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362737127 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363388785 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.320974939 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.306898332 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.322446181 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.36232192 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.307535509 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.321419835 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.371877068 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371540937 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358610099 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.319519737 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359241173 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.498323863 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.357666868 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.354277131 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.325641032 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.3722165 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.325621817 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.32621035 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.370842391 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.333862288 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364618972 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.438940589 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.307765244 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.313631666 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363069495 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.383534979 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.329137362 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.318165541 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.322678337 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.441839991 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.323823291 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365545741 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.325145024 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361938292 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.430222702 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364175489 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.383123715 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363818085 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.325122446 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.330421662 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.323875689 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.384373059 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.325244711 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362698263 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361221609 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.329417873 seconds)
done (took 106.485475842 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.447168354 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.318877154 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.458576875 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.321470765 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.48484406 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.469777391 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.32161461 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.321139168 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.320884891 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.148363006 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.321301177 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.3222684 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.319169199 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.321529589 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.451313187 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.32227524 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.320435064 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.034963235 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.322553236 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.46082968 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.319381959 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.322089219 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.322373877 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.170035525 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.318162611 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.313334853 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.460256376 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.323786455 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.033510109 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.314288694 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.318990924 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.034679832 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.463997313 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.34196769 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.333608573 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.332766572 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.486132014 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.339747458 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.450800381 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.449795699 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.461427237 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.360793124 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.313023868 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.320952194 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.326271369 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.325122516 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.323881112 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.353220508 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.321612425 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.323366035 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.038196821 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.33470195 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.334567897 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.325331892 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.326681214 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.344430826 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.324963376 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.326407468 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.46576175 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.327166731 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.451670292 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.143425041 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.150997649 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.325208893 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.319329976 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.326431955 seconds)
  done (took 107.778847756 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.389469262 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.398350426 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.431926989 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.337620174 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.372719797 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.435165331 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.338889457 seconds)
  done (took 10.92937353 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.328611584 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.325942127 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.372154871 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371195037 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.326420528 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.479870717 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32704443 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.332412118 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.327543541 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.375876769 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.328428571 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326382725 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.335055703 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.321024507 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.370601425 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.334446193 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.438046661 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.323855359 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326979759 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.474264879 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.32707199 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.336112749 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.37553142 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.334697541 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.329086125 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.330852731 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.108196136 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.328930214 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32692685 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.327946519 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327357326 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.377548695 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.32752669 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.323105586 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328512321 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440363891 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.327668866 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328334155 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.329732018 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.323693375 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.328106426 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.328294333 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.328787074 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.327781442 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.33011879 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.349656053 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.33005016 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.328817231 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.329665475 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.329050645 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.376822527 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.32967812 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.329156356 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.330564807 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.381791783 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.338111851 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.330326783 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.327859202 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329844202 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329566463 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.477824856 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375472192 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.329604148 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.374944776 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32927568 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.32931401 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.328635308 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.330167502 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417757667 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.33078012 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373406131 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.330336614 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.50855487 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.349668843 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.331573852 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.330209579 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.329394772 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.330744774 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.323905876 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.332490035 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.329729764 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.326762884 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.331877893 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.330405131 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330389285 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.48471578 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.436327234 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.330768755 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.340363615 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.334361828 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.332063139 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.381663063 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330616725 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.331131634 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378567799 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.443195303 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.381581831 seconds)
  done (took 136.968555401 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.340310887 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.340748005 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.33127005 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.354683153 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.329029374 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.32841766 seconds)
  done (took 9.254441994 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.329893125 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.337056857 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.33186633 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.333166932 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.332080227 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.333205539 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.332612898 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.330379513 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.336856942 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.332693292 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.334972117 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.334237199 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.335355111 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.333619603 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.333127813 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.334330039 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.333721194 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.33293604 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.333656094 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334630919 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.328607839 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.334107963 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.333986599 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.331230296 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.338752896 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.333706789 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352242769 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.335141339 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.333720238 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.3390962 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.354924656 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.335430556 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.331720324 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.336057675 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.339652087 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.330885039 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339481696 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.336989186 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3346891 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.335555192 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.33592651 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334514636 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.335741237 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.336591418 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.333221597 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.336812442 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.340704116 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.352814285 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.336209938 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.336821552 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.336665903 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.336421303 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.337218719 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.337479303 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.335251334 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353494698 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.340092908 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.336210792 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.336209898 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.333754998 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.341233356 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.336577318 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.334155998 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.340678991 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.336681384 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.338443763 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.335572067 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.341410525 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336419735 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.337859288 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.339582975 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.337536169 seconds)
  done (took 98.459855576 seconds)
done (took 364.611354909 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.147993112 seconds)
  done (took 4.383533541 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.407275829 seconds)
  done (took 3.644857865 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.362147138 seconds)
  done (took 22.603324799 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.380345603 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.347348596 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.357503871 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.33041531 seconds)
  done (took 10.651635804 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.593040067 seconds)
  done (took 3.828583413 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.331744628 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.332019328 seconds)
  done (took 5.901232509 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.573736686 seconds)
  done (took 3.80938356 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.848604713 seconds)
  done (took 4.09000812 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.360090289 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.344510887 seconds)
  done (took 5.947913235 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.321466452 seconds)
  done (took 3.557706647 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.931565261 seconds)
  done (took 38.16803882 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.340571313 seconds)
  done (took 3.581443089 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.358466137 seconds)
  done (took 3.596031857 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.934590401 seconds)
  done (took 6.171490907 seconds)
done (took 121.17104184 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.330398633 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.335545595 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.336620845 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.33358415 seconds)
  done (took 10.574339027 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.392692908 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.390887565 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.392087742 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.392763851 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.390310334 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.391309322 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.36614138 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.365140154 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.392185394 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.39093339 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.390757186 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.391450283 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.392581268 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.366116342 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.390952674 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.398026393 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.391248314 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.394039932 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.366443887 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.392112835 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.341783998 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.39199768 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.391152357 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.342296076 seconds)
  done (took 34.444434092 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.830028784 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.407076316 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.489681091 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.388737272 seconds)
  done (took 7.354048828 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.417600314 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.418053303 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.434921742 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.473900466 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.482597361 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.447140061 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.367033407 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.362171556 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.349489007 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.418723393 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.470311038 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.410871375 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.499811631 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.340935634 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.547390922 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.341868018 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.341404877 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.419898895 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.471742206 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.485355476 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.342751528 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.419796753 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.420971873 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.410285151 seconds)
  done (took 35.334520541 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.351032682 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.357652374 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.344796759 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.358263058 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.344158463 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.344015167 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.34518476 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.35008638 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.344383263 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.343519954 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.344923422 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.359445233 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.349230235 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.345020389 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.352235712 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.345185377 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.350241062 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.348174827 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.344612877 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.350251459 seconds)
  done (took 28.213578971 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.334326319 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.331662159 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.683728456 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.588187955 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.33475778 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.339251743 seconds)
  done (took 13.852875307 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.409576265 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.56150376 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.339272718 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.685213528 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.767577174 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.341246481 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.341805325 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.586667955 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.901433051 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.873783047 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.402331142 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.411030588 seconds)
  done (took 19.864401046 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.342788538 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.338179124 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.342301139 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.354444385 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.393861298 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.359203797 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.347990361 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.335315299 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.399058627 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.415144202 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.360521777 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.395073842 seconds)
  done (took 21.628540543 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433514463 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34045945 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340765317 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368146834 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34047619 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181233726 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360525373 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.04317986 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.365480333 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616387559 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341144634 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436919036 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.595822002 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349204189 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341682724 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.333601787 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569460275 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81811006 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343995949 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356279091 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373628702 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354882491 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349747155 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.549215289 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36584164 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341800883 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.604590947 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342253431 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619107537 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354775784 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351772064 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34294108 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617156613 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989392717 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458963344 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547688804 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365463172 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34470366 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.34015576 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.355183175 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346767402 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345319068 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3518676 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343017722 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342732508 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356602957 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05118121 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.368650026 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.342946744 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343246701 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595811805 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44005784 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.348944818 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343477423 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410750656 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34492923 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.349775033 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475573953 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945304219 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345215388 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375801183 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.345205546 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343351455 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374814203 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941712352 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.368195437 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.34964834 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349194229 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344834355 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356413751 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363181817 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344249062 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.368679647 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343918344 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041780635 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362669807 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345297651 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891823327 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35859051 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.34541666 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576414908 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34515177 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345778408 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.345057066 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3451787 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028134765 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352448205 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.33317577 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409661152 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065827136 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.573433224 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387220205 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376355749 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.568692683 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.333450716 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345930314 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.35766334 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346695878 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367954751 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.053517086 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365053221 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.352153776 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603491981 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.556410524 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361542651 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.347520274 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816547755 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37861967 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.361815246 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362189467 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553337733 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.947302467 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378228749 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347174249 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363411043 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3486433 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065704888 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361556614 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.449188259 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348508813 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613618211 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.124466918 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348606172 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414704125 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353007469 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348004342 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348987749 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366105175 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349240988 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.549069166 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37263176 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.375204726 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.349050244 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347439932 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.351416353 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357228548 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.350132759 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.573189362 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363140923 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626403246 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349110672 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348121596 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348940315 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.569763435 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.359822121 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.687239712 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609710304 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348585412 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36747538 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376489451 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367804174 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452200807 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371578348 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.350846593 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620875563 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.356487174 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.35572118 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349105628 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367674198 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353656621 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.360144448 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353968531 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950468041 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343379544 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358120477 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240186364 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.365986953 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418175031 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36028121 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560758313 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.376732788 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363118199 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.359491816 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.357075458 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575852668 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361695592 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.351904823 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447640995 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.820457223 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948978449 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383705766 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.352383045 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.352498991 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.350903469 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351509317 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351165868 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352716829 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560171538 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388056149 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355289605 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.935517729 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371185057 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353085921 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.376191121 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364058184 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.359735889 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353539813 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.35638269 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352172379 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355015013 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.381961639 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496231678 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.369852663 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352757761 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.871634722 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360976373 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354795544 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353175165 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388206147 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354804276 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171930975 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633526476 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366948424 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608957972 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354536793 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.387464878 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.35488488 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353366778 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371906776 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.376632355 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37947751 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.365147893 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355601192 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371668223 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928721871 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078570158 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881917193 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372797914 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.378325514 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354851423 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.067262653 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374537126 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355870079 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590321335 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081926449 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374311558 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827916536 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.388881226 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115196905 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610994979 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587223783 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371080798 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.361043563 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613950213 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567615485 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390023109 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35673783 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357402083 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.344163279 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906513647 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387884393 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438342607 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068130449 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374916864 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357881575 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.416082721 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.355841784 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762914247 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380842123 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356525409 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358179966 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363812215 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162834892 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38368268 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358931324 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973291341 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392531189 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.830698871 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379140174 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.568444534 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.391155206 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.363643336 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.370697466 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.360516968 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.611109022 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613330364 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360148601 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372930639 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890651075 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.242017357 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.365838937 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358789297 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080770739 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373643377 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639252009 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.360990876 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.369731422 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361037984 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360252266 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36007773 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.360062123 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368035605 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33247429 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839893063 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.35964582 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379237453 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379015781 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360357478 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613788756 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.375375179 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.938308442 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608361793 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366380315 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383201463 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.364564147 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366268835 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.349542998 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360584026 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360857962 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412637421 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582249511 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365329657 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.352694325 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384820666 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571241 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360644374 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369299861 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600288583 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.385301223 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.366397176 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097951044 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413420496 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370772146 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364916642 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359442596 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403833752 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449578292 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574057217 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.39597124 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.371103099 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765323544 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394403864 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36409716 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.378817955 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457612495 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363290448 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.375483182 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.136090457 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954399791 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098554246 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952826186 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637823221 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363946354 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371691822 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363023117 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524649385 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362438705 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638392769 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364325995 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.391796689 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403521881 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368496197 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364875913 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573925908 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639697849 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363979334 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363638351 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384687259 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.365393037 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372941859 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.573673903 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84364437 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906945448 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364735198 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364914699 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078630561 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658813929 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364232979 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365855439 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365062722 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.372125128 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.389627701 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.377287451 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365043551 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526751139 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620474052 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026790343 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.397208216 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.395166835 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.885026126 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365836055 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619232702 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366397528 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.578802095 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973021691 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073661223 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635560585 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436136466 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577819854 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.389891902 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528552369 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.377347025 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365857187 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366352025 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367116518 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.366626967 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.375120335 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95572404 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648669417 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.371632783 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.376956238 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397630768 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.376615902 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588207097 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066907947 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590627571 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37697726 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372990949 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367738342 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956020169 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641962953 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369634355 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.37304113 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607720824 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390840834 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393359947 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.886544969 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.366988124 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913506694 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.338881809 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389355536 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371219043 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065013045 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961434993 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.400157495 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854078097 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370941981 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368210903 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662725223 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.376206192 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370001983 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64622685 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.37432718 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36952696 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581616014 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.973631879 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155052288 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.376959546 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393178785 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.371395362 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368463588 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436099527 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369999451 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370780886 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.789172963 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393495977 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370288126 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383907104 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.382700062 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371664907 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.368978391 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37083134 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.37895145 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.383250856 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.365914761 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373703854 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500955275 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928349113 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391626608 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.050289912 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.695403408 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625150014 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372135045 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.35826173 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.376459705 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371165359 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371604792 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370656384 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383764733 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913128101 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.374866234 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.381106037 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376848785 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.372422215 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582640357 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388229316 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586129996 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395267961 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386587982 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.359168794 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372006065 seconds)
  done (took 968.474122956 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.375264765 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.393298625 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.402701892 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.461109979 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.391099253 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.46972588 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.419484323 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.378117659 seconds)
  done (took 20.563781612 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.369845416 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.378130916 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.382368352 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.377424457 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.382289935 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.840482937 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.395579399 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.377400694 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.394220205 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.373889405 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.369681246 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.367985786 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.378730899 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.377517422 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.375566537 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.380644856 seconds)
  done (took 32.800171527 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.337625402 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.517389719 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.264471582 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.414267447 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.372724819 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.381167548 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.598217918 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.39352683 seconds)
  done (took 26.553950215 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.381450441 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.381248477 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.382164134 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.381756643 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.382117659 seconds)
  done (took 8.183034568 seconds)
done (took 1229.081440842 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.379318616 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.380449183 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.380309 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.379567604 seconds)
  done (took 6.794471156 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.362086151 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.363234755 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.362912058 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.378468842 seconds)
  done (took 9.741428718 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.078195804 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.98763574 seconds)
  done (took 5.340499553 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.85938656 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.869964284 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.860757002 seconds)
  done (took 6.864299625 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.659771342 seconds)
  done (took 2.934379159 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.265236412 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.375729221 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.04829296 seconds)
  done (took 7.963182884 seconds)
done (took 40.911371194 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.381151325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.618945562 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.528724121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.384352394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.535103556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.530316434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.112530228 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.371651203 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.379724923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.375559361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.386912487 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.535138868 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.161432114 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.623044016 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.162620538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.622688317 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.537203626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.375537144 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.373575287 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.374142391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.11225493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.373120239 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.385934465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.373324682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.537864433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.51880784 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.373490171 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.623094899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.37683875 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.375378009 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.519905385 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.379857089 seconds)
  done (took 82.595820297 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.377221125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.378305425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.384790526 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.373867638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.392242815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.382316418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.373547588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.375143146 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.388681322 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.385558457 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.374710104 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.394787179 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.375445269 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.374905619 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.393688589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.376172336 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.393622222 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.383442569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.377255262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.375333058 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.377475331 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.38541241 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.375934847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.375703451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.374799839 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.377305316 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393723351 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.381304541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.376611821 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.380942494 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.37545583 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.394271789 seconds)
  done (took 77.478551983 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.379715787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.375610675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.393343832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.376565897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.375499616 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.378716789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.376339526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.376432944 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396538595 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.392541575 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.39328846 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.376855714 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.379692813 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.383215513 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379764705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.379087051 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.39320424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.401783934 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.377690566 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.377111784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.392968171 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.387553183 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.389930564 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.388405411 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.377925131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.39458651 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379622624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.377823846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.396798842 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.400473326 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.378722696 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.377961686 seconds)
  done (took 77.586134237 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.660771218 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.388197822 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.390288512 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.382253115 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.391580699 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.387478298 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.383124478 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.667424096 seconds)
  done (took 14.93219103 seconds)
done (took 253.865228653 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.382280524 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.87737859 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.426294073 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.397255709 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.406142168 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.409906258 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.603426419 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.424206277 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.607464784 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.403706021 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.405336833 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.384118138 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.200367235 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.531467629 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.225114806 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.329238605 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.265884999 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.38170628 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.949871667 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.665503571 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.407994232 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.380970857 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.234733482 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.290286547 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.371942153 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.483812578 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.485121617 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.607216046 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.543644081 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.463847913 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.893572433 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.384419133 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.40222421 seconds)
  done (took 64.509797085 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.389027012 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.516029087 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.391354912 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.391386524 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.518544807 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.410728631 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.385994041 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.389937645 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.390688961 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.391237623 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.391362504 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.392290982 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.393303305 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.442281078 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.523123906 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.407234519 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.387566554 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.51729118 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.387454735 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.388651962 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.439989382 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.392309423 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.394380113 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.444071713 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.391796924 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.392863704 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.518373575 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.413789278 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.393378464 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.517510035 seconds)
  done (took 43.991894833 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.393241518 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.970822614 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.134741962 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.396566691 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.389565276 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.393691548 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.674883364 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.393885351 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.393286297 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.393708037 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.882853603 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.412021385 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.426106986 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.163249039 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.393897298 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.394887577 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.394820115 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.390974079 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.980326799 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.399867475 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.695993684 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.396439485 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.677197093 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.400670382 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.413762913 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.390843325 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.394972606 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.220918437 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.413111397 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.884718787 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.196296312 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.6773187 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.158968548 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.167140991 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.179316055 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.401449775 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.396548686 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.892370348 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.412682419 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.392800414 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.676927208 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.393154685 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.147102923 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.081669028 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.410627738 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.396419747 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.240229603 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.908853128 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.652679236 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.398915392 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.173719984 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.397096241 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.397794202 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.395117554 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.633699828 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.396241806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.393742805 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.245278231 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.419730639 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.678795904 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.398472624 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.39467979 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.980060913 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.399098593 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.97860411 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.396247236 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.40239169 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.414036886 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.152019433 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.397437507 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.101941608 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.412657595 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.39818985 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.888754466 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.992930927 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.298392228 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.397029783 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.986804577 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.189484864 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.699764916 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.399476691 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.200899449 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.703102086 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.398271057 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.401205221 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.400805807 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.399051777 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.477057569 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.679747539 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.03003804 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.09246413 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.262466511 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.704454166 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.404156841 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.397730324 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.246149794 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.420991545 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.400958208 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.147505103 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.098686874 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.416118286 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.404471782 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.110469873 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.415784206 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.684875637 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.403088791 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.15749975 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.398632216 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.477783633 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.400844697 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.405476257 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.419242075 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.683048868 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.401224948 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.401233726 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.082650739 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.91963819 seconds)
  done (took 195.592310001 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.391743471 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.391773314 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.391211054 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.407090111 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.392090505 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.401024098 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.391003926 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.391606434 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.397887226 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.393092021 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.392107791 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.400060835 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.398849837 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.391916973 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.397651564 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.393809047 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.395130029 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.39929494 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.391857697 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.391732638 seconds)
  done (took 45.193819979 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.401816617 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.954538838 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.946036821 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.407639518 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.402308203 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.399368901 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.454954826 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.420763892 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.403882678 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.697405453 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.572250856 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.421505407 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.404244786 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.403699043 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.932123046 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.395545127 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.698984068 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.959171331 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.403790492 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.958148095 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.395019656 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.403339974 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.398919803 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.958273162 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.721161322 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.686426015 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.458488181 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.975718329 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.422141688 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.403276351 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.959034141 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.405968752 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.401613844 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.9592457 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.422284683 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.417066752 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.404457602 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.458273663 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.47598833 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.71983643 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.046159412 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.710596843 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.417905562 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.585690616 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.409153138 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.395580832 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.966916447 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.422142649 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.395180524 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.406354217 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.413084553 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.945784261 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.419807207 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.942546094 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.424251999 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.406532291 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.960899358 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.943520871 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.954938392 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.573981666 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.41910407 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.688798182 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.407133509 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.968605811 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.426092951 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.408063422 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.406879717 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.575353387 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.981216249 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.691087946 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.704507633 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.704883686 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.407659509 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.466607314 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.424674853 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.781071158 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.464718079 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.822330038 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.706846843 seconds)
  done (took 127.578063257 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.673130241 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.514514833 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.808063468 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.017822656 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.405502926 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.539854296 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.51523857 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.661044858 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.412712845 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.479347351 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.045921461 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.517521175 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.203935753 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.491590542 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.523545313 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.550583351 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.809621129 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.395761174 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.120457862 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.028498689 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.407061249 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.529983075 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.977006345 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.611800503 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.399744596 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.993339093 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.365667829 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.070888536 seconds)
  done (took 54.371443747 seconds)
done (took 532.517661034 seconds)
SAVING RESULT...
DONE!
