cset: moving following pidspec: 15461
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.297219712 seconds)
loading group "string"... done (took 0.581673742 seconds)
loading group "linalg"... done (took 7.113592996 seconds)
loading group "parallel"... done (took 0.164271475 seconds)
loading group "find"... done (took 1.117064878 seconds)
loading group "tuple"... done (took 1.975742454 seconds)
loading group "dates"... done (took 1.260278925 seconds)
loading group "micro"... done (took 0.233569809 seconds)
loading group "io"... done (took 0.966103956 seconds)
loading group "scalar"... done (took 38.232342707 seconds)
loading group "sparse"... done (took 12.263041838 seconds)
loading group "broadcast"... done (took 0.970892602 seconds)
loading group "union"... done (took 13.04006838 seconds)
loading group "simd"... done (took 4.463767855 seconds)
loading group "random"... done (took 8.925100386 seconds)
loading group "problem"... done (took 1.933536331 seconds)
loading group "array"... done (took 21.13141592 seconds)
loading group "misc"... done (took 1.914840899 seconds)
loading group "sort"... done (took 3.194445783 seconds)
loading group "collection"... done (took 17.964527782 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.538100119 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142175824 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117891129 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139419484 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185197605 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131814307 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145625073 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086172237 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.032284279 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162828577 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14010414 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.478702051 seconds)
done (took 5.064988259 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204718952 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087959222 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097438759 seconds)
  done (took 0.88926771 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067619793 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127128405 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081154471 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068669469 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067257542 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.08210958 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068337121 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06645302 seconds)
  done (took 1.273348142 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076231443 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069740943 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086288541 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068721856 seconds)
  done (took 1.020776243 seconds)
done (took 4.181576328 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.898649395 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.2370229 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190094659 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453540387 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148423679 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189179473 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669473023 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323117039 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209755317 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101968104 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105182432 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377976812 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107560576 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659734488 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076896112 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106376975 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158580966 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413353616 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082005227 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083742852 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104737081 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142090025 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101151404 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077841119 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169454818 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071376126 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148354546 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095513564 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069022763 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245351142 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190708405 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676668056 seconds)
  done (took 10.4445672 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101954563 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118267726 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069830446 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140315948 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102674421 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087263175 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072276299 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084092921 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092374794 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159691318 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11573263 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106002899 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082532379 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071118214 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101270065 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213471906 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107650268 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085952214 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08761468 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07722941 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123245201 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084063428 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094801533 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078955898 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153133272 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195358846 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111261372 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112192491 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07019677 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080889175 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132472465 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142501427 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067340463 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082818581 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140612395 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11121644 seconds)
  done (took 4.585739046 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.046768166 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160945573 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093049536 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153075246 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086168306 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109911849 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084419739 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100222912 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246403049 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.070774862 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.458834384 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129200879 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102407383 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068956648 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08514035 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069546562 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.509262421 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145454268 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102987581 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103458019 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074620991 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087444063 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35823163 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068540312 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066743857 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08572055 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059959375 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145066891 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068643771 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.219265249 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088975117 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089478277 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119893366 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178538398 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096174451 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122845353 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082075933 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067120239 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170293257 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073717861 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084171353 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08982481 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120584981 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119810596 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069412069 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08331097 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180441585 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067505077 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100580469 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.854508363 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165682523 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096553321 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084345143 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.270644543 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104397593 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066698463 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08222492 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.226358201 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.16303035 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068579065 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067263836 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084072443 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069004914 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367960669 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083228236 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.034173662 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070174683 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077508036 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086698675 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068050926 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089222579 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072877587 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101206624 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067824527 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068159431 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083747019 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066680886 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084873541 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086142658 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202889087 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08373143 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067533936 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065356732 seconds)
    (83/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103638077 seconds)
    (84/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111601183 seconds)
    (85/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070840298 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065975662 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108659282 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115116716 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069908322 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068423676 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120142613 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067494437 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10310614 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084589369 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115085742 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081194561 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068109406 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.103594404 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081094547 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065461061 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116306322 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073504801 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114985859 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094617973 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06855911 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153644011 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065347614 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082700535 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068336891 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065886587 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086228019 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068753073 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081110258 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082174597 seconds)
  done (took 21.151720748 seconds)
done (took 37.947693343 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290072554 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091681567 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092011696 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075153606 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092469531 seconds)
  done (took 1.439280307 seconds)
done (took 2.20169965 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121149579 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116916744 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064326241 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112821537 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064101203 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116838816 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114435268 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081757748 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118813269 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065013703 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112566114 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065145005 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064138034 seconds)
  done (took 2.01768783 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085507562 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084900001 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086408438 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082584634 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079436467 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083916212 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080783795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105736796 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081044075 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088994654 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065816407 seconds)
  done (took 1.68724878 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08465665 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084967757 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086297328 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082365301 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079253214 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082385491 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081250957 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103434779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081584314 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089886074 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065440637 seconds)
  done (took 1.683991885 seconds)
done (took 6.145146293 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079999802 seconds)
  done (took 0.8387848 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.696708817 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.670411319 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084976311 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134087812 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223535849 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15464639 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.440068039 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109942896 seconds)
  done (took 10.444709081 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090978618 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085963245 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084102467 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088391317 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071155872 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085880705 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070352693 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072830062 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085527175 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072944705 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08719435 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072239326 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088240483 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069382778 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072214199 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085158173 seconds)
  done (took 2.110034416 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094273682 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092975696 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091735833 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077192941 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090403471 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073559678 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092218233 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075456069 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088354352 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.0734605 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092374649 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075114572 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088577145 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066954924 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091331405 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077220099 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08778345 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076414185 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092344682 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077558864 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091370078 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06617367 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089444474 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076197403 seconds)
  done (took 2.869937289 seconds)
done (took 17.026426187 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132418922 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076534481 seconds)
  done (took 0.977334096 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08306194 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098523665 seconds)
  done (took 0.95308078 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085691763 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08186335 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09035118 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093850356 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082638578 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066990603 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103578264 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067525028 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082424612 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067934146 seconds)
  done (took 1.594739446 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070872262 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093901742 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07235653 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097691722 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07494762 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080878444 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073760411 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084221433 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079280873 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080028719 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072954935 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099091662 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072115274 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101434022 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074032755 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085544651 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088231537 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068653193 seconds)
  done (took 2.245174704 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068137817 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068266123 seconds)
  done (took 0.910140035 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069509815 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064831323 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082852052 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068598068 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080184415 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064150005 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080366047 seconds)
  done (took 1.284157656 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399872026 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109306449 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.242545327 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089396014 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103711655 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2617922 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08406971 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071887637 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089792617 seconds)
  done (took 2.26198131 seconds)
done (took 10.998938138 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080923332 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087595724 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110961908 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418540859 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106934207 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067273042 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143444627 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.205427934 seconds)
done (took 1.996827937 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126610281 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616349613 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400157983 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212082333 seconds)
  done (took 1.999996853 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.377607528 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092858199 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074369929 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068037818 seconds)
  done (took 1.3955086 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067566928 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070812239 seconds)
  done (took 0.915999374 seconds)
done (took 5.219414182 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068580388 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067486365 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080792888 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067467297 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064938111 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0806103 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067082716 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067373394 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087471733 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066951681 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081847652 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069729362 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084340464 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067448688 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06458837 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082182456 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067846411 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064575935 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080710516 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064794952 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066910974 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080545984 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065235664 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066199465 seconds)
  done (took 2.55484883 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087353177 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084047347 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07380358 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088615677 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072219332 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089128756 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073514126 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068063636 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088572073 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070213915 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087355789 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071732505 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085641604 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072387765 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085714226 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072548061 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088431089 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069263114 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073563761 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087799499 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073000919 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084335848 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071908133 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08870177 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071626905 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087445323 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070109293 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083672575 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07345654 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087561044 seconds)
  done (took 3.169455472 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072560829 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064928818 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08206917 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07243958 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065485685 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083118962 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066013072 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081758953 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066626555 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065235025 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083128817 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066004174 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065446661 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083380325 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066745475 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084300613 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081469445 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065519736 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081481245 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066154269 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068516399 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081765987 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065299706 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0812266 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066201969 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064944689 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081562634 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065430334 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06644831 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081769311 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069094888 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068010307 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081278228 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072472654 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084481141 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065724982 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069129376 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080337741 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065512237 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064650506 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080623961 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064800782 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064500468 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087959536 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065193925 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083161465 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065231963 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065760819 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081838348 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067905089 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08050806 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065480057 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067244201 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082712898 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069687362 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06443093 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081606956 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064586469 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082173034 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065255664 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064281607 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080913044 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067711214 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065607807 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096714748 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071958303 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080704268 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067108785 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066053295 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084263105 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066477883 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078614531 seconds)
  done (took 6.031121467 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117717334 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09225544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083800503 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0671091 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079785769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0658034 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069331551 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081347151 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067200274 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086913257 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065241898 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066651641 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08338288 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077894748 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081919727 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067211154 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087415331 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064006693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065241239 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084915591 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065862488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084610246 seconds)
  done (took 2.499253692 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.185694374 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088089132 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109153798 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091923998 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085234644 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075049213 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086364071 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071633056 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071778059 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087270907 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069833504 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087035003 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069234107 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085637852 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069794353 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085972466 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071726952 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085625851 seconds)
  done (took 2.366186306 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079822916 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067530957 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107006922 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067317258 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084543535 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069645713 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089362842 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076238278 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085759176 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067767203 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092162345 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070162911 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08636696 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068097535 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069725874 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083849451 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069902301 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084181888 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076055825 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08874958 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072876891 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091261716 seconds)
  done (took 2.539222105 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083093637 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068708692 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101246072 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085890889 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06414866 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065965508 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090272663 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067715056 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089369341 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069230823 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067444465 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082498897 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072608282 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083372837 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072309712 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083754094 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069811827 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067532957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086546976 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064173421 seconds)
  done (took 2.328515886 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089258286 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085198097 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069483931 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093319866 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069833077 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085752405 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077621999 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085198985 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068988803 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110618528 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069093652 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085434539 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076881948 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090810377 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069478542 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092795919 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076429989 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093728476 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068930391 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085693237 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108903568 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.179036135 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092835583 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068771534 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085110742 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069034058 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069049559 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089883647 seconds)
  done (took 3.204756567 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068897061 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067772911 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081590318 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065908582 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064964074 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081842369 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066154186 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065269586 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08478472 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066307213 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067098299 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08394509 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0686895 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084147046 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068053603 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068374497 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084063424 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065748916 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065371471 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081628589 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067701851 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067109813 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084428644 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065839006 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08137389 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068043467 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065349512 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081352688 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068013566 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065528391 seconds)
  done (took 2.963946998 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078851131 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091233494 seconds)
  done (took 0.971711293 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066458391 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082240942 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082293029 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071239694 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088346494 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068269063 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092344761 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071999748 seconds)
  done (took 1.421719907 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084097884 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078574732 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086496289 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07875731 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09490969 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083429381 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155386376 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086184904 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074471654 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082866672 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08154852 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06665328 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091368395 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068446033 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090487536 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074375282 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065901866 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089975472 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07072464 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083027845 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069487043 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092823337 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070702002 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064269565 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085989276 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076510187 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095832635 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069501311 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087809253 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075164523 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089778072 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06327345 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068105847 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085471808 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065962108 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094908779 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082446294 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087347527 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077437513 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068775084 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094743822 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063048791 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088697205 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074608026 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094623298 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068368346 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084480436 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063820484 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066228828 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086730306 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063760551 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067486 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079741431 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075062955 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087613395 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078144999 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085387533 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069528457 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071050323 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087589667 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074608519 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08632036 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070877355 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067591069 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094526032 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072507004 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093934634 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063326783 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061730141 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083223666 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077189961 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106781493 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073942793 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085844442 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069149541 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082461372 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070833384 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06948812 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090250174 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073557154 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084655638 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074375529 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092189929 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068019601 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069684296 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091912728 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067171485 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086900499 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06571305 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100148271 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067799067 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082619425 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06565152 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077360884 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087275723 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068458261 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082369936 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075307691 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062166356 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085746919 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068985659 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084822168 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078322518 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089274194 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073487078 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093045036 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076330686 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067654732 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088328595 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064654585 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086177129 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067399176 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075065302 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079054337 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07099258 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085096408 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068881985 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092957286 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066731561 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068848939 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092208764 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074497045 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083577036 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066054749 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071215396 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085353417 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072120836 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092951793 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067483687 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06308041 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080186075 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071695078 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084722733 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072203357 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08996246 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070791714 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063010526 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084034475 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072773498 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092707287 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068363342 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085371273 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073510622 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068336367 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084319111 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073853606 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086843314 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06742145 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073062647 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08528422 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063411135 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088703679 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07141836 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067189565 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088843046 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071017008 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087006819 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069459633 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084031963 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07379124 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069169876 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084193695 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068024737 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083319724 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07807513 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069604196 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080978166 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065699023 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091476254 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065814274 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067310295 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084809956 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069527361 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085312577 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066645429 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067171637 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087220506 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078565842 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088938215 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068496514 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090111262 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079399845 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08400455 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070312326 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068183838 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086025105 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068974336 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093359273 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07360198 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090263515 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07169963 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06431941 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090843865 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075098684 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084565624 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066410344 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066642342 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089913802 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073590675 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089580639 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069706551 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083418986 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068607772 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07064438 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088039994 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067583897 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084042166 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072809785 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084385533 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074422082 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068895514 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094471001 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070984002 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080929088 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071470162 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083019807 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073758185 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062915596 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082891199 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067123739 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086116371 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067621949 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070084618 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079561217 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075623335 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092468374 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068444512 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066773728 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084999408 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074432067 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086404423 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071910799 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070589496 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091490763 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077483628 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084486718 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07113725 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094746145 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068767769 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061756949 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089833147 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066653308 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084866843 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068231671 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066231207 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088008918 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075783356 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092350655 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062444419 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08767464 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067156071 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066535889 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081342293 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072435686 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087462554 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069637933 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074082617 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086913079 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068661452 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089031498 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068324201 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084821784 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069490306 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070563905 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086062869 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070256994 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084201578 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071335588 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066918103 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083640968 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070141089 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085297193 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068318362 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073425339 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085289789 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069370532 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087875619 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069833799 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069228306 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085753395 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068056692 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088520501 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069178219 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06751573 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087408577 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064429075 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091804627 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068498401 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07466391 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085286995 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065186116 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089937979 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070590489 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089262929 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069784037 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068957419 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086754889 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068178448 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08702455 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075171745 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065191161 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096428623 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075473838 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085518399 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070622259 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084689462 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069962412 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066893735 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085427884 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068861988 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085979315 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068354127 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072447765 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087744973 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068040316 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086156177 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069231871 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068113596 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086689918 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063487957 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084076272 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067912674 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068839245 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094925718 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069001732 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08481234 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067491051 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069411502 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08479418 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065527519 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092292345 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076140107 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086094674 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075059534 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084075035 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070253772 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076836423 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080244598 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066076438 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082834194 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066430731 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074253014 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086464483 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077271898 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085417991 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067831863 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065116599 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086205843 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067171348 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079713958 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066740598 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071653581 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084281598 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067694292 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085241844 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071346899 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068841399 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094725331 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067999402 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08628873 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068902135 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06460803 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085204994 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067511413 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088311112 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069193597 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065583217 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08301441 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068222678 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08541552 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069516549 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067817993 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086689232 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07455914 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085531707 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070825211 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070772564 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083993217 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071369625 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085540293 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068409281 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066529818 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088471449 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071132002 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086440493 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076920407 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084936544 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068925536 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068778719 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083487726 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06763297 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085092169 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068514154 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066667848 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086652031 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07580375 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08315844 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071013926 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066828951 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086084127 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074816805 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086242574 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071372846 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091917892 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068743528 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069050459 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.0933808 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07117165 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088972647 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069448185 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086520608 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074191646 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06741285 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092107658 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068573004 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086532165 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069780893 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06534726 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085308007 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068072959 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085293782 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073726033 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06873985 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085106087 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068096433 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083795598 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069801625 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070601953 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093072779 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069924044 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087908131 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063879424 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065571248 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087141758 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065564443 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087135702 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071265758 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072641703 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088597073 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068417419 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084691454 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076839301 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091312998 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072291085 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066099433 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089539533 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069613815 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087629863 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069767011 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068217941 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087460614 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072529173 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087163318 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067494633 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074209331 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08950573 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069831855 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08718119 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06850801 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067197402 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082231496 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068645727 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087171632 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073385884 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087081654 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069139209 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077007569 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08362053 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068137439 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089123209 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067660132 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071380441 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081839933 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070308264 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086909419 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069570428 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062652999 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085665114 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066478458 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087501018 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067654988 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063441289 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096506404 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076934017 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088115784 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067707976 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085128198 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063952811 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063453672 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08485369 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069926869 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087064023 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077712472 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066856223 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084799431 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063695561 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085805741 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070912125 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070455503 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083484355 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064390084 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084475059 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071462996 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073087383 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084794174 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068084665 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088055856 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070169676 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065854535 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088892337 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065647941 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088866193 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080477165 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085902067 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069363039 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074069373 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093468507 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069230678 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081188082 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069301497 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087151731 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069735097 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068948772 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087182909 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08280158 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089096367 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067826055 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066977615 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089185582 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067157927 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09353051 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069870512 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086319978 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072819342 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069105545 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095088172 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070512142 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094092129 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071443289 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088793368 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068080398 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067605255 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084829566 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067841686 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087227167 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069969626 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089881465 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076970755 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067085412 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096484993 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076510765 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088065047 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066213022 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085473009 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068178798 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064133894 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086952372 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067600012 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066189139 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084541994 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068303868 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085905094 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073801442 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067753056 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087145916 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069178916 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080456509 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070418493 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070146757 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086551418 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065372064 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085646666 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069331834 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071714005 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089535736 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066352859 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087450719 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069869467 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068512435 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081917476 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074980132 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08474241 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071254934 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066739401 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086971863 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069137341 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08887236 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073443015 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08729593 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07034034 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07607991 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089256851 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066333163 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083536325 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073657973 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065482356 seconds)
  done (took 46.851689037 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107819761 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083914329 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063413091 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081675334 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076784078 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08378958 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063882588 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064404926 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083624488 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066981461 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081156087 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06397558 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091123142 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086919105 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094359772 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067531718 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082196635 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06534184 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081812265 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06500575 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090718583 seconds)
  done (took 2.489409507 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077291885 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090314149 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074810396 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095963099 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069353575 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090978634 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07511613 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089968198 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096141594 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069445931 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095277741 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073170663 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086507965 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069682013 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086585013 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073093375 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095497355 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069996524 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090228798 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07484552 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090630383 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074530827 seconds)
  done (took 2.650264238 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069962524 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067604827 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087263827 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064169492 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067287509 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082025156 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072431105 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083718909 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07175366 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.073752732 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085344996 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066746181 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086730075 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063380267 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067177207 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08361608 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131728755 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071718437 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066432443 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088241865 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06331288 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088195208 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063625328 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063587904 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085297138 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072133914 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08680095 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066302924 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066632332 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085035239 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067571051 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083007794 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069425722 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067930095 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084303702 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067186327 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067190815 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085861136 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064203772 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083254996 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068089419 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063546435 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086778503 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069246503 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065912602 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084540607 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069176112 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085572279 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063524685 seconds)
  done (took 4.538999965 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086316929 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130267872 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088744856 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090879204 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102373701 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093571899 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071575917 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112022227 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065330822 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086158653 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083685252 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104666747 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086760754 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073376245 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091946295 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068027527 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086071131 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067449597 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070818273 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085872839 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071466302 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092361613 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099824668 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080701445 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089358095 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066981346 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08483293 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072474914 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098541368 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071902683 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090185203 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072881344 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100617307 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090456299 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067491078 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070105893 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102075232 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085380264 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070406758 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06550212 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088110968 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071932788 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.09292715 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101796144 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068741521 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07180833 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086346566 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064277984 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09912643 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069310707 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094623163 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099789069 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071567412 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085442431 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072084239 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100172317 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06849704 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083824666 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071163168 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097577488 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066086213 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089862849 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081383563 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087889552 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074855495 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100202357 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071550996 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090535553 seconds)
  done (took 6.680566056 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076629842 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092116007 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082583691 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101109467 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09298818 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074970141 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092147253 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074999548 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092078415 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078805713 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092471536 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11362057 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070664114 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094890093 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074901297 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093722536 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073942849 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093088342 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073853635 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09347592 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092232269 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082199063 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092637803 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100735561 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103665644 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087240937 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074560704 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092517298 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082107992 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094223501 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103957467 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074928089 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091940492 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100154938 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086062028 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092177793 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067381292 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092019213 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075357283 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092614843 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069359488 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101051871 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073621793 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088393503 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074126891 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092642147 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101055031 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085540447 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095417718 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097629361 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074950121 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100214457 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073328532 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093257414 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100926758 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106461502 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101591255 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099697389 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074153075 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101506663 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100442148 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107492662 seconds)
  done (took 6.377209394 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087901081 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096001329 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097225036 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064143227 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065662749 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09123962 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066387548 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084178745 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07685774 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094620292 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078348401 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090187849 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074789603 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098117888 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089677511 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075387475 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090009632 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072014494 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094406182 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071984942 seconds)
  done (took 2.510487546 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077715964 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103775092 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070083125 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072766261 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091035669 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073366905 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089865542 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070552977 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087375965 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071146131 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09666935 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078294789 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087213372 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074444547 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096621123 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073754498 seconds)
  done (took 2.17134026 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08051969 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096486689 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082193697 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087156883 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066453501 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083937898 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068122751 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063706321 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083791681 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081647325 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087082345 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070310551 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086762335 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067091672 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064621621 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090509628 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064201812 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084434963 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068044956 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101191872 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078487785 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084933349 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069537542 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069351154 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087829094 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07251346 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088108696 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065543438 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085229397 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068306457 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087044845 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075985664 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083389724 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066899417 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066299105 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085132969 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067989575 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086525367 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07169133 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066851861 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085224383 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067638479 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086740587 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068833186 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082609387 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068988169 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063629679 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091954171 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066489256 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086838074 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067886115 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087906381 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069486025 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076998052 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090509905 seconds)
  done (took 5.127406774 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081723372 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070124174 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082916578 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066172555 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089577984 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070748128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070815491 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089282163 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069227392 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084229585 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070078497 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088617184 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070345415 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071057947 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088446267 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071572217 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082418266 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070023346 seconds)
  done (took 2.247054941 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074607233 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067115621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093621079 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067652316 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086522512 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070388129 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06368037 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085554255 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066073117 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085679018 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06826313 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069396703 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085231709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070837512 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086779777 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068475395 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069781787 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085414546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068021494 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082268138 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070889623 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066170138 seconds)
  done (took 2.518995732 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073327733 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093713732 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16194385 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108231411 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084382785 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100146749 seconds)
  done (took 1.4887612 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09168722 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099779478 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069429987 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107282903 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076272223 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088355724 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070149247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08800392 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078761939 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100913924 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069482494 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097522637 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097084517 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078405859 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093695921 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075074251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089235634 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069788547 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08709632 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106315398 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071038566 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09677028 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071314088 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088558085 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070371924 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096447746 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077905823 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102249287 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088339163 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078964322 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093933926 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069742643 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097436596 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101019036 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072536444 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096632428 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07101077 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107603702 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075543826 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0976358 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070218557 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095615699 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097029844 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075292482 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097482266 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070325106 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093905881 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069030563 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089790192 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11349448 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075478171 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096851377 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094412874 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079175727 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096378879 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113762941 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084188628 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097620371 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093410361 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082942422 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096604723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07480446 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097471368 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101846969 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075830763 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097703731 seconds)
  done (took 6.658624344 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087365475 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107717419 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070304043 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102340686 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09736824 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070832479 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088591973 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071158254 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089102246 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0705147 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12985149 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069657688 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097116938 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09716856 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070080975 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088812676 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070958279 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096682006 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070064944 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112834013 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088492919 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07867509 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097980214 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095937499 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083934783 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095286843 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069680381 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089199174 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070632447 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089720034 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074000395 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090082418 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096988076 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06992126 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096613951 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071385622 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089250566 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075441599 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089219365 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076127095 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097947027 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106778675 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071621643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088875216 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08259348 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089754468 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069903644 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088916938 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069375676 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088425028 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083459719 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102973023 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10164912 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096349684 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071429693 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088723989 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070726494 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088141249 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070794457 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094821157 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077389781 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089047941 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113126541 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071183473 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089059101 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077964244 seconds)
  done (took 6.559615256 seconds)
done (took 129.699418786 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204840296 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185799929 seconds)
  done (took 1.258936075 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070541677 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096544347 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099447447 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12989686 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087666792 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102196227 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119518039 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080496724 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067182638 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087612202 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068298356 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088609531 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133482486 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068431356 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087263004 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070372829 seconds)
  done (took 2.332939882 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10451286 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196863074 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109818543 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06653759 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100914895 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080815159 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086665093 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077820571 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095398222 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067603315 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078411505 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096745114 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06610527 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09727619 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075486858 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099026175 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066326286 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098812905 seconds)
  done (took 2.544198981 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10447299 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14200554 seconds)
  done (took 1.122300352 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200731919 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124203471 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202184751 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.416765842 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20583762 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27929798 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175736296 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.175459438 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157687537 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169968442 seconds)
  done (took 2.979219706 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099961912 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170533249 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311763203 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137893805 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086566264 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11620309 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138849424 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090677437 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102312708 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100698881 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081599846 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097844334 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098037081 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096767205 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076166786 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098568746 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121544891 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076537004 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077121392 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097381579 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119390886 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069246535 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075538415 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095393465 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078879462 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097990164 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066960345 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087071822 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.0771739 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095360569 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079877947 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114662236 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097679408 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130956641 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082396238 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130496886 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099276296 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073043345 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096613849 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073560656 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098513776 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078434395 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105369662 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077310804 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086802283 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079425649 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086290053 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068312567 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099868828 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078946863 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099616628 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079856983 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131296216 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098331109 seconds)
  done (took 6.261664045 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.742924077 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11158756 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095179016 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.803534267 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090258359 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106224084 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.707998733 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117560893 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209976841 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758583551 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090623618 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099976202 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.178557554 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235079083 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.900597448 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.281694476 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631126607 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105298904 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108832403 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13276071 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138334904 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177127592 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149463223 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436637788 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076437336 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093407707 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136580693 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.0766031 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160383692 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085320666 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093711105 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155546781 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224812863 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153798966 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097657294 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071125608 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093516972 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.146806276 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241475525 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169790287 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157750963 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068626907 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091765486 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139836496 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131523942 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068713021 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139855691 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172242756 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148285686 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0741729 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097389188 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14135999 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138885817 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141362017 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101071951 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.267371858 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281179344 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09152566 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099418347 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105025827 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235511122 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084444203 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197762572 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138816477 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165941333 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092587186 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730398467 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146423424 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092288839 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075151023 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118525538 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095475143 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139928508 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144374995 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369435264 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143749794 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073689036 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091404885 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207197443 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104954133 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072908498 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139019255 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096019721 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101621192 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164392322 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143989107 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146513069 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.206265969 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141701753 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159920289 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074902617 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124848597 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095334304 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190188661 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170558054 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.14004958 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.203932254 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139234461 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140309316 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146314167 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098675996 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150185753 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119188239 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081162943 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136233719 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190105626 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122982897 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082385337 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095364644 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139533823 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125436174 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084517278 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.159407534 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149234461 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456297501 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146269026 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089798664 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08683908 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138564483 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160533715 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07681728 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232297943 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100392126 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168764281 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121368574 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070194951 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119137173 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141126323 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07879098 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121969996 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.15923501 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07809186 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.214632878 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188578554 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078150439 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214489574 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160227665 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076668994 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148498522 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11988942 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145978786 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099164529 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138503907 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075066255 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77051331 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143012381 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121951132 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072752434 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177493991 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09207455 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0829597 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105228951 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068586561 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.746552211 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085023956 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102149165 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103321762 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076267906 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121205506 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136987819 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093530974 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139259002 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.177140443 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099111325 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117856337 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082941804 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139568684 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096972018 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103125906 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08409705 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104313487 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122044756 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074763862 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103783777 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145983352 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140589795 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.19148272 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540730591 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069612522 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.105340067 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197353744 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070993367 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259260319 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136792373 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.193797877 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140853714 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079467549 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.282195971 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142251138 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.175974343 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105782562 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150967488 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069452542 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135457449 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141861278 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091820522 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075931182 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138489586 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.16472905 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142421204 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.933116444 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071716832 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20249874 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068859578 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170385144 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076949119 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096919009 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.23688668 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092402322 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146401193 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143163082 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093871393 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084179074 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.673515017 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105307066 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137769947 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095693533 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.170288256 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161943946 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135884129 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13818617 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075911129 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137285464 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205233496 seconds)
  done (took 40.310241334 seconds)
done (took 57.685994385 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257789693 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178671177 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241666031 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144766839 seconds)
  done (took 1.794543881 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144553163 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109912705 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118230946 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086655659 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103614665 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088016398 seconds)
  done (took 1.547867951 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.406327129 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264592622 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230150074 seconds)
  done (took 1.799310079 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261718388 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214128701 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445988171 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297268575 seconds)
  done (took 2.246022839 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176791946 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114314597 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068431046 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10746937 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158322911 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253512743 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127775385 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186859516 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08113986 seconds)
  done (took 2.222851422 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19711596 seconds)
done (took 10.711610191 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098012802 seconds)
    (2/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095223517 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125373355 seconds)
    (4/309) benchmarking ("sort", BigInt, false)...
    done (took 0.216404677 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.141656223 seconds)
    (6/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.244468447 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116684768 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.28553875 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115103621 seconds)
    (10/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.212914286 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072749679 seconds)
    (12/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.294755349 seconds)
    (13/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.075441375 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120908438 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080225896 seconds)
    (16/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104860234 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075616257 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.176369622 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120574281 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212211298 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.281564193 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.272255195 seconds)
    (23/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.276525487 seconds)
    (24/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090810214 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.25024036 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.211799779 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137811917 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13808265 seconds)
    (29/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.167350937 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131420764 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.120235875 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096846529 seconds)
    (33/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097630968 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.251540822 seconds)
    (35/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067745588 seconds)
    (36/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.23529075 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.149111128 seconds)
    (38/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.192135883 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100646104 seconds)
    (40/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102402477 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.120141781 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140975232 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096708098 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085191731 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136504593 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093041785 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099731602 seconds)
    (48/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080238033 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.273316496 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117767128 seconds)
    (51/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074278734 seconds)
    (52/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.251851941 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.173114891 seconds)
    (54/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10900423 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200437788 seconds)
    (56/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.171125453 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075365937 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092240495 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068616283 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116091044 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.065099525 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075714964 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.115182262 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053795718 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116696386 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170632889 seconds)
    (67/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.074975415 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176843822 seconds)
    (69/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.120406515 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.244073143 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.0738935 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115862955 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073258204 seconds)
    (74/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07403219 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.098224939 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087209903 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.133291315 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053870898 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113880998 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110994401 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.089881019 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.246783492 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07419092 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115489859 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127203764 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.208647137 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053423543 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.137005883 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.214359476 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.075402419 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.240133896 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068860717 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109998024 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097010921 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075849185 seconds)
    (96/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.142761834 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.104961514 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.249573429 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.2377198 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.1189574 seconds)
    (101/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062928836 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.071899546 seconds)
    (103/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.2403389 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.264232363 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075414686 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05325986 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.1163744 seconds)
    (108/309) benchmarking ("sort", Int8, false)...
    done (took 0.165974167 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053033843 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167584661 seconds)
    (111/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062648656 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.136796824 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119283743 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145961906 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194298309 seconds)
    (116/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134806979 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08375615 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055074862 seconds)
    (119/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.134283942 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091206104 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09998022 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099355028 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.102391523 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.120552404 seconds)
    (125/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053368587 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082553681 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074741213 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078865827 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.158818493 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076791547 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100270917 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075184894 seconds)
    (133/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074600325 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096044121 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073196636 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095747837 seconds)
    (137/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.158948727 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09092042 seconds)
    (139/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06443143 seconds)
    (140/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115229701 seconds)
    (141/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055002177 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053620124 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112882483 seconds)
    (144/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073120131 seconds)
    (145/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.054028398 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166793575 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053132939 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.253377293 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094742661 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150623081 seconds)
    (151/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093843477 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076035766 seconds)
    (153/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054494732 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.096349788 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077314331 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.25946609 seconds)
    (157/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.10943822 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097123997 seconds)
    (159/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078645411 seconds)
    (160/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102176034 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067646837 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.25650671 seconds)
    (163/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.239797448 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067634091 seconds)
    (165/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054945675 seconds)
    (166/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063799154 seconds)
    (167/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090711047 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.0723011 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088278457 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076245731 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081401806 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.109994143 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067573794 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090649382 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085449495 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068478002 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115447396 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079144079 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.246223518 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077815324 seconds)
    (181/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.31156936 seconds)
    (182/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07756732 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094828797 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084683519 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066546187 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090672243 seconds)
    (187/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.239923785 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138345963 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097347965 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077209259 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076156569 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.168380152 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.152868061 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053460375 seconds)
    (195/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100762866 seconds)
    (196/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05463545 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090536046 seconds)
    (198/309) benchmarking ("sort", Float64, false)...
    done (took 0.148852287 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066336079 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.139270619 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054122329 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094474997 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069783559 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074331971 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102963935 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053370494 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068003157 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.138771807 seconds)
    (209/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.123505863 seconds)
    (210/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054687708 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076364902 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097113656 seconds)
    (213/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054671716 seconds)
    (214/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054033155 seconds)
    (215/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076426564 seconds)
    (216/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069905734 seconds)
    (217/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054240325 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.170606674 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066694806 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094654097 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067039903 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075777166 seconds)
    (223/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093423336 seconds)
    (224/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063114858 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054803393 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.089764675 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066498218 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053934592 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157612752 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067209857 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095336268 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068126039 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109253098 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067622261 seconds)
    (235/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054161834 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163276412 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053517259 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074462869 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089016173 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070362491 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101413489 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053517871 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091658956 seconds)
    (244/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09642162 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066919855 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088240385 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068080419 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073595741 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135748968 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066707014 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075424638 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068635899 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067503894 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.098054825 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053471848 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066434031 seconds)
    (257/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.076236561 seconds)
    (258/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070549362 seconds)
    (259/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05324075 seconds)
    (260/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.257143058 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052997796 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.090218161 seconds)
    (263/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05362833 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073702876 seconds)
    (265/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077262165 seconds)
    (266/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053723324 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067094511 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098219708 seconds)
    (269/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078414806 seconds)
    (270/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065945141 seconds)
    (271/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076400408 seconds)
    (272/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053313048 seconds)
    (273/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069159313 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077995829 seconds)
    (275/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069553455 seconds)
    (276/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074791641 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076518713 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066767249 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064082889 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.075729301 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088330889 seconds)
    (282/309) benchmarking ("sort", Float32, false)...
    done (took 0.150437069 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074904847 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102063864 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067359062 seconds)
    (286/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073174939 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088430046 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067539539 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053395413 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193933192 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074853523 seconds)
    (292/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.0947664 seconds)
    (293/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070232431 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052623747 seconds)
    (295/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.078857091 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072726054 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190745824 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053803613 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091115063 seconds)
    (300/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070132764 seconds)
    (301/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091387969 seconds)
    (302/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091574598 seconds)
    (303/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053235396 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072467021 seconds)
    (305/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075335806 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090917406 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077037549 seconds)
    (308/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079655114 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068471916 seconds)
  done (took 35.087008785 seconds)
done (took 35.999848064 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083011435 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115628119 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07639861 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116498462 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08191775 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101879308 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074714468 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079361722 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104831079 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083121827 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102956013 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056661763 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099024366 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077047462 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098820155 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092896071 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10234698 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073686952 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07469027 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089416765 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076299065 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089737787 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068822255 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057098659 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101902385 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074560145 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073550182 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099192849 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066883809 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089795563 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070479052 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073828058 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089207512 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079778461 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096149318 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075282029 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07673573 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100443349 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069079786 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088974215 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075704666 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067355274 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095931169 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074597025 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072585404 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094792877 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075023461 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103487458 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092776465 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092346559 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075568413 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099953216 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079187007 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074013704 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094473653 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075903987 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094875243 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093400527 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098229273 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069971036 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075692548 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099053031 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072382697 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098080602 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075641602 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077375231 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100467789 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073379329 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098727445 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073049266 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067142185 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097858612 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071110789 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06769296 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09980839 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078279143 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088697405 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073381804 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073853896 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096217317 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067772362 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069028437 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.091459091 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073410526 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091225429 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056840229 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071287922 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095642293 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067748049 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076430163 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095908339 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075006067 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069308642 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101427702 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067217652 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09539769 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06756189 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067738737 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092711899 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071622786 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067088718 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092053803 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076766031 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091295866 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073861965 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081238093 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089732676 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07402342 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088606398 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067448316 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083569122 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099938771 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067560794 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091522104 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067199853 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074659018 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089644919 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067438871 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067296807 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089957187 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073190527 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067417103 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092381368 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074538183 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103461363 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067829873 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071127794 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092105518 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067334603 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073049342 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090142736 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067687064 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069139327 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08793279 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069296708 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089413825 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074981038 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069807501 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098216537 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069364837 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097714954 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07290865 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073212304 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095157624 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067473102 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060455874 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092107445 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070040269 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069115124 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089955902 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068972161 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067103304 seconds)
done (took 13.387602052 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06818873 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1710749 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127612607 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098440573 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112409374 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068514881 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102055534 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.1039226 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092705991 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128196328 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088689516 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109272964 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114454664 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090082026 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06784253 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071391235 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091658474 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08906885 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125676673 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110903233 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118423962 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089863263 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12142062 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091957441 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113196503 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095449935 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091532491 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072061214 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092840635 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102949887 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110830281 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071579286 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067704097 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124275568 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1186444 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086773689 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090390267 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085801258 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090435925 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067437685 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115311516 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101541765 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10602176 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.10569504 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075303068 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070664724 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091957417 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087730954 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11661842 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082471346 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112015524 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13463916 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071343897 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107236165 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067002682 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112007263 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106206679 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07072076 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068151603 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093013797 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067788776 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071533288 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113417673 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116273118 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072217731 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10687516 seconds)
  done (took 7.340925759 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085955239 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117832912 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085457242 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109030585 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067449815 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068388969 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091402848 seconds)
  done (took 1.595399653 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069051594 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09018196 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114177579 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091022954 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110717012 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088023957 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102480519 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068300166 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109197468 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069534672 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089384622 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129429718 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070274052 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098638855 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092516947 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092312148 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091437276 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092053455 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071488608 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115517867 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071283192 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11149402 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071037138 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068726841 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106327786 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068500347 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139295664 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07363307 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09232951 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072043398 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067148495 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140671158 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106245878 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079357462 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068145025 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106189294 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083381941 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090185658 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085089292 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097184544 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083247665 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069712048 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09306097 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067352301 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073546983 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102535162 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069976422 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092322178 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072362625 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08918858 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093015607 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082675191 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091897049 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073117702 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06959606 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097425969 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079211039 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092846206 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088647986 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070415285 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108493245 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084749166 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106727515 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085000313 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095132722 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082855476 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105810214 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072460729 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070640845 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09581058 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084745086 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090708752 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070212496 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079729366 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094187377 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09152859 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.11513102 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070341905 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102134866 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069399308 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069074363 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092205676 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091461449 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095681756 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069398995 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073024927 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095471718 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066844156 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067544014 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096024037 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067138136 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092126641 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07226853 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069618251 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094747056 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085280121 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069328994 seconds)
  done (took 9.422025226 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070500884 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069607031 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094192339 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069802418 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070215605 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092877452 seconds)
  done (took 1.452419609 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099918823 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094800526 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084090958 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097869812 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107757599 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106715215 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084807668 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108251063 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086772653 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105648989 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084463172 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10709622 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089015706 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098651483 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083870771 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097790669 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084403737 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101858756 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080895209 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099086473 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089656957 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098516024 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075947396 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108224504 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07331014 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074505679 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10234004 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081519691 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104559139 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08418434 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098606771 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073328664 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09691402 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084516222 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108003093 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073395536 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09814453 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073471936 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101753999 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072839601 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107507546 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07601481 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079469165 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097339533 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106797719 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074694956 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074261012 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10126505 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083624047 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097096463 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073503884 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097591947 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072712632 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097477956 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073462135 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106914025 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074404183 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108151949 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075137911 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073656097 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095486739 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072760324 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1067562 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072822321 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106410973 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073199845 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097040968 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076045962 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098275321 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075168605 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073005024 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095308141 seconds)
  done (took 7.454242907 seconds)
done (took 28.232428336 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.656879689 seconds)
  done (took 1.638666284 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.779744725 seconds)
  done (took 1.766155308 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.841590172 seconds)
  done (took 15.833311069 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.614538633 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.756455356 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.807044264 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135723554 seconds)
  done (took 3.296290582 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.893050871 seconds)
  done (took 1.904746254 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235803081 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225983783 seconds)
  done (took 1.454211861 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736854443 seconds)
  done (took 1.735200638 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.3117937 seconds)
  done (took 2.303085331 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322018117 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181487077 seconds)
  done (took 1.50462085 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.527944477 seconds)
  done (took 1.525112868 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.627810297 seconds)
  done (took 7.631822144 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231220307 seconds)
  done (took 1.245728509 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.269190043 seconds)
  done (took 1.272170439 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.124494827 seconds)
  done (took 4.12740608 seconds)
done (took 48.228501712 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079792107 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083363227 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10575043 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079990071 seconds)
  done (took 1.346597871 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079995545 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075346869 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102375255 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074321288 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103419523 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075789656 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100385984 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079032987 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074436123 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099408366 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075701018 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098377638 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077653542 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10002575 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07234404 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077792976 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101456518 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075185191 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100775406 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074975245 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072446953 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100037797 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077600186 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096835482 seconds)
  done (took 3.077199571 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079550818 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074479151 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09970491 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073188075 seconds)
  done (took 1.333096549 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079102485 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116343456 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090106625 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078751016 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117703159 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111544081 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07187023 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071965618 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097699803 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079191125 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092916283 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099184702 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11266684 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078741498 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103539627 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06719134 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069954477 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112563206 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078712877 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103057108 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072151529 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082346638 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093566655 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091377658 seconds)
  done (took 3.186051682 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079203366 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104715158 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103837322 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091219992 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117202155 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067660074 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102220996 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093293931 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151316844 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067490712 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096424073 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067545753 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098253974 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067873052 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078594434 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134708548 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112648283 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094482727 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098925274 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.09194582 seconds)
  done (took 2.93523352 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076746702 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071822792 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090630538 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070282202 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077557308 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097926566 seconds)
  done (took 1.497622038 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070362566 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068698914 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092350309 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068253543 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073612269 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092791408 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067362868 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068507605 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092346562 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068264391 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067608279 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091521588 seconds)
  done (took 1.933849032 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.433948658 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070027235 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093959314 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066699233 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072428904 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09178294 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082180051 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069363672 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116359897 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06849819 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092832615 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070555739 seconds)
  done (took 2.343856751 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263156626 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079441435 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324932935 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168990882 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140809949 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157715102 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105974716 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140932693 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198851253 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139232972 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200830551 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224862814 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135496875 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168536461 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116575196 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133014808 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18669072 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221853311 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106198081 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22583686 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207525806 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157191545 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181456979 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130187307 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136191788 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151805515 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073622313 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107621758 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231998974 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161322131 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203233159 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139126994 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098692964 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231851668 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225864553 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196311211 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16376454 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086901921 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.15881971 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166371841 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256359402 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115530299 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195073021 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134161124 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107396346 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173291942 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146906407 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.14829623 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137884881 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116146104 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174637512 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239401531 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165586298 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113891525 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138293331 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143063899 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144533312 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104490155 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268391542 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196025011 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160248102 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097952266 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099671412 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21147246 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159505463 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142578781 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153117024 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121023745 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168117498 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212428135 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147538559 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174913552 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182501921 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090575057 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147811511 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195556429 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157497266 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228540304 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15551153 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07490332 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153130483 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1314864 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107188816 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144026737 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102637958 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206999947 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126830205 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140351561 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139433926 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136954586 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11184512 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221054477 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202585243 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130959304 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067853012 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131078272 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151100878 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176081507 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114907828 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137531976 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148207548 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081384819 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191866618 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077146032 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153369028 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104913767 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153721853 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163013096 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07751951 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155743396 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128579067 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129578984 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164314265 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220750104 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091813732 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109304469 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226717452 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157064736 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133265662 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176317685 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215873644 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10354281 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130898514 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206110027 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24314727 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091944941 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223378591 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135945941 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085315769 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115383508 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155519819 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140260064 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150211484 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108817804 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155319206 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19935974 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101770966 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123386142 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167223071 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084332609 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108849314 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141138993 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127981724 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097772054 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127593299 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134108427 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170459541 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180041575 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110344555 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179824475 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100927795 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225134254 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116205354 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131673871 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106954086 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096920392 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165677467 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21798702 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081946188 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226403015 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155395666 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132637363 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149428591 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084999919 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195733691 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081695885 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073301675 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198901391 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139921284 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138627174 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185869255 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131827601 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154776846 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151946352 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163940784 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186588077 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162661611 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134409581 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090022211 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141478691 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153961613 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101268111 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121642094 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084927789 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132041833 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123413418 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08619476 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198398322 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156109297 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125722898 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115764669 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124617425 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205590859 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079474472 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159636225 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146826297 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122659149 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211357531 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187887103 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164356511 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127631936 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201789818 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073428896 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076183567 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118101419 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155825651 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111001192 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086053508 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171185657 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180902913 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157475795 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167464364 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139101222 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151019653 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213838428 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074033867 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144547326 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17966629 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154196261 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155637591 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113963339 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101451121 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201626096 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135776707 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245301517 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14479934 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153694985 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182017808 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131126178 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106848963 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108944891 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192018143 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134037633 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183274035 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127532273 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115696611 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138293098 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083475223 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131896171 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154991378 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148664341 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189100781 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144500564 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162135132 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078928538 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149844321 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176780906 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15128472 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067169426 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148755024 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220331546 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12313294 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147767158 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185481965 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106617776 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126595634 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234991093 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201782888 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085824482 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137760675 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149424282 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183040249 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148571185 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171066145 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139711875 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165797617 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138026018 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08697716 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116291514 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125822939 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135304108 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097323637 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139443929 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145577421 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122317907 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16038294 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139475752 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139126802 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1469423 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126157329 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092972436 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126214005 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234763584 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151132676 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233494801 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103367303 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205632237 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226136959 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077024955 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107271843 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083291948 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195800515 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087096605 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163173506 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124213729 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13305714 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155652981 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172691734 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124159344 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07071399 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138514041 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162956831 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139834206 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1263845 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134054638 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222445459 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.106206971 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107524064 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154166617 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10611073 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130790316 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233450826 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063034115 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125206283 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102490012 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083600286 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15824373 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214064071 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109216098 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.130704594 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146404182 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149630661 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158666455 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129432847 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126997329 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141690512 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180580113 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156992476 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.11892318 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142055903 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157963505 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214855725 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133366573 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097254587 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231222895 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211486786 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196284636 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117365099 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144600076 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144839389 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138607716 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196736441 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086363848 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225900467 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085493789 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19328318 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133575718 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120706391 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159775456 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098796097 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117166065 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196483016 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173635174 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08538984 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107239741 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147112949 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151828743 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135287507 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07728124 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193947509 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076173951 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166490823 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228406753 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083419128 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135047585 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125473759 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108868756 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137286765 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105192863 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114671066 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123955868 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225702423 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118540252 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20782806 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171351124 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143007328 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194507395 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102320678 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.6626247 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107016871 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186730093 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148415142 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261981138 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100721766 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150311588 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139979876 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152962648 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199730604 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132886781 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178302748 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187495267 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149118222 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082804857 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130632781 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139265926 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11896345 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135364984 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143380864 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145053824 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.102597205 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.173336773 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157112988 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083853291 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124308015 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215130585 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147423407 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175042412 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170962969 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11304352 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147684884 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168980394 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108326073 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153113184 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21536691 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136122835 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100747554 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109554723 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133904488 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229461163 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076113418 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220176488 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154280678 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137731167 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143564593 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148342006 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162397915 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137005387 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154705556 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123042274 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140664644 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145171547 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11200153 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079330918 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134508318 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141239941 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12792961 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129998005 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121942543 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207949505 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073257715 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124632861 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130176357 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175610586 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237983231 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116321704 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086538129 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14813122 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141129096 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143743799 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155196033 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109989143 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08441155 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110977359 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116288586 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134476025 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144955826 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131009236 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13968435 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224955582 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086391971 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254020782 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122599725 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109252449 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097309844 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082088649 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124128106 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126065996 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136179386 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099854074 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232088341 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125670344 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092003291 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120303955 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100427934 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085548286 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159752857 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139330178 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150177129 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126673069 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064973927 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137399928 seconds)
  done (took 71.631140196 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134578272 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104752035 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118330125 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173251076 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147135776 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237150445 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181020087 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223404933 seconds)
  done (took 2.421300893 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071020279 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.11806486 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102660897 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116597289 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090234422 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070293706 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293013624 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111274396 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067940951 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115276391 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.11941271 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092681279 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.467732937 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066787221 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095384161 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086279583 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068973987 seconds)
  done (took 3.240550517 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.42576669 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.631348467 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449186072 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076460824 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.906202908 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108096428 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.331059473 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163090862 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090957893 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.431581347 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728451184 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.150483902 seconds)
  done (took 17.590113662 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076612962 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07015633 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110625041 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084529831 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099552291 seconds)
  done (took 1.538805288 seconds)
done (took 115.074984524 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083380922 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.346481212 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054177322 seconds)
  done (took 1.529762127 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087017618 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085214555 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112105581 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084285975 seconds)
  done (took 1.472186692 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07692807 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077399039 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111835849 seconds)
  done (took 1.369443924 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278000516 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165695982 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089873841 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084696106 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079329139 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105887162 seconds)
  done (took 1.372980787 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07519324 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076064927 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100218063 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077946186 seconds)
  done (took 1.427777783 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079059893 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053576729 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056366135 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082743008 seconds)
  done (took 1.376437135 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091431185 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107216555 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082372458 seconds)
  done (took 1.383210545 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108251681 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113372317 seconds)
  done (took 1.325542481 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08383328 seconds)
  done (took 1.180766673 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093521885 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141583299 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157619959 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136786948 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165790233 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137728054 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087708397 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115824411 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105211359 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089232941 seconds)
  done (took 2.337062799 seconds)
done (took 16.484276992 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079978042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393147681 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363147089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11741597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669291464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357788677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.017895421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119530962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121468989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0953755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084697634 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676385038 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986418617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350759831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974203299 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324362526 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677343048 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06882858 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093783965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069650895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975903751 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094857913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068715264 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069153427 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676646396 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372075567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096009164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323051944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06871763 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097519583 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355572659 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095852307 seconds)
  done (took 16.027250446 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072269678 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144825149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074706946 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084144567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097768925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070537896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099396832 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070452404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153563644 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068952512 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112204562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06889432 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098475444 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070069777 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088384553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095846588 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069965381 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069104345 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095107264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070225035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113884405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069219348 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068932677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095363943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069477456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10736118 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070207824 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069461445 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09487859 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071126488 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098118742 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070302453 seconds)
  done (took 3.876746313 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117265772 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153235987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074889157 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130318526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114035511 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098528867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.17163889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094393482 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156641529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070222925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113226758 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06937927 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128829234 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070390525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11569727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070023085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07069272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096239643 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069270329 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096522047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089417256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094929436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070856289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069795572 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096494479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083427663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095331798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070403572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069650778 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097604181 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07269369 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095788931 seconds)
  done (took 4.197158709 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074512924 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076924189 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110942144 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084610683 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097777474 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073858849 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074767863 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098232875 seconds)
  done (took 1.794579399 seconds)
done (took 26.998866022 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081457008 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071990186 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100999985 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083117088 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100920415 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07990162 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069398189 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103712516 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078609339 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074421113 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104395821 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068720072 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099144149 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069068069 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075841156 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09637501 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080843291 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100186618 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080851056 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080866619 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098123056 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078863569 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102215399 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080812912 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106890612 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081054788 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083875803 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101636792 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070823283 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098861127 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077976917 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084881461 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097082611 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080172016 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096011447 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069718493 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069065488 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095611376 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080385833 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10219849 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072733063 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102368111 seconds)
  done (took 4.73490307 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090907513 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09037486 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113182953 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071833568 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099115783 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064675884 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117832788 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072076513 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.094926578 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090809275 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057222196 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08826143 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072818763 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062836552 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.095718327 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058332726 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060339067 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084656535 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061837665 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060511032 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08592647 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056018029 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061435396 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064784272 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.084556144 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064351965 seconds)
  done (took 3.137531511 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077466327 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086107093 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116203765 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130731293 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134590568 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079841205 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106384475 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089205047 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116144987 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06886705 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072288551 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125794587 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090589613 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102739606 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069291313 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116154075 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084116026 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070609914 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10275469 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092380918 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112607303 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079852719 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122971621 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083151476 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068638275 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098635717 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072965889 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110349319 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073904912 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078050514 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100694803 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072809972 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098402436 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080628971 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073682289 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098179179 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091919331 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106021935 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080857607 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069361755 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099991093 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070087292 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116585038 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11314655 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09636076 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075948659 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077060105 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105302158 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069356906 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114854429 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078114548 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068875067 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099505286 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06802095 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095504769 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082539134 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07164196 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099213814 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077690261 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098777847 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081965105 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072323499 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111401345 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068431162 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103650798 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068616987 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069806704 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094871767 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093623533 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070283248 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138064463 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069603135 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097930726 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078562542 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103643892 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074689833 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06892023 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111323677 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078252255 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099355722 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077512018 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072134276 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09922653 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089746658 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098255704 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071010436 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070497492 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102705574 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071851298 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09678649 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082316477 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069002218 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098779944 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085898968 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095690643 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070898678 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074914339 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100919584 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068858761 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108039666 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074300971 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069620109 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104506839 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068923848 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098773862 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079027569 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073307355 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094682855 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072944105 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101519297 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069918808 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069899126 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098762526 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070297613 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114962808 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074918648 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073162139 seconds)
  done (took 11.479911395 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192025693 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186017304 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071673282 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180977067 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077218758 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107990275 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180108406 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097275817 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09720449 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069894282 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069912926 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131572521 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124752449 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107028285 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106861346 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069076897 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114422292 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105471765 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183473585 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177820357 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11698479 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078249032 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070761464 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.09861831 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072206407 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078308532 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114073425 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077201584 seconds)
  done (took 4.287509447 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083501407 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.138312895 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075421081 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093073516 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120822233 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069262544 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102383047 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071323213 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109051416 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081005491 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096367245 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074784484 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076286444 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10578716 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069969438 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107116133 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079292139 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070944889 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099876907 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074302232 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.108988148 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082290922 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100529959 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068370066 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075097045 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09613312 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066152024 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114608787 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068487701 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119616818 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06772414 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074836517 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.11578438 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069380487 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09623307 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073221196 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071729321 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100294317 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071203702 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067788335 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095799556 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05890359 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06869456 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108992914 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075580915 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088034999 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074775579 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101808485 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075127987 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067280344 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099870723 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072113138 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072823941 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110412279 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074081333 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102043988 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074027482 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067417767 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105484714 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072704849 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065720324 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095814076 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074912 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096162417 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077817493 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073254324 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095538541 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073425707 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07436559 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103815221 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072337311 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099434422 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067828429 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071188639 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101834065 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073661768 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073610921 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09552587 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06866987 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097220815 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057529881 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06922378 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055508516 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099977598 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067603861 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.09478609 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072791905 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075013968 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109968374 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070952441 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10300058 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070559847 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068588589 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099392088 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065059048 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099033558 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087931085 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113021801 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069505468 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067713774 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113818457 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074344185 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096205372 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05896684 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075512042 seconds)
  done (took 9.997093237 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098545096 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094969971 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098447875 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08507407 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126124514 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093919257 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.1052211 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075736804 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070417037 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114524398 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069215165 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105304038 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069726594 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078692325 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127156449 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077668633 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099183225 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078599721 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073821008 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.138617072 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084822977 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111714678 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083198711 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097366721 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074198886 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081454748 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125302262 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081850918 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109086535 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087507732 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082307383 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125561528 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088110891 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100585453 seconds)
  done (took 4.358853101 seconds)
done (took 39.102602665 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.199037161 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.421397756 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.187340288 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.063420647 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.199368188 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.222567747 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.199986754 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.18579617 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.322562966 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.186150339 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.406681874 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.800244629 seconds)
done (took 58.529085061 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.210125674 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.32584359 seconds)
    (2/2) benchmarking "String"...
    done (took 1.499488328 seconds)
  done (took 3.956368248 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.541029182 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.15446596 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.469887037 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.18522109 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.184916721 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.605222745 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.848761327 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.002314005 seconds)
  done (took 27.581412213 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.187734963 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.544270075 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.530043251 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.613528353 seconds)
  done (took 18.00797862 seconds)
done (took 59.429897787 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.181974262 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.251017732 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.228539393 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.172440358 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.312509652 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.214476693 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.512199285 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.419610948 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.185270959 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179830381 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.206750501 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.201940228 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.204158065 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.521529805 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.19496038 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.187198203 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.273521993 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.634582026 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.56410806 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.211328519 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.209416231 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.239334559 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.200761882 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.192360732 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.265797014 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.187295949 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.187008777 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.203926255 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.392884678 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.189643931 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.276996058 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.723272373 seconds)
  done (took 191.259029999 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.18691072 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.275369995 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.349266443 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.246709009 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.798763037 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.383760598 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.323610404 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.858730358 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.202853119 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.215588366 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.448020745 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.188123822 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.511046609 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.151335928 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.196184648 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.282595772 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.412092741 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.503088882 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.202176781 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.459931659 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.214590566 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.622531698 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.550818316 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.402746182 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.231657071 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.206572682 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.202601184 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.225048778 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.378537288 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.353386784 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.214767657 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.212973055 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.753553115 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048326803 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.196662473 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.192163445 seconds)
  done (took 150.337437648 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.464339885 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.188973771 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.189058586 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188851166 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217973953 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.188497706 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.713755764 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.718222782 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.693895391 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.242258038 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.250165503 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.422806321 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.191708233 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281207796 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.203153925 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.192276177 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.205006059 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.213871124 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189460684 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189694223 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.715897688 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.203783698 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.238514575 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197396717 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.190457386 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219723926 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.584378222 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190925227 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219584491 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.506479338 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.23376483 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189788019 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.496780884 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.072260017 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299085929 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192767417 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220357645 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189610945 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.458484189 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190169261 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.190356679 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194106198 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.775685485 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.193156875 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.71757757 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192497931 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.070437255 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190194578 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190514901 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.529287879 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.690665567 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.193689046 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.191056774 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.192486531 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.190032998 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191189171 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.221154019 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.526533654 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.288790637 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.191552685 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.195580646 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221317116 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.192151931 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.247791724 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193886481 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.461675758 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.247979611 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.297760405 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.718916235 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193555319 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284157696 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310354588 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.192865156 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.192028284 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192620145 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.192583922 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.29826762 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.193161148 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.583953117 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199160232 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.194040067 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.252020992 seconds)
    (82/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.285775206 seconds)
    (83/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19283879 seconds)
    (84/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502168482 seconds)
    (85/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.193172329 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.192054895 seconds)
    (87/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.192842845 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.886674397 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284536893 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.192499584 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.193306351 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19337765 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.587725792 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.721427655 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.369455591 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.195269296 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.193588262 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.540765732 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195497454 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.193333406 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.597412124 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.70007658 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.800373684 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.195648941 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300514013 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197497698 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.194845542 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.194646679 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222075501 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.194639296 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.253429111 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.195841478 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194488007 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588671299 seconds)
  done (took 342.945920587 seconds)
done (took 687.14043042 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.849007176 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.833920893 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.943759772 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.831900005 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.812612433 seconds)
  done (took 10.410902698 seconds)
done (took 11.550339422 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.372723245 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.372146116 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251809933 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.372676367 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.222293566 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.389737171 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.351874043 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.215552 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.293202086 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.266674193 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.291432583 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241586525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22069921 seconds)
  done (took 18.002692314 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486425801 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.499741455 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260775552 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493941213 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237093412 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.497925378 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382425873 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.391226485 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.38416618 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211198612 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210093941 seconds)
  done (took 16.19588658 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.497511509 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.48559748 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264597463 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.492742986 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238193236 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503811105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391052311 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392683582 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381667488 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214147069 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210037242 seconds)
  done (took 16.212985552 seconds)
done (took 51.552382413 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.204666417 seconds)
  done (took 2.347244336 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238691241 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.401114201 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220034314 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.209175725 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.206313343 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.206629417 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.210185692 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.205813161 seconds)
  done (took 11.040366121 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204316201 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.202547751 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.205717348 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.205913288 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.203982345 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.204484174 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204256545 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.206018854 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.203493763 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.206551119 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.206725216 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.206918018 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.207459887 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20425222 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.206716502 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.203823808 seconds)
  done (took 20.425450369 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.206056144 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.204421634 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.204245671 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.204924146 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.204871066 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.204627556 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.205322139 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.20405912 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.205818468 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205494872 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.204964443 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.204973956 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.205184399 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.205171368 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.203739247 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.205699222 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.205037971 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.204773247 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.208994933 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.205407001 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.205823477 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.204577665 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.205497649 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.205656199 seconds)
  done (took 30.071152706 seconds)
done (took 65.027573403 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.178778698 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.804382644 seconds)
  done (took 9.127316085 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.208130677 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.207473606 seconds)
  done (took 3.561355752 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.208112116 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.207856813 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.208237905 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.208033812 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.208218971 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.208076355 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209044089 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.209409043 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.207212227 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.208750983 seconds)
  done (took 13.228012923 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.208206422 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.208565933 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.206278123 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.209769384 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.208773715 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.206509803 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207736822 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.208604133 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.208628699 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.206044483 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.208669585 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.205782464 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.209031495 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.207627083 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.208846471 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.206240956 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.207107505 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.20772045 seconds)
  done (took 22.884848516 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208370697 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.209292363 seconds)
  done (took 3.562967946 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.205801428 seconds)
    (2/7) benchmarking "second"...
    done (took 1.206013523 seconds)
    (3/7) benchmarking "month"...
    done (took 1.207026939 seconds)
    (4/7) benchmarking "year"...
    done (took 1.207092603 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.207127436 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.207649952 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.208022281 seconds)
  done (took 9.594986959 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.210403976 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.389288971 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.466081394 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.772935252 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.210605573 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212888072 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.087590428 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.213362809 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215778361 seconds)
  done (took 13.924367326 seconds)
done (took 77.02955819 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.186813557 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.201440993 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.041562166 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219857217 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.218932331 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.544573935 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.216370919 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.325520342 seconds)
done (took 37.102180138 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.207340636 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.92097438 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.926116041 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.204441834 seconds)
  done (took 11.197969278 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.201850295 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.115794031 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.199707742 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.199239894 seconds)
  done (took 17.866031863 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.811694147 seconds)
    (2/2) benchmarking "read"...
    done (took 1.536591443 seconds)
  done (took 4.497809548 seconds)
done (took 40.916214574 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211807399 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212552878 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.20949039 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211814979 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.209712511 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.2093776 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.211865361 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.212199736 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.212767918 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.211924217 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.208740783 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.212064892 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212642317 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.21307624 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210941958 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209756326 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212859528 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21048322 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210920336 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211280602 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212674802 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21050436 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.211042358 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.211636114 seconds)
  done (took 30.22127458 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212317999 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.212265277 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212805343 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.214171093 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.210965755 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213009677 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21403895 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210699732 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.213374819 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213280102 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210731184 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.21130246 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215025939 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.210778277 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214202371 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.211649299 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213523614 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210365732 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212380435 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211455469 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213685689 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212102947 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.211655459 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214168183 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.21173302 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211422698 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214593361 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211939232 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21423444 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.212379765 seconds)
  done (took 37.526890441 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.218567853 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.221173334 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215038725 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213821023 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.214329243 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215086346 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21472681 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.214893602 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214613478 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.215031088 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214166179 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.213832636 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.215116807 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215113503 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214874668 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214752479 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.21548989 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215414741 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215242806 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214558629 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214825344 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.215779099 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.215895108 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215109162 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214973421 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215384166 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.215950925 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.215768295 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216280992 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.216469049 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.21583861 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.217126927 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.217177691 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215248957 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216398133 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.216130782 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220903689 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.22284622 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21720068 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.217881341 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.218891104 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216556638 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216291878 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21664173 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217339327 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217838047 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.218479627 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.218599615 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217753601 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.21657083 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217383639 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.216033018 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217795564 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.216258326 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.216885746 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.217634104 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.21634191 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.217653606 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217099607 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217934421 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.217703273 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216845409 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.218961756 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.217733727 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218005849 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.217751503 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.217176853 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.217430515 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217721657 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217524814 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217139967 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.21736053 seconds)
  done (took 88.75004654 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217916904 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215769946 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215522649 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216022799 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215540381 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217308168 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215656825 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218840366 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215361736 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218419697 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218216179 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216253971 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216340237 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218445269 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218103279 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216057179 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218094185 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216118676 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217867518 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219332144 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21849202 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216490674 seconds)
  done (took 27.930129287 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2185342 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218482315 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215869038 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218824479 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216423217 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219171569 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219611842 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219008075 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219442845 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218977691 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216303035 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218745925 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216949795 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216333698 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216375927 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216576808 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220370009 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218030766 seconds)
  done (took 23.079384243 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217389325 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217446042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219668602 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21802011 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.217868465 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22083632 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218066199 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220988613 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220389767 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219377488 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220674712 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220530396 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.220152947 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218269662 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220147962 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218453885 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.219946318 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217307232 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220642365 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218545443 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.21801532 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221579294 seconds)
  done (took 27.980592439 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221501819 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221209932 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218616424 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219123755 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.21857322 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221235139 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22054522 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.219107476 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.221118763 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221283465 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218308717 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221383656 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218914647 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219740152 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219148068 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218627391 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221938174 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219182092 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221480189 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218931158 seconds)
  done (took 25.557587145 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221850527 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22215494 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222362759 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222111988 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221627946 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222039514 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222255178 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221966578 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222655243 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223522324 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.222515867 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222837636 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221859806 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223677105 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222274057 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223948809 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222863379 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222420864 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223421005 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222241932 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223475746 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223007158 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223360503 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22406629 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222979047 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223474532 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223304676 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223901984 seconds)
  done (took 35.396483103 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223411689 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224155401 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219796164 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221082554 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221121733 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221266305 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221421934 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221147763 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223974296 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222084829 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224657296 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.225144679 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225247534 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224062247 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22410889 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.225053212 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224111299 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222852937 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222300311 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222186255 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.224540388 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224731953 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223803315 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222326479 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221418556 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224980684 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222044611 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221319751 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224837826 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222113918 seconds)
  done (took 37.853049276 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242280516 seconds)
    (2/2) benchmarking "in"...
    done (took 1.243261225 seconds)
  done (took 3.645936613 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222703622 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224627247 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.224609402 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222795528 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221821291 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225299365 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224116912 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222339254 seconds)
  done (took 10.949779319 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223558228 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.225572946 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.225729413 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225501786 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225653879 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.225737825 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232893702 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.241133536 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.2271267 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.22611432 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230599308 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.232698916 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.229011462 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223928534 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.224369808 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.226868951 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225499235 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226534588 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.225559853 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226142344 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225924789 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229696202 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228343651 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224582333 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226245964 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239614054 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.233084398 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227182885 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225486966 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.233312982 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.225396994 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.224846673 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.22666613 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.227375956 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.226421459 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.225836088 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238214283 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242299827 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.234851159 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22741207 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22824705 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.225449899 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.229410717 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229017321 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228749981 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227300841 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.22879578 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225289902 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.226301513 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.229816974 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.231972157 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225643851 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.225513774 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234471907 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.229990756 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236657406 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.244239963 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.230237354 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.235349894 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.240652716 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.243516195 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.23454216 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230388624 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.227973303 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237475569 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251234269 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237327019 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.243158474 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.225231932 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.228891225 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.238327502 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244560502 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.239036018 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.228794295 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228726112 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.229219818 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228509697 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229023101 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23762267 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.249134936 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.229416816 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228335714 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238186273 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249492997 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.228392005 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.229175256 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.229394556 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.229170613 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.229838579 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242098129 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.245013954 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.23052043 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.229962557 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.228745466 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.233219948 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.230625471 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.228875134 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232042934 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.228576245 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.22982991 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22954404 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.232989042 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.239738505 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231875334 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232654246 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239633209 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.232502186 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22894025 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.241889002 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.231775831 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230220999 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.23089919 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.23847892 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228789048 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232803707 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.239223801 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.230998091 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.232958488 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.23076297 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.23144868 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241615811 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.258556449 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.232501213 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.23255812 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.236553057 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.242697548 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231798657 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236604937 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.232493847 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230204585 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230272235 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.234018441 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.232862289 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.233339923 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232908125 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233052388 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.231213843 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.23299475 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.232623325 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.232818803 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.235388632 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232703683 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234330955 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.236369981 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.233856726 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.235210716 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242065269 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.233654959 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23357316 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.234700104 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.231862539 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234792758 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.235040643 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.234702632 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.233425807 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233067963 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.232105412 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.234023692 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233931603 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.234237995 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235352139 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.234240635 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236933812 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233917711 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239398235 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.232748466 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.231886707 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.234622665 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.234490134 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.234023707 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.23436103 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.232815597 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.235757673 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24132348 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234779134 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.235190226 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.238631066 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235306817 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234754602 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234406474 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.237105929 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241484744 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.234946932 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243253516 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.234802536 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234411219 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.234644706 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.235615612 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.233708947 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234832202 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.237670307 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.243462692 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25025963 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244153978 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.235187918 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.239459894 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.236161286 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.238761839 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.240684844 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.235269366 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.235592149 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235906205 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234718417 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236549391 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.239515528 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.236893459 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.235319524 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.236297006 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.237077495 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.235780355 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237032865 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.23805671 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238719838 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.235070306 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23738751 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237226721 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235665854 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.23591478 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.235479052 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235756552 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.237316565 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.237154083 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248096109 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.235249319 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238040532 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238686955 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.237194409 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.236817953 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.237687138 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239435818 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.237184168 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247613328 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.254782052 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.238700376 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247414297 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.253725555 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.237022275 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.240919496 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.238310827 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.235190656 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.240687489 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.245494533 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.238887041 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.238249351 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.237762048 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237795952 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239025677 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.246993812 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.237227555 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.236962954 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.239495163 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.240427899 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.236565206 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.239470497 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.240336645 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.239368291 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241864984 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239156855 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.239811114 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24022325 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.238233915 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.238540431 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.239125256 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242064538 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.246632391 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.24610874 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.240424767 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.242318385 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.240168729 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.243714606 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.241874445 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.239746924 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.238601646 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255418154 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.247855711 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248249363 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.24331079 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.240151668 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247299729 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.240470926 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.243941623 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239484727 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240037061 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.240286072 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.239134371 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.239090605 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241219037 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24174756 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242127008 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.241870606 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.244621178 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.241935209 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.239769188 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.240400373 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.241325941 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.241757232 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.239962432 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.241443633 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.245459838 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243009667 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.241256751 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.24063503 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249732649 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258239536 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.244812235 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.240405571 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.240924698 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.24134781 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.242528162 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.242052939 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.244336148 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.249561629 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.244752466 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.251547217 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.243034302 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25218629 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.242754359 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.245433858 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.249827118 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.240628058 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.240980235 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.242205505 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.241668332 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250630636 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.259252683 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.242287352 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.245750821 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242760957 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.242094162 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244218349 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.242368827 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242805467 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.242104246 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252815654 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.259206054 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.245683666 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245391965 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.241056386 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.243103531 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.243741604 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.241505426 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2484755 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.243432406 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.24473628 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.243144743 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.24484205 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.244539824 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.243757527 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.244024252 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.241423084 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.24364719 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252426443 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.260933991 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246556139 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.245013914 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.255895763 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244692409 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253032176 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.260904885 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.244733959 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.243657323 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.244386426 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.246785739 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.243619616 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.246071131 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.243656897 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.244864866 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.249155263 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.243774647 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.24673231 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.244694826 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.244771768 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.244567647 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253603911 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267713542 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.24585931 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248104185 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.243073701 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.246094721 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.24861016 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.245072772 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.243985408 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.247724168 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254989901 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25351396 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.245799169 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246049724 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246357322 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245596088 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.247611576 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.246564723 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.245770208 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.246063799 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.247061051 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.245775267 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252103329 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.245771527 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.246286989 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24773141 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.246415942 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.258017857 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.246148933 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.247548165 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245671942 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.246474226 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.246186102 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.24810195 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.246332954 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247076552 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247546469 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.248018037 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253104175 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.252509385 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.250414583 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.246435314 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.24717693 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.247116217 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.249180878 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247178709 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.247503882 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246577651 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.248476486 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.246925477 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.249553849 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.245306814 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.247468443 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.248021564 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248555307 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249690121 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.253635303 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24795142 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.245967904 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.247440948 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249280656 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.246803972 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.248338509 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.260376343 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251775913 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.257296728 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.256771324 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.251897687 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.248535329 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250473699 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.255791714 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.246558875 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.248966804 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.248295704 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.251106948 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.248437609 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.251133941 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248596043 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.258512988 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.249410865 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248166076 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259411446 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.267372809 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248478244 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.249671907 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.252459947 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.248729394 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.246997251 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.250204701 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.24827872 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258484533 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.268624482 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250519727 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250928141 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.247412306 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.249909195 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253304032 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250450207 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.251163511 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.247795115 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.25063683 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249820511 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250883549 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.24863005 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.249161384 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.249164116 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.251785333 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.256034459 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.248789984 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252408421 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.25029502 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.251445624 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249879463 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251863796 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.248073007 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.248858244 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.250445295 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250196377 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.251423693 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.25379676 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.250437663 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.250353343 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.252702508 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250678674 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253846411 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.260486116 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.258622254 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249218263 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.250245855 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.251055793 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.255044365 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251893131 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.250702179 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251705279 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.254024633 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.251226405 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251254348 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.251650608 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.253490652 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269903774 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.268773839 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251152974 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.252660367 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258804983 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.252971976 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.250346167 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.252936838 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.256176361 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.255350877 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.259843267 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.251977281 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259849831 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268783506 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.253062236 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.256496166 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25523051 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.259834463 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.256433655 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252897508 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.252799023 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.257869371 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.269411792 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254050938 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262037398 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284338766 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.271167558 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254450408 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.253351975 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251974332 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.253257091 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.256607136 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.254626635 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.254480962 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254612316 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.253577987 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.255419373 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25962006 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.2555019 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.254664417 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.254629105 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.25412348 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.255475354 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.251541148 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.254262034 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.254951512 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.253708089 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.254369578 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.255203919 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.254330519 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269564265 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.265687816 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.254744668 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.254680769 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.251914647 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260145379 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.256903794 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264364634 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.262546266 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.255167033 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.254407395 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.256484478 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254833061 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.252886631 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.255615684 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.255265252 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253709744 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.252986822 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.269961206 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262914045 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.261433254 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.256500338 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255307818 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.25638437 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258598838 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255784876 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256272079 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.258547334 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.255739043 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259512395 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.256226828 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.256579109 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.25829118 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.264144569 seconds)
  done (took 742.222298028 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254307221 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253943606 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254207614 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254771349 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253437506 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253249004 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254703069 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.254600096 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254616709 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.254812948 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.254939815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255255638 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25397832 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254721529 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254828137 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254697183 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254849838 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255615408 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255400925 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255496316 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255184749 seconds)
  done (took 27.539198309 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.258662416 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.255188809 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.256970781 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258305843 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254740852 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.258915696 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.254431479 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258398679 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25829072 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255532591 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.258708401 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259254549 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.255548722 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.256350684 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255349922 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259928665 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.258732163 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255542718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.258975615 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.255542601 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259886104 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.256360713 seconds)
  done (took 28.852802876 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.258700623 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.257854097 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.257245927 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.256386963 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.258982038 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.255887437 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.259628596 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.259315393 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.259597663 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.259562941 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.257058325 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.258685684 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.264851524 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.263719381 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.262136886 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.260086588 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.404077481 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.259590176 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.260250048 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.259168666 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.257730661 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.267030102 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.256644736 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.25709746 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.258541489 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.259595724 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.260402598 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.260369708 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.259223289 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.260524154 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.263312715 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.260319203 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.258303659 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.261084796 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.260744805 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.261607076 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.264465643 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.260834814 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.259425498 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.260301833 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.26916016 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.280417708 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.260964382 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.268665812 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.261409241 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.261762824 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.263914642 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.267911229 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.258849362 seconds)
  done (took 63.128198809 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.261726961 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.261511558 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.258738116 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262163953 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.261996261 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.261799486 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.260668458 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.262415003 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.259636254 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.259473515 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.262876931 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.260433471 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.259489057 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.261962355 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.263585196 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259966318 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.260575087 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.26095771 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.259832267 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.26051999 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.259800432 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.264087459 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.262100438 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.260942854 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.262052005 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.260432149 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.261327222 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.261910832 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.260639649 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.259992762 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.263032157 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.262793937 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.263688003 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.261689301 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.260007997 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.263007912 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.263458234 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.261086165 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.263105624 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.260195011 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.26358084 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.264174372 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.263560181 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.264017353 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.260903679 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.261854335 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.261284873 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.261480361 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.261360498 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.264066744 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.265029758 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.261782856 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.264207226 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.261928367 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265657499 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.264124446 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.264328349 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.262460232 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.265298866 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.262357473 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.262499836 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266095571 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.263587122 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.26475914 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.263966996 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.262541912 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.263213341 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.264791022 seconds)
  done (took 87.029333992 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2652637 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263989344 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264449445 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264894566 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266610392 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.26464584 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263938176 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.264482062 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266171767 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266197768 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264708404 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266306907 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.2650216 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.265022716 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.265636236 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266236905 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267563631 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26633634 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267884081 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265072621 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.264106543 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264819242 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.267108365 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.26534978 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.268600574 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.266013253 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266475346 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26608086 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267691877 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.265621542 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267034767 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.266603803 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265755893 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26723323 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.266412222 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.26568389 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267145059 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265988003 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.266982068 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265999882 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266475157 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266828277 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266457408 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.266093042 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26580536 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.26869345 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.266051662 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.267189296 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268265784 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266256464 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.26747204 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26838007 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269111483 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267281789 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.267552642 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.268598717 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266906051 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266379578 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267138063 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267971475 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269727571 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.268375417 seconds)
  done (took 79.72426213 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270208617 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269511708 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.265917876 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.268741008 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268920127 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.266299138 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269161055 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.268807052 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268671571 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.268826759 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268373552 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265939063 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268151626 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269881226 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267295523 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268245456 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266033194 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.26907527 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269804616 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266598112 seconds)
  done (took 26.567360364 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.267339862 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.269949492 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.26758079 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.267606605 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.269774419 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26952109 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.268861064 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269022319 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268055218 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269788615 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269998424 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270560704 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268064828 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267821405 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.26952133 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269275471 seconds)
  done (took 21.511239293 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.267478504 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272040077 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.268931598 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.270095654 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.266834276 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.267619806 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.270341284 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.269160909 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.268073375 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.273022998 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.269539371 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.270756184 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.270766777 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.269241062 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.268289825 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.270306414 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.268369494 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.267993847 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.271451703 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.271743735 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.268578605 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.268519923 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.271121675 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.271706836 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.267922173 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.271400369 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.269014209 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268984841 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.269816291 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.27198574 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.26917817 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.269897508 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.26852389 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.270404753 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.271492592 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.268998979 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.271906008 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.272136702 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.271938658 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.272183173 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.273287998 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.270135218 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.272874227 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.273302295 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.271769569 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.272597327 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.270472999 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.271469213 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.270246988 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.270844264 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.273414834 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.274201177 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.272845368 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.272439984 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.273060522 seconds)
  done (took 71.092213305 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273473387 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273178413 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272811668 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.273143258 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275463283 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.273295132 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.275841873 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.269976638 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272284884 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.275054092 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272829001 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276124115 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273325898 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274585216 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274052389 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275175956 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.273234134 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.271540194 seconds)
  done (took 24.130871064 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271930012 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273642444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.274095008 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.271764852 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.27097177 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274976332 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271380945 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.275788104 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275048979 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272464802 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272487383 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.27534379 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274162439 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.274739697 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274616313 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272008796 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.274237164 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274506097 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272887051 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271975283 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27504173 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276181029 seconds)
  done (took 29.232315899 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.271707109 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.272247218 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.290361882 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.316445289 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.303757705 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.273371728 seconds)
  done (took 8.93649934 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273564607 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274604548 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27264439 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275939926 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27505318 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272532576 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272850005 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272748574 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275143511 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273044469 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27231489 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2756751 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275039923 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27329241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274805567 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274746109 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274238237 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272581034 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274243299 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275504275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274445281 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27621621 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273130807 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272404084 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273500944 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273712185 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274575491 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274942352 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273196915 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277214098 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276303261 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274215949 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275913711 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27441359 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276422925 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276992474 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274500248 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275203063 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275831197 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274583494 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277090984 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276535152 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277416088 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274487251 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278340705 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274759727 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275442174 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274624555 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27438466 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278124346 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278261203 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274124245 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278405566 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27732016 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276740085 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27745828 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274829951 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274407006 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277278442 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274748059 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275869684 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278545562 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275416155 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275585308 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277143129 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275386208 seconds)
  done (took 85.377209747 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275310089 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274280352 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275463488 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275886553 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275466376 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276368573 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275195614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275020209 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274858094 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275162272 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277727806 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276245853 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275117866 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276303068 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273227414 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273957344 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274041539 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274250624 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27528368 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2777807 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273942345 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274894006 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272689407 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272896913 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27264373 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27494507 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273394369 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273120661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272594331 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27366123 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273806321 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27232199 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273379735 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273381755 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272709968 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273993556 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273733757 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273690679 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273297376 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275307699 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273484476 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276654706 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272909927 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274111266 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273520763 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273206131 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27198342 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272423901 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272743385 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27260315 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27320067 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273545503 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273549711 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273374369 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272758823 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271839763 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272299679 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272722746 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272724351 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27657696 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273345788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273758636 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275282431 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272927962 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272727558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27256593 seconds)
  done (took 85.298076649 seconds)
done (took 1730.681493836 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.345802766 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.265772909 seconds)
  done (took 13.821360827 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.435313536 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.386788309 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.273136738 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.302589431 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.273669707 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.282958883 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.294755817 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.27321316 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.272283369 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.273606989 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.272160413 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.456955596 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.329691209 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.273349169 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.273049354 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.367578166 seconds)
  done (took 42.253498072 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.302370776 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.279776274 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.388004523 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.297233894 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.301707103 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.454842331 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.330612446 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.278533131 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.440937845 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.318246481 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.767777343 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.30184691 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.278566104 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.337688623 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.295768358 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.453554518 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.519108317 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.773403658 seconds)
  done (took 29.329659462 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.707629457 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.272724493 seconds)
  done (took 9.191621396 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.27095579 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.304022667 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.311353944 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.313834121 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.313168971 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.305088699 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.317865378 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.324376081 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.307164587 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.304553923 seconds)
  done (took 64.284340676 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.296997913 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.279432657 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.277569455 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.276615635 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.26888855 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.270205778 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.275707331 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.27418742 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.707917903 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.397004729 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.291786427 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.28372582 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.277579201 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.277275718 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.274256011 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.312332334 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.403673869 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.274877146 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.274327137 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.282500114 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.276505075 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.399315853 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.314485357 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.27423965 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.394467729 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.700771152 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.280065917 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.282876942 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.394427472 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.274507876 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.275280038 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.277346701 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.277352699 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.82997987 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.76130793 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.281871219 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.299847905 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.284137568 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.274721253 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.448781736 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.276497412 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.28272781 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.268235386 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.735385653 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.42965366 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.383633514 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.505100385 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.278940293 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.278126464 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.337498848 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.276857603 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.27785044 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.304512833 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.014937716 seconds)
  done (took 107.744147881 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.284102626 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.757010156 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.43859229 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.291113258 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.053656714 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.863155137 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.2705377 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.541736944 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.272880545 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.27085704 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.599424465 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.758755429 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.279045765 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.282108418 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.994142298 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.272317215 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.268471341 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.028177481 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.270014296 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.270226694 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.677599833 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.284753035 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.266791976 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.310044631 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.304160615 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.709322495 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.639629149 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.705417667 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.270601872 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.266749756 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.705612602 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.271340651 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.348690732 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.267041005 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.528897903 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.59351361 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.572984026 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.267920776 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.275620627 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.269430946 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.300873591 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.697651699 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579826608 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.266362324 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.267610813 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.703934316 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.266848835 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.272762851 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.268684702 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.465043005 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.271804688 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.273352416 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.634714963 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.268557831 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.604831604 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.359584652 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.327519652 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.735040802 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271872711 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.339730573 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.319818024 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.270262763 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.266519876 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.268174803 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.267182569 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.588112522 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.680918526 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.266338198 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.58684515 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.689802778 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.270390891 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.756284813 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.088898391 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.28453762 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.307953062 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.271153671 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.812090339 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.714586386 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305750972 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.263249979 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.557304624 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.267724286 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.566454964 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.274796934 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.26277273 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.670509903 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.279303582 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.297147172 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.263649728 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.282329326 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.887720679 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.266265542 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.51095283 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.328010637 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.263539752 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.264826777 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.299698274 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.26088413 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.262177229 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.267236565 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.747435101 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.269743363 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.539003039 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.28355998 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.266422099 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.267451429 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.265501165 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.267752469 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.475971138 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.656147837 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.265968972 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.264044772 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.272571535 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.275003087 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.551149044 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.265989652 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.532065994 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.266223632 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263937418 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.28357218 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.854267102 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.271324197 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.262153202 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.278751084 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.104393303 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.47337066 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.281746499 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.277725303 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.265435496 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.279059431 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.484335031 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267953246 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.310369253 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.266759313 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919431726 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.280747926 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.287365166 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.91973218 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.271833794 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.042645316 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.284275333 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.262646575 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.555678796 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.52001867 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.548917274 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.269155602 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.267948026 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905233402 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.312726897 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.395061343 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.284178542 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.264662331 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.462043958 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.471628063 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.267344805 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.837834245 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.263722128 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471518995 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.265472322 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.5846581 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.711152848 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.268343985 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.262872771 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919576669 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.924174777 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.889480702 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.264735729 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.574153193 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.220667002 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.717620511 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.265413418 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.265802722 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.704456356 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.266799132 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.270898394 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.265088037 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.268027336 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.334854282 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.437780183 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.394700949 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.271576511 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.685521767 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.279355816 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.266594898 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.284563429 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.266449956 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.620063302 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.333542412 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.267933274 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.296507801 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.270914853 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.27159817 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.698859482 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.118410262 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.271932081 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.42161392 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.851764541 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.26956579 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.26972177 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.818681962 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.527164127 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.741965953 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.279485754 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.536728309 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.270939835 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.306738335 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.95530859 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.286160302 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.699193531 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271775041 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.27200641 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824054578 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.270993298 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.333792085 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.26966501 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.269392732 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.756868253 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.270189991 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.271350631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.451902234 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270591615 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513910215 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.271521609 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.285827424 seconds)
  done (took 1094.055661683 seconds)
done (took 1361.889994327 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.272038877 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.272689124 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.259187108 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.269960674 seconds)
  done (took 26.282085747 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.277575017 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.280275455 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.276691522 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.275329395 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.277172262 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.276754893 seconds)
  done (took 8.870224415 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.302748991 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.27247405 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.272725846 seconds)
  done (took 19.060520355 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.464028024 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.413365354 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.592401709 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.173208916 seconds)
  done (took 9.85362803 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.277079805 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.278068883 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.279556111 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.279858071 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.280011647 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.281156213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.27950228 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.280289672 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.280708358 seconds)
  done (took 12.73031826 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.725903046 seconds)
done (took 82.734226729 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.299465447 seconds)
    (2/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.334517206 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.490010802 seconds)
    (4/309) benchmarking ("sort", BigInt, false)...
    done (took 6.272328653 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.315743336 seconds)
    (6/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.065560692 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.341452404 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.453955029 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.92098935 seconds)
    (10/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.595137133 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.497586894 seconds)
    (12/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.58408195 seconds)
    (13/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.450853738 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.32350474 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.31256022 seconds)
    (16/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.269251326 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.301055252 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.27796014 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.325219918 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.31184557 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.673507693 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.471496623 seconds)
    (23/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.964342261 seconds)
    (24/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.28413819 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.259865471 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.285365174 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.277270034 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.301227559 seconds)
    (29/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.372561504 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.823853691 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.558622677 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.418300457 seconds)
    (33/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.450395088 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.026026619 seconds)
    (35/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.274890957 seconds)
    (36/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.570743973 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.071866454 seconds)
    (38/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.959669747 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.344454939 seconds)
    (40/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.823785968 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.61607034 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.395721777 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.386332846 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.018636472 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.26986637 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.55823606 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.330548268 seconds)
    (48/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.35526771 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.748689418 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.103288873 seconds)
    (51/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.410096514 seconds)
    (52/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.338235953 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.878044069 seconds)
    (54/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.617795724 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.272104813 seconds)
    (56/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.60748852 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.315427501 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.33419278 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.27179974 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.345605932 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.261043596 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.378168167 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.084098136 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.866570691 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.65619521 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.287888409 seconds)
    (67/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.558424217 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.276631802 seconds)
    (69/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.449428469 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.37874687 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.500809265 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.482249562 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.722820746 seconds)
    (74/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.305158746 seconds)
    (75/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.379354172 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.587642633 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.310579918 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.559201854 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.956259017 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.263005779 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.388503569 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.496233833 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.303252255 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.347819435 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.346860031 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.572124758 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.437807715 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.431491432 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.253712967 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.542847562 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.384764489 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.277277138 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.556231017 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.319462998 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.304254791 seconds)
    (96/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.280037045 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.41942354 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.475178493 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.619312893 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.121353666 seconds)
    (101/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.599982551 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.699894863 seconds)
    (103/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.951905951 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.265606983 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.294874165 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.537790865 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.49836932 seconds)
    (108/309) benchmarking ("sort", Int8, false)...
    done (took 4.317705328 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.493055231 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.28723901 seconds)
    (111/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.602295132 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.26325934 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.056340428 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.276639728 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.289516426 seconds)
    (116/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.267040128 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.431872449 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.267783488 seconds)
    (119/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.423450345 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.303690124 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.280395853 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.295500339 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.382111697 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.793288532 seconds)
    (125/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.564556511 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.740984737 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.490666202 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.40639882 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.774534258 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.302213283 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.86616383 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.543135187 seconds)
    (133/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.306624254 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.305108512 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.94368548 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.536741315 seconds)
    (137/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.251704681 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.367556932 seconds)
    (139/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.992399395 seconds)
    (140/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.308849724 seconds)
    (141/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.85696891 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.738816843 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.297827442 seconds)
    (144/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.297222521 seconds)
    (145/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.688994535 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.278132413 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.732261964 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.855903509 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.471398433 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.291350328 seconds)
    (151/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.360166528 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.406790033 seconds)
    (153/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.024191274 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.046307942 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.280984569 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.044298978 seconds)
    (157/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.948609389 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.306327148 seconds)
    (159/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.40460659 seconds)
    (160/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.258836783 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.957741214 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.265571727 seconds)
    (163/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.803840467 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.684462795 seconds)
    (165/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.249630671 seconds)
    (166/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.415883617 seconds)
    (167/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.284304805 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.776846063 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.616013474 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.296963473 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.345700323 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.492448415 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.482458458 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.315902949 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.405365321 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.813182033 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.47311744 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.275993421 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.236999453 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.649488966 seconds)
    (181/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.293448879 seconds)
    (182/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.262516397 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.27576766 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.409626583 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.836557069 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.085522673 seconds)
    (187/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.39958715 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.252377293 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.291286796 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.294100003 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.294905278 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.27134904 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.344456502 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.39621748 seconds)
    (195/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.263581289 seconds)
    (196/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.586239027 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.265559801 seconds)
    (198/309) benchmarking ("sort", Float64, false)...
    done (took 5.479360985 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.307692784 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.372209619 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.25750482 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.933917499 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.237061002 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.276198995 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.926243101 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.781414182 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.257757759 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.296994183 seconds)
    (209/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.786589173 seconds)
    (210/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.787565653 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.808289019 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.465879134 seconds)
    (213/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.757708651 seconds)
    (214/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.792020704 seconds)
    (215/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.283552203 seconds)
    (216/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.369070395 seconds)
    (217/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.010038232 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.351170628 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.348542141 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.272398508 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.641848993 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.285540037 seconds)
    (223/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.689748906 seconds)
    (224/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.37452813 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.236960825 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.26222903 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.290752839 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.995002529 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.247359706 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.789187651 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.270494672 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.486616181 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.484904178 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.677538221 seconds)
    (235/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.238939875 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.253475224 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.75769465 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.268693517 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.932681301 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.366651643 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.227784195 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.498727884 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.349610311 seconds)
    (244/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.325951787 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.765883822 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.085550438 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.242906632 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.348234811 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.317077466 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.575707418 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.538907899 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.268354402 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.911911217 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.322934261 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.625554056 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.448755304 seconds)
    (257/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.240879647 seconds)
    (258/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.305738455 seconds)
    (259/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.394750845 seconds)
    (260/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.63751275 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.473814629 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.245813783 seconds)
    (263/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.23804313 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.268074279 seconds)
    (265/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.754188848 seconds)
    (266/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.803528042 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.628026225 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.635236099 seconds)
    (269/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.251846731 seconds)
    (270/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.365886396 seconds)
    (271/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.697269746 seconds)
    (272/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.369925441 seconds)
    (273/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.303845739 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.24487668 seconds)
    (275/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.325489986 seconds)
    (276/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.250916119 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.239746843 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.913499565 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.886600682 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.608880501 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.556431784 seconds)
    (282/309) benchmarking ("sort", Float32, false)...
    done (took 5.215382034 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.322132473 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.929178955 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.33671003 seconds)
    (286/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.327929241 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.354055921 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.074936047 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.444867053 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.244359211 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.411954871 seconds)
    (292/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.368148031 seconds)
    (293/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.230823973 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.025649134 seconds)
    (295/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.444956967 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.283346785 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.244271811 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.655058502 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.026080099 seconds)
    (300/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.350287348 seconds)
    (301/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.324876719 seconds)
    (302/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.328561697 seconds)
    (303/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.741263189 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.266301095 seconds)
    (305/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.755124386 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.19506766 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.261582791 seconds)
    (308/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.254514337 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.241989361 seconds)
  done (took 886.212740137 seconds)
done (took 887.425808961 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.274977825 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.267365498 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.252445016 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.276299456 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.364045405 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.281665278 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.263069113 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.256439933 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.300740274 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.302689741 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.252473617 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.279604511 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.25606592 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.255618673 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.25301962 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.267823734 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.143406176 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.25080755 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.271052073 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.263423717 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.268896752 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.25172241 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.305008515 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.284684507 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.25697123 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.256905553 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.257750551 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.272870939 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.364006723 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.256951666 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.256260447 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.266976438 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.152062389 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.253368952 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.250788199 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.272074404 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.264867584 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.266143772 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.258173673 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.287995952 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.502553482 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.253241366 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.257696734 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.255251271 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.255627817 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.259486351 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.256564562 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.260653326 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266684623 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268240529 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.511943706 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.269250849 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.257845977 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.257817139 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.269916254 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.257148322 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.260645444 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.271325329 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.275203716 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.27228301 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.137762524 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.257938049 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.257947045 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.274861228 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.265785581 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.533905647 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.249876752 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.264448066 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.50693347 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.258231934 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.531054803 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.261529702 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.257306756 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.273763967 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.289055743 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.142550905 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.249321386 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.256376451 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.264605025 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.255374797 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.265954095 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.268038281 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.261193121 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.258552055 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.273956816 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.287450711 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.266248595 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.259279767 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.268157259 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.276561283 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.266091474 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.270893041 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.259862391 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.256130163 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.270355652 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.263618046 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.261864511 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.260890019 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.264248698 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.270359552 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.507937136 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.269192912 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.256640154 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.25745771 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.259394518 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.273575963 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.501356463 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.256105155 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.279964573 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.305278105 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.262619499 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.141533517 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.259768173 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.272377541 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.267410486 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.260389243 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.253491848 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.138414131 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.492457996 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.270500843 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.261935354 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.257138251 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.275564769 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.260295947 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.255031889 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.160466388 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.258133005 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27245274 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.379410513 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.273274361 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.2835432 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.251871047 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.256646005 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.286105622 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268912129 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.28404028 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.257300563 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271556032 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.268037161 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.248576852 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.263378207 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.263235524 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.253897349 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.257231209 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.247300579 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.28304457 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.26409451 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.262004606 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.273316999 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.372816804 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.248154179 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.145455866 seconds)
done (took 210.940796908 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.309378525 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.24513702 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.351194103 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.24556901 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.345885797 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.34380404 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.244268989 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.244568045 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.24426349 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.624999806 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.244035502 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.24285464 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.240014107 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.244036626 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.329794878 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.247258963 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.243132401 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.639809889 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.245657625 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.318030851 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.245009268 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.244850582 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.246724243 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.63099594 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.247318189 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.242692419 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.317994423 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.248116511 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.59492426 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.243407987 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.247581493 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.594392714 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.338164199 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.264916752 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.258699925 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.255680914 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.350423929 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.264955509 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.33129481 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.331135181 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.354302095 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.290697993 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.247976797 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.248863334 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.250568725 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.2509499 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.249588726 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.277913913 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.248174333 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.24512211 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.590826109 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.257174672 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.25571858 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.246176467 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.246643552 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.269499542 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.24645811 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.249807459 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.33930211 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.248514355 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.3113165 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.63270236 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.629679071 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.249755693 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.245838169 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.24673631 seconds)
  done (took 142.804073378 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.316422319 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.321081126 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.355160772 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.249504996 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.301274068 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.359226196 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.249971344 seconds)
  done (took 10.335264941 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.254222244 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.250384826 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.298514759 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.300598847 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.25088497 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.397334641 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.25008136 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.262758637 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.247481568 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.304972573 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.251027975 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.251359138 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.258407027 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.247801515 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.299319002 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.260597514 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.36569663 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.251612604 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.250340906 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.404664146 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.250054885 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.256755355 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.300980998 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.261782447 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.252837005 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.25705695 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.816230202 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.252514166 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.250058569 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.252085539 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.249838524 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.289362502 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.251493482 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.24803274 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.248803725 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366785236 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.251265752 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.249854698 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.253800237 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.252628357 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.251412153 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.250466777 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.252401278 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.250572147 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.252744758 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.275909288 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.252554652 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.252641793 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.252594692 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.252342025 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.303579858 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.253758793 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.250533483 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.24962623 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.308536018 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.259571083 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.252423308 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.250782361 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.254097263 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.249680656 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.407092809 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.298855173 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.252656751 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.301602319 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.253562541 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.25346863 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.253485634 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.253836954 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.307336023 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.253172291 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.301948506 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.250059744 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.410518307 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.277001424 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.254801071 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.25815474 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.257587496 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.254569266 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.248610322 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.260324202 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.251114899 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.254592009 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.261278668 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.250453037 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.252534363 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357771058 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363345752 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.251847706 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.266569614 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.26273023 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.25132146 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.305871819 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.255846028 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.253570792 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.307238217 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.369704172 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.308665761 seconds)
  done (took 145.265277719 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.258455262 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.262518793 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.25704575 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.272052215 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.255024053 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.254647898 seconds)
  done (took 8.747481951 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.255901252 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.254808964 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.255723591 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.256730563 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.25593831 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.25577462 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.258051599 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.258449679 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.260337653 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.256782336 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.2563417 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.258488544 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.257731895 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.257189359 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.257918479 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.25565707 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.257364128 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.253044822 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.255045433 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.257863618 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.35088211 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.255480637 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.256223301 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.259278655 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.260960366 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.256221337 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.264064154 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.256200671 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.257176825 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.263274036 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.259837971 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.258852534 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.257229514 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.261807267 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.262055632 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.258735137 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.259750735 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.258472791 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.254354812 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.258964618 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.258784161 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.25783528 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.258761092 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.25866353 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.259196106 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.263266189 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.263212181 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.265063896 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.257594302 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.258957248 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.259613157 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.258786226 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.259541332 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.260059377 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.262191252 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.263162657 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.262043803 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.259088113 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.257666603 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.259476205 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.258520924 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.258229986 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.25819504 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.262897202 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.264791963 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.260459983 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.259699376 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.262427843 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258715832 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.259421188 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.26093821 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.25654086 seconds)
  done (took 92.920326396 seconds)
done (took 401.252180109 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.413146263 seconds)
  done (took 7.605509043 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.271309679 seconds)
  done (took 7.466631912 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.965753055 seconds)
  done (took 19.163745141 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.291399255 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.310936606 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.259507845 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.263118561 seconds)
  done (took 26.31806449 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.342207639 seconds)
  done (took 7.535434646 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.258213823 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.252092528 seconds)
  done (took 13.706735388 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.517092211 seconds)
  done (took 7.711266381 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.360314645 seconds)
  done (took 7.554749042 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.272699143 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.286807848 seconds)
  done (took 14.007983828 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.241613532 seconds)
  done (took 7.437727345 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.116664608 seconds)
  done (took 8.31250305 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.260193704 seconds)
  done (took 7.457500469 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.337042669 seconds)
  done (took 7.532858673 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.333021364 seconds)
  done (took 8.528679955 seconds)
done (took 151.531105311 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.255086387 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.254815334 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.252436318 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.254958216 seconds)
  done (took 26.213431342 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.296091663 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.295147341 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.298494657 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.307345438 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.301771312 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.295976666 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.289061511 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.288269434 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.3067451 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.301104793 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.299916908 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.300802192 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.296576011 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.289479022 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.300034267 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.299150631 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.309157451 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.2984824 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.290439818 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.30120979 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.264098839 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.307372903 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.300348096 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.264758486 seconds)
  done (took 32.299503433 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.460695929 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.333738809 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.416838106 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.316094744 seconds)
  done (took 6.723144115 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.316365712 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.318474786 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.328848558 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.368777364 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.395017774 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.326860121 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.289736169 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.283945615 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.272419143 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.31763931 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.392363575 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.33398205 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.400546373 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.264403548 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.451852544 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.263714213 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.267236683 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.317519178 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.36847272 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.383991877 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.265193572 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.316588688 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.320516433 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.333665425 seconds)
  done (took 33.096196727 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.262896614 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.272131611 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.269800174 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.263662625 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.265670034 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.264176773 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.270802321 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.26615562 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.286556871 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.265898951 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.264915572 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.264134801 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.265726632 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.263786018 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.264514962 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.276584179 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.279149568 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.266090611 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.268650199 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.269562525 seconds)
  done (took 26.568643947 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.258086059 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.111732461 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.610881038 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.514495786 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.258361466 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.255508433 seconds)
  done (took 27.208907725 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.325520332 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.438427257 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.265607487 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.579221222 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.653650517 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.263922743 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.266449902 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.472044506 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.735621143 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.741473413 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.3133294 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.32360574 seconds)
  done (took 18.578420471 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.265071899 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.259943499 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.26106478 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.276660659 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.313719636 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.268153616 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.27313696 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.260893034 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.314069046 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.31741959 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.269433544 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.315281855 seconds)
  done (took 36.595244466 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350249111 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304988969 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.118831745 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962934883 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.637924225 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.472106512 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.992206778 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.671880455 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.267721733 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537052021 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972834963 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36359387 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.51835177 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270496354 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.262187028 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.180240086 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488825768 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715282797 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264647258 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924100807 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288622983 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271985013 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.009289778 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.288373438 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.474850087 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.394384314 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.524623622 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.263923632 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513227909 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273158236 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275695849 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263690894 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537771702 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891178584 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355962053 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274593169 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.935555216 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.973914978 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.266629596 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.937881557 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.708347156 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269100904 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275261239 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262491645 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.197933466 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270893333 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68231298 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.269556195 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.974372843 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.2642129 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.276122314 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359780292 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.267930357 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.080067517 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255687368 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264719212 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.262317133 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269307416 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839496613 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.390926748 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275104759 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.197346072 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.610784523 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.931801579 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838529569 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.367730598 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.26850237 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.268673153 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198712223 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.93288259 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281799608 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414255292 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.283386674 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915250638 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902336467 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.991330603 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208175185 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.787054094 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281131424 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.200453532 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493089134 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266589599 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201838087 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.233158906 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.19815243 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919601644 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275154219 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.605490785 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.273071865 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.675572971 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.278474741 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283406138 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289636032 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.490071439 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.153178785 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267956258 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.750674716 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408588169 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285198078 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682434127 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201903615 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.268786987 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52112675 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.478708558 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271167197 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.191512371 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451439126 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.6759801 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.294572029 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.273627298 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.276970879 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.791051457 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280646373 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.403054825 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2840406 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.267354164 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961389924 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282480094 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.367947732 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.992481589 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505939208 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.990908407 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268654619 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349702387 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269265991 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.2672176 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.031248742 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.781923514 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.268597695 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.270973853 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273270741 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.276519921 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.26701965 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214832884 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.273115034 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000839155 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.269858991 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.492301924 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279472736 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543724894 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201611385 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418441056 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322143017 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.490410219 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.369801278 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.267885907 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5268629 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273943179 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.27961726 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280174699 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287738032 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365448786 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290573059 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.276890391 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.52409326 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.273444934 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.274358478 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.042346609 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.27186608 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277397041 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.275568731 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.08943691 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790770108 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247997164 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.269007891 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.160958101 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.284095522 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.33373185 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275128201 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.278736401 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.902246698 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.04268954 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.275314233 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.273618331 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492982909 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280446347 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.033805154 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348613811 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.448765358 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.794042875 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283241159 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.204842133 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.979295226 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.963255011 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270455936 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.206054674 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270794162 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280448863 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280356798 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.749143832 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.799049045 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272906755 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.953829001 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.276395398 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280554359 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.278150608 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272673211 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.881424981 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.416655611 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281791089 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.280064098 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414687451 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.285089836 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.205951524 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.276066515 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27659498 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270830589 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.271181791 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306083165 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.959562165 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740275528 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528981036 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.929050607 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283782526 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.120324819 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.301362381 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.278784144 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.784918235 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2945105 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.290914967 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294598633 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.281339657 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.013510919 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945190954 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839394791 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933516073 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749603049 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16102445 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.28072159 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.273474172 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.693058649 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207566331 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.828945823 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.443444942 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.689814054 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219006716 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.45184702 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.376023933 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962768361 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283043639 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500384584 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160849413 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.79444813 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297390258 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485530697 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308293228 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.279295625 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203231847 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.559984255 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490787898 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.752438552 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353299745 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687640949 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.795351171 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.288321937 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.274455902 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.548817135 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430893426 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.987145404 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.446391222 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272873349 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.029274505 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751756275 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278553855 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.499226039 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861654613 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.280818188 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.455447379 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211522176 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.28520857 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.28504197 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.276854089 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.399055982 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.233554397 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.541023071 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287152568 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209657628 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.281938229 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76131133 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.13090758 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.280285996 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27512249 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967116067 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288598705 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529256662 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.286707788 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.871630576 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280465532 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.210183223 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210434756 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.969204097 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278793207 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253633038 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72587085 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.605880742 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.255923408 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29519064 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119013667 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.531843265 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.289193753 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.803042729 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504211401 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.036876568 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299542092 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.376262824 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.838503414 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.274714783 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275585193 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.511797196 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.097208208 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.499578082 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.154871826 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.189834241 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.274253048 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.489439031 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277299302 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.057137797 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514660736 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.989932433 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.286254249 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934932473 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304246698 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.052942715 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.206102618 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.623663712 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.286229807 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357840302 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289295972 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.287599422 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.288081229 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433936092 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.051617133 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292811252 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.292803262 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371262115 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.449289153 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.878040311 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.282265613 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808048853 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947652775 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.812051491 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289922792 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278423401 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279295642 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211410244 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425248548 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.503202949 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553396655 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40948598 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.684220798 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301110869 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.848722009 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303600039 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491912259 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554470543 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.17526091 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28839553 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.29214167 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.279903482 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289685647 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.490085187 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735394393 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800816873 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389320613 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278950041 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.697120536 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556353932 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281459513 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28090187 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.874261555 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.295898247 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562448958 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.285363781 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.084745181 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428157117 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290728409 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915378081 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.289028664 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.441534038 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.052919417 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987234414 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.535274288 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.690186725 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.292014763 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811160844 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.916149148 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546116764 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348182504 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.291419487 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.396017982 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427342887 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.279150819 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280674494 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281821131 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125643497 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.990689311 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.29150158 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817620047 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546431129 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.279451037 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.275583087 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31748384 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.29248176 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.504834234 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945593202 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.505785183 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291801341 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284620618 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.097818457 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817047024 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294649053 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216796766 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.283784363 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502121671 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.51938421 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302196618 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.733871973 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.992846426 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812196091 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.256170226 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304570403 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292383736 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.9223989 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816185062 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.88895073 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.746044781 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.840295929 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28343124 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573988061 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.290863803 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.2836097 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558374228 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.286443487 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.283007243 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294460415 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.8132768 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98494527 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.2965664 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011297106 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.219849325 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624288438 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.892400141 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221403331 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281455296 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.45435467 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285211517 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415413539 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294933587 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.293642478 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294860408 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.015708099 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558211148 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.287932919 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.285894181 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.905087222 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.292511379 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28983792 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504085494 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289156492 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.948869979 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.636414408 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.539914131 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.291938925 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.270308164 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.288171624 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286881281 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272436774 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482839352 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.765174524 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806672766 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.296439736 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.294360068 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.288953532 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.502032886 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497425425 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.093181279 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310082555 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285789486 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300870913 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.192854519 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.789127678 seconds)
  done (took 1548.307761345 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.300873749 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.293999745 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.298865381 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.354560281 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.286028561 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.385105252 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.312340909 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.36793069 seconds)
  done (took 51.822878197 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.287301197 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.502238893 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.313315122 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.289614726 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.295462388 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.288830292 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.688620517 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.297916053 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.294904947 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.2966614 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.294403693 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.297560671 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.85535063 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.295252148 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.292112152 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.272270387 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.295375416 seconds)
  done (took 64.384442997 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.285963517 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.491653879 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.363968966 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.306754096 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.952042148 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.290281439 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.468624589 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.317983898 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.292279604 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.296837334 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.939923886 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.308285909 seconds)
  done (took 82.543376358 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.293731331 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.296366461 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.295951739 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.294813614 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.295555303 seconds)
  done (took 7.704683298 seconds)
done (took 1963.245047147 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.540820584 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.91190702 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.893180469 seconds)
  done (took 5.030987272 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.437057787 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.484910577 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.606763654 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.61102731 seconds)
  done (took 7.3683411 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.567163956 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.671681561 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.48165556 seconds)
  done (took 5.947427851 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.565434244 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.304336799 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.406975182 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.287634134 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.28749391 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.289015186 seconds)
  done (took 20.092804078 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.294285159 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.297564899 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.294554444 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.295976845 seconds)
  done (took 6.410536546 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.275338543 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.033435831 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.277338549 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.292897554 seconds)
  done (took 18.10731579 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.043765793 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.054319078 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.038798025 seconds)
  done (took 7.365990654 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.296515827 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.134725765 seconds)
  done (took 9.660382563 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.594105793 seconds)
  done (took 2.823893943 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.425906949 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.565094471 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.234320648 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.169037431 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.251081561 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.686405854 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.741820234 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.372478652 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.158889982 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.214689888 seconds)
  done (took 26.051634913 seconds)
done (took 121.903942004 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.790605881 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.537385809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.496708064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.765063513 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.510563692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.499223902 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.501856161 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.737225248 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.313923967 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.268494936 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.763037283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.515937861 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.452978 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.542558508 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.453323055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.294177173 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.515138654 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.828545793 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.448443507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.646592011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.497420017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.407473223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.59873767 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.46356493 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.516252424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.449767336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.982472368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.537944126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.619063988 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.999731502 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.447176954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.819738669 seconds)
  done (took 186.452261847 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.30335073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.302506801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.297639006 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.294301179 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.294727106 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.289543913 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.290891579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.289182488 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.290599712 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.304881215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.291557271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.300413184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.303096438 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.298302391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.293452174 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.30341724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.30228456 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.293080317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.291940879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.291872915 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.291675406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.297786412 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.292959251 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.292356893 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.297829932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.293162396 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.30273954 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.30495054 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.291182544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.304485939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.293622684 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.311171014 seconds)
  done (took 202.735750771 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.293673941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.291513965 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.303253925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.291028894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.291782928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.298791467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.293419732 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.295544379 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.291052498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.29378327 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.291742606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.292360429 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.303507458 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.292970437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.30420352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.296706798 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.294831388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.293344406 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.292003601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.301751442 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.294876366 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.300856595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.292137102 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.305942588 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.292512891 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.295798023 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.305610293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.292224388 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.291450071 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.292233284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.2911149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.296377536 seconds)
  done (took 202.692315992 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.491318779 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.304291542 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.301113456 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.239530466 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.301665778 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.30215692 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.300477654 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.493656404 seconds)
  done (took 13.97157924 seconds)
done (took 607.082951737 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.50890414 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.212736072 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.486837286 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.325323268 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.001858812 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.322053611 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.323566553 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.479296666 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.186142119 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.476920379 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.492754766 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.320044321 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.637231666 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.319550658 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.561188096 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.413091008 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.1369093 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.254853391 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.618750787 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.787167632 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.560695032 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.720953743 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.47814217 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.194181804 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.637000156 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.719738873 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.937494465 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.13877907 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.322743782 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.620226388 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.813107411 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.191440346 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.374891195 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.358572156 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.413877577 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.396031357 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.164573421 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.357111711 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.493971386 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.48001808 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.783517466 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.009296229 seconds)
  done (took 88.266975745 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.293184733 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.295599887 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.291785076 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.296122372 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.29512798 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.297247561 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.292781838 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.293055173 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.294130071 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.294347174 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.293693882 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.296317191 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.295782465 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.294736091 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.295981048 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.292825208 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.296444796 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.295307102 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.294765345 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.294950276 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.295400857 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.2933997 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.295182686 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.295907295 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.295857831 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.295491124 seconds)
  done (took 34.904144517 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.307681577 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.536660741 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.692341012 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.312473376 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.306964598 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.311326095 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.375035593 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.308519784 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.311529751 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.31013191 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.451604747 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.308856297 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.342395697 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.70447182 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.309821896 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.307564665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.307836586 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.30935613 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.545628932 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.317490279 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.378113542 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.308968514 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.378297035 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.319075879 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.31223947 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.309797245 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.312928729 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.789492297 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.308039805 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.453092436 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.994120612 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.374777538 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.749984286 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.706159436 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.997644279 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.310375906 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.30938915 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.456786067 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.308590413 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.309247503 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.377044609 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.308379892 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.705393697 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.92068041 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.321784181 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.308174183 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.812538615 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.45358218 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.523283922 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.314608576 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.723038274 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.310789123 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.309091588 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.307401665 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.525399481 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.313867817 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.307880927 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.817223484 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.314139267 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.377083883 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.307961137 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.309246032 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.553016682 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.309307957 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.542431905 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.309434391 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.317365133 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.30977499 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.706504193 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.31097866 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.935980056 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.325562307 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.310361297 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.454011384 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.542104802 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.841123083 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.314967839 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.558611409 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.76339926 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.376348352 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.312608374 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.780226226 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.382019678 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.313948112 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.312977122 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.313764194 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.311576803 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.355605145 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.37874397 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.866854954 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.931544019 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.835217578 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.381884997 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.323361436 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.312179027 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.821780217 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.311872615 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.312911849 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.705216981 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.941081652 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.327014196 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.320042519 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.927677917 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.326606383 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.381259208 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.317530143 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.716942182 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.310513755 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.355845419 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.309862824 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.317720761 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.314140248 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.379331978 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.314250107 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.317618114 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.91669736 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.4723827 seconds)
  done (took 171.587194716 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.306307575 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.303682472 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.306435981 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.314089548 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.30509696 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.31072415 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.305506156 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.306427863 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.310789741 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.306086673 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.306343081 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.308469626 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.307644185 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.32343274 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.313871785 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.313444201 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.916873763 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.306618603 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.304574578 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.315091409 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.081682321 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.3057461 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.305808371 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.305070287 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.304233677 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.307988002 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.322505295 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.305798632 seconds)
  done (took 151.275035662 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.31203674 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.823718101 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.313176737 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.427569122 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.330266469 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.311700595 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.427119377 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.363832794 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.313467589 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.310652088 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.310588093 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.582683411 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.311592034 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.77164218 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.475657354 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.428742095 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.773347582 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.312789536 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.312134983 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.312010465 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.431691887 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.321591905 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.586694897 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.824247149 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.313010275 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.826450796 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.304717057 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.314157932 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.313409186 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.826767308 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.311107368 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.587536669 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.381566692 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.365841967 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.827414446 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.779013115 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.779694482 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.440433778 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.313582754 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.31079828 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.313034187 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.303190339 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.826924079 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.315701548 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.315831586 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.81880194 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.328471403 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.314926198 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.323443766 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.312761215 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.366060262 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.368841698 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.592538922 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.832971081 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.380654876 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.333493968 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.42976166 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.675774881 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.31573356 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.776865866 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.299020385 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.830011404 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.317554237 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.303411194 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.316049167 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.319111811 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.448836139 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.430718611 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.776341327 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.315515195 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.784137171 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.448299869 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.313474831 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.315624213 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.318280008 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.825922422 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.777608229 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.447027662 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.434451519 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.483795838 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.305626731 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.315185697 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.306595234 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.383961288 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.315276391 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.833250193 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.779325286 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.314482569 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.317303455 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.316984714 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.318764398 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.472765195 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.834844837 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.383786337 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.772612572 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.603077803 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.594422054 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.317118686 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.371416506 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.315789729 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.594348579 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.319790197 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.368063104 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.738320363 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.596378165 seconds)
  done (took 155.472900658 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.539464036 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.488102412 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.397407965 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.421195171 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.842581048 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.86034889 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.421390246 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.432332539 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.41722337 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.54619433 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.387664027 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.410841375 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.486817826 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.382595779 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.974755994 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.378842149 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.400798667 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.433735086 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.419269258 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.344086609 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.905185547 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.583063458 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.474581623 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.364634521 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.404026185 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.05430567 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.831914284 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.817663038 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.473343576 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.577543343 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.806409585 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.419059943 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.203323636 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.925442955 seconds)
  done (took 63.07606813 seconds)
done (took 665.81729419 seconds)
SAVING RESULT...
DONE!
