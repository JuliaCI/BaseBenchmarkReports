cset: moving following pidspec: 7539
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.359121591 seconds)
loading group "string"... done (took 0.58587419 seconds)
loading group "linalg"... done (took 7.784834907 seconds)
loading group "parallel"... done (took 0.175392063 seconds)
loading group "find"... done (took 1.192432954 seconds)
loading group "tuple"... done (took 1.893201727 seconds)
loading group "dates"... done (took 1.28551564 seconds)
loading group "micro"... done (took 0.238343734 seconds)
loading group "io"... done (took 1.073643077 seconds)
loading group "scalar"... done (took 42.85764142 seconds)
loading group "sparse"... done (took 14.46082368 seconds)
loading group "broadcast"... done (took 1.115189931 seconds)
loading group "union"... done (took 15.606816345 seconds)
loading group "simd"... done (took 5.28103337 seconds)
loading group "random"... done (took 10.513405837 seconds)
loading group "problem"... done (took 2.118807829 seconds)
loading group "array"... done (took 23.957498976 seconds)
loading group "misc"... done (took 2.143676229 seconds)
loading group "sort"... done (took 3.769680479 seconds)
loading group "collection"... done (took 20.320929752 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.493168733 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140587707 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144821131 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.152431805 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193804682 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13878356 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159216194 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.111092947 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.994435216 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180413549 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142983794 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.507160259 seconds)
done (took 5.133135911 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.24608552 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081199901 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092480955 seconds)
  done (took 0.89942129 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.089990417 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140265229 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089772597 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074960023 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072954519 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.092256169 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073349848 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.091268387 seconds)
  done (took 1.360399474 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079810487 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.075583368 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.094285767 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075229393 seconds)
  done (took 1.048878504 seconds)
done (took 4.373426457 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.731958525 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271396099 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203185003 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.514379344 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176822589 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.209006894 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662579827 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.388959055 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.245212203 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102444465 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.129513399 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39887433 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114730887 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.717020328 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.087072673 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124682101 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.168821937 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.455195679 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.095653385 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089778592 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114358566 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15460707 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.112745196 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084431578 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.180470183 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.076224076 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.187634616 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107366943 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076932406 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.269632273 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.182539933 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.71054722 seconds)
  done (took 10.906530803 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111112792 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136688019 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075114757 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.152800535 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135525136 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078655713 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.095545382 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075534797 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121325526 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177543147 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113973807 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139750333 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090288888 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078377139 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114341909 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228377107 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119821079 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.094930392 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098148476 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085203973 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135958114 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109460543 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089435042 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.104793647 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16560304 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204065818 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107788873 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123018712 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076369636 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.108860892 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141445382 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156317068 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075568269 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074585141 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173405996 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121464406 seconds)
  done (took 5.028119671 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.124359001 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19201389 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099681513 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171354431 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093381351 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144640151 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.075088677 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112157252 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.262412291 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.122055721 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156088978 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159198506 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143864474 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114702503 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077146469 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098946106 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075460674 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.528671061 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.121949353 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152966297 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09343464 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099056513 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100350616 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.727091796 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082392069 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07361406 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097597372 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067699308 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157756921 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096966156 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.174268214 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09708875 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099242948 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130243787 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195034425 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108538199 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133414811 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095339282 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074017928 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179511051 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080914065 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093821917 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102274218 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133232729 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134584018 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.089520177 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077045626 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.213149755 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091326602 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073166828 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088062317 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.990802973 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17805357 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088159502 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071981363 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335470486 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115076177 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074743425 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091856663 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272727322 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126247497 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093402205 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075656734 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076288078 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095720451 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.735904591 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.076325743 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.770571029 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077491131 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084840718 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095194546 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09305527 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084498189 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081634093 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113656425 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074649991 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096499607 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075109471 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094779162 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.077499124 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112468208 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081776423 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094177371 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143589033 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09045336 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.073877096 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.111470493 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108773148 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095465556 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073932463 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127238326 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077857272 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.093829202 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11346519 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095409215 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11182232 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077651567 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142070537 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093672382 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.140660734 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.073713325 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072366056 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123384094 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096120008 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111239619 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107968262 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076668663 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099982548 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073617915 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.091859141 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144534303 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077430313 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094457887 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.076591965 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106186501 seconds)
  done (took 22.661258504 seconds)
done (took 40.446358809 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.338137917 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109579207 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109465065 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108885569 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106567138 seconds)
  done (took 1.568111727 seconds)
done (took 2.336916128 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.163686035 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11307781 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093141889 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107247959 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093933707 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111591555 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.130196123 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.108707616 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112707078 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.091721426 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107364997 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09188828 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072936475 seconds)
  done (took 2.195003097 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090480632 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112374745 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079875565 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089741464 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090781992 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090665424 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107557002 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096755015 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10739059 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081408695 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071314988 seconds)
  done (took 1.787252921 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089637235 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092211374 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098020493 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089008557 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093667876 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089689812 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107088379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096131171 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106790153 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081588055 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071876963 seconds)
  done (took 1.783739964 seconds)
done (took 6.52807611 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089654262 seconds)
  done (took 0.85074344 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.036973991 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.452174583 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.10058774 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16437944 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.313015807 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.210371517 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.603294106 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130654395 seconds)
  done (took 15.9933718 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10862663 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096031707 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092883892 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097172258 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081056234 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096666417 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.081001774 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078937708 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097013408 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079311366 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096274729 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078910322 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094295312 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080149963 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096462481 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.077621225 seconds)
  done (took 2.256513097 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.113627335 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113391929 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101655889 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08551569 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100687111 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080757346 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103454677 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.082305058 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09753548 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080664222 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103426106 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.084902274 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102747096 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079364362 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101900854 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085955009 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098428923 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082741579 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102937419 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100868364 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.087368036 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098795729 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085389545 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102503829 seconds)
  done (took 3.154028833 seconds)
done (took 23.023503274 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148716667 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082553966 seconds)
  done (took 0.999826586 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097443776 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116178816 seconds)
  done (took 0.991752083 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101926545 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094925463 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131425807 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094548472 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096569066 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078392904 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127940219 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078095118 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097074792 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078378701 seconds)
  done (took 1.757248977 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081907312 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082112966 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.105086672 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116705462 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088668928 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098400789 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083711436 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099864279 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085117357 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094185962 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086467468 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11205352 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084332868 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114933235 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100570172 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085219768 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104853823 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082482618 seconds)
  done (took 2.488712531 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07704104 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079185005 seconds)
  done (took 0.933854436 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080269671 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075695778 seconds)
    (3/7) benchmarking "month"...
    done (took 0.099013322 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097475208 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077890051 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075739019 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095156738 seconds)
  done (took 1.378752 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486740083 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140499427 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267663245 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081236284 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12025767 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.330952096 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074506043 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102241159 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.080475715 seconds)
  done (took 2.501406476 seconds)
done (took 11.82607377 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088833416 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.097229745 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.128982803 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.452317628 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.117318029 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076602631 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.155957077 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257535874 seconds)
done (took 2.160813168 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.138823543 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.6126686 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.43383572 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.231028626 seconds)
  done (took 2.063712831 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.407916854 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.104508861 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087172682 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078404543 seconds)
  done (took 1.465267095 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075218947 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07955922 seconds)
  done (took 0.943711549 seconds)
done (took 5.3968768 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075871035 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075717879 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.129242961 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.072093857 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09612564 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.073403136 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094378382 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076374109 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074908371 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.096361176 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.075999448 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094297314 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074185668 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072669113 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094713776 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073458604 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093597542 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073823214 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074654309 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09265664 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075977913 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.0913434 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.074387544 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.072960398 seconds)
  done (took 2.820539354 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105263454 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095594793 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082610377 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100442162 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080235041 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101367898 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08208704 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095142891 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.082630451 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.209109696 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081039587 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.098842792 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078518285 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098944347 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079147755 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098697307 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082686701 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095758619 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079605512 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098113474 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.082193292 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095692346 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08078957 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100883069 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080200181 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099038174 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078567736 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09560498 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082678472 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097963767 seconds)
  done (took 3.61050972 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080107133 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072354814 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093956214 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.080563236 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092231705 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080386957 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07228124 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093493363 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075719748 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092787208 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.075494409 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072537184 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094433318 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07433528 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094655132 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077388056 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105994617 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.074809682 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.072319046 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093910787 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076686596 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092237438 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077086976 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.072922805 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093289979 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073207843 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092510168 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.074130245 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.07415468 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093021707 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076016965 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095905749 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074170941 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.079389098 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096505612 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073652148 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096563972 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073920408 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.073853798 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092696954 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073622973 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092640845 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.075081039 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081349404 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09714657 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076530213 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093746071 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.076220292 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.073834144 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097972968 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073481784 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093308759 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.076650315 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094793292 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079081218 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072993998 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09415998 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073276977 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094348345 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.074526211 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073267536 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093254374 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.076347724 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093628897 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.091460193 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099062719 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075406108 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.074907484 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098378377 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.077035579 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094461235 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089453122 seconds)
  done (took 6.816382718 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078908156 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102872926 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077816594 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075175496 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092178358 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074822501 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100418703 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075262437 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095558753 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093079955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094008032 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076944931 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075653087 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098763874 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074579388 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095825823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084284076 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091957112 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074962097 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097276561 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075667446 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099378832 seconds)
  done (took 2.703605856 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209124312 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099216166 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138308017 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091439663 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112629438 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091042233 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102262171 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081190776 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101196324 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083649449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104524801 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099464757 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092999836 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103854403 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083860742 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104081098 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081072234 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104224235 seconds)
  done (took 2.680698264 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08812237 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096123877 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100173183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096601054 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078385193 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098288987 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084714127 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112712369 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081009163 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096109812 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088100448 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098298607 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080804605 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09664515 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080722106 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076247142 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100659058 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077299772 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10740843 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102537062 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08494695 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106057768 seconds)
  done (took 2.831682321 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092342326 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097699767 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099125462 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100133648 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076802823 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09715512 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085535659 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095518527 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085978529 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.078543903 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097863518 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07785873 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.102907562 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077381313 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102169733 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077540709 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09879904 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077337993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098331985 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076161446 seconds)
  done (took 2.595789581 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11579817 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111906907 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091860276 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122891293 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09214784 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112412553 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121182743 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093787183 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110743541 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105901102 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112282986 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09196313 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122953927 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117985909 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093243728 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12220326 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103320509 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123531434 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111596131 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09301456 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125300452 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092698771 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123184535 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09623722 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112144531 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091618885 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113195653 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117234985 seconds)
  done (took 3.847260707 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076609832 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076236205 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094234949 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075399171 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073484646 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095899139 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074542974 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093928763 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077280145 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073595852 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.097217658 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076549489 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096182707 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07744257 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079305922 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096860292 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077448277 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094265411 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07563718 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074398554 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097084621 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076864993 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09588302 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075136258 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07392881 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096867461 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074402104 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094406112 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077731036 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074037192 seconds)
  done (took 3.296530902 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084579848 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101703228 seconds)
  done (took 0.9935306 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074185051 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111771771 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075506653 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080544574 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104218985 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077535796 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107449474 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082076602 seconds)
  done (took 1.517934324 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094493927 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11495378 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084030369 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108875013 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09733828 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112778622 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139953655 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104241297 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.083899128 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096453633 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094899688 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096826273 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.085088751 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077710154 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105313088 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084032612 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099672757 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089161717 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104850125 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080973609 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102716888 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090150714 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099760624 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081369894 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078443156 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110127521 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.088024465 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106487829 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081021689 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108885346 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083200244 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092784152 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082839917 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103503859 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079776007 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.114197506 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091746654 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101158958 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.087485605 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102769663 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088861934 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076195037 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.103923352 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.083597028 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109276395 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0832427 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104177432 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07715913 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094833422 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081794574 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076546547 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097929922 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072855951 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105503565 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082331332 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112295104 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080630065 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099583063 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081539989 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.100916562 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085932457 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.079353065 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100719929 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081473732 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10624392 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.082402787 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106128817 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077013379 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090951008 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080299358 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08632096 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122438385 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105970225 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084634972 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083105647 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100074988 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081501514 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104266338 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085859701 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10768711 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082269878 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105171015 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086329506 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098530823 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081636906 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10472676 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080816853 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.080506628 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.095996178 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093322434 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101266319 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079194052 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095563447 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088183148 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101275399 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0825647 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.075141549 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106052633 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07245506 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103966605 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0844551 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098997235 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.08856225 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104009778 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084730349 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106431004 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090138351 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097432014 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082990527 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074541245 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104783963 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.077218115 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10690985 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.073216632 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101050395 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081475517 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083686162 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107347597 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080178298 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103861233 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086789889 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106558948 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081211725 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095122889 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.082907367 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102867998 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089222924 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105928843 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081951095 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076744917 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09838597 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.083096644 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104135873 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083899401 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104434482 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082917488 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092457757 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080977937 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084076629 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10825383 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078780414 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.100007452 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.084654508 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100134548 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082546974 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.103567256 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081934815 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.078294103 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10455815 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081059992 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09843116 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088447772 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102460795 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08224057 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102721784 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088778531 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100716455 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085469704 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081731282 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.1051919 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084854139 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09882853 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079125952 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100897604 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090676605 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100081667 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078952582 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075594299 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105481575 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076887876 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103068369 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.078253928 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.080943 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106200198 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08012714 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103302499 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.081022146 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115230718 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092567224 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106002218 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085706459 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109788985 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08343536 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10108053 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084046377 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084472585 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10574304 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086283223 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.1065008 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084442588 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102538656 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076454047 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105334603 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088535751 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098749176 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081702767 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.078198639 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104867678 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.08661949 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105226356 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084771974 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10169964 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081017021 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108615589 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083371016 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082179921 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100423565 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083816361 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105798782 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08570962 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105535432 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.089613116 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103698495 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078905645 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107689149 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082673957 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.084692477 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099857923 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077412709 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099216171 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085857681 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102481209 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083658924 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.072722001 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108408829 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087601304 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100930549 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079489593 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103868252 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089570047 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100925483 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084385214 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081881057 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107282209 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112614303 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080221164 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082842555 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111059535 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084278393 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094837854 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.085458153 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103006257 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.079738323 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101557296 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082679619 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082366603 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107122545 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.084845368 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09453284 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083087926 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102008408 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078965997 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078397964 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108034617 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082752264 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102535704 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088917589 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106709157 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085096823 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105242527 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084200604 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105316916 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086333531 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103133281 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086677568 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082061688 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100399037 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.081893608 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099730502 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081432875 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101597298 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085613099 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082328323 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107410554 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083183003 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101276221 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082594175 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105444105 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081791725 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100286065 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080925824 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082927336 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101791578 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080139789 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104587625 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079067369 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108094898 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085742853 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107957159 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081695983 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.076138051 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106266365 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08289541 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106432608 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086542354 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105345758 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082392955 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082866935 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105062492 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088928298 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098870412 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089071345 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107486017 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080709147 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103609937 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.080651602 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101943906 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079908576 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081311525 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116255873 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07984413 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104799135 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.085838522 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103886796 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081505266 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101710766 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086637462 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079349209 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106963793 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073907685 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10024149 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080332345 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105227995 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08938883 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083812369 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102057297 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082679744 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107650083 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083537049 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097524455 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088932486 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107603876 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.0863032 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108474418 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080343569 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.080762968 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111818295 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.074090941 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103461725 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081180436 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097575879 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08980714 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104524595 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090475055 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.079680487 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100941066 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076745886 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106680312 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083224773 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.073901116 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10300734 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083128867 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100626405 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083133071 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106235904 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.083935811 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105649167 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089314058 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083244964 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104342202 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085121295 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099024838 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079398363 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09937197 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084202045 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105142196 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079958918 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.077426308 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105493644 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082534627 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101681101 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084638592 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081235976 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10985106 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083495032 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104957206 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088491362 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096056349 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.083936475 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104697714 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085566703 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099769099 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086070035 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082679381 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108816911 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087474041 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106060162 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08045135 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105911451 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082331767 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104606387 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085864626 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084849238 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102027213 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086079836 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110763953 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081256166 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104573423 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080724673 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101005055 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.086642728 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085288088 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105341135 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087707472 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102857269 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08275751 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108309329 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085616347 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104408932 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088643769 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102428732 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088348113 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07876413 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111661171 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.080214723 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107624805 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082647034 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09913591 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085077118 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103631823 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084979447 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.085525815 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108282035 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.079626989 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10160133 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082899211 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103517488 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091073041 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108893289 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084939959 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083486169 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101519696 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.077903724 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107649815 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079052884 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103144547 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.084765451 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086626134 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105783178 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.080697793 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105613294 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.088719558 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108701594 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086113752 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099619153 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087176021 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.1071971 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084890909 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081649005 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102480359 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085914385 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10886071 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082038712 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101012317 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090693864 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106113232 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087332893 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10310997 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083318226 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.080370527 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101084694 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086912014 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104496169 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088504605 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104992981 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086256997 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111490455 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.079541342 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.080684886 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11201255 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083924261 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110292959 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079164365 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103413102 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087591502 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107016511 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080169759 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.079314925 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102474719 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083319575 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102131489 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079872322 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111692811 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089226123 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104226985 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085021669 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082334483 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102474469 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079051999 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102265501 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087514741 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103803957 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.091897093 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101093748 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081825442 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079238069 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107016765 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084281864 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106263258 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.078697863 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100356689 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080981474 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083344442 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110733549 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083596955 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10721099 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084654709 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104651656 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082902973 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11148532 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079043213 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084807058 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115362333 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086064291 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103972251 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086698595 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111432904 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085740318 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101681295 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087261081 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104975823 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082627376 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106908407 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089205947 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116119758 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086300399 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.079375804 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106571178 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08411087 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10308852 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089162549 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108825108 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087771717 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107553162 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08460803 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087196843 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107236103 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086785288 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106133198 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083482967 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105621446 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081734583 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103925649 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080979606 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086673156 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.110185617 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084769823 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109945086 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080480293 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113608451 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090572632 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104679886 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079069199 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.080075486 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103393418 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080146122 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109034393 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080440872 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104245017 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084689772 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083970287 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104294498 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086867075 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105203348 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087979093 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106124204 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076371536 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.082126083 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106301687 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082110718 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09995373 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086648672 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110741276 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088308482 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111291243 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079840113 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.082328816 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105163197 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081477012 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101805213 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088259458 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1054443 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085501778 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080090629 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108312935 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.086948562 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107808404 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0877529 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110657719 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084612378 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.109471523 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08916306 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101162445 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080441235 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.086002787 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10536896 seconds)
  done (took 56.214468519 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124308036 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108241186 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075778036 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099634439 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123514427 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082287046 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076241631 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104081057 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080858311 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113042386 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076655824 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098602905 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.097359929 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127620273 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123310619 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113457597 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076792144 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102584777 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077478156 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080251283 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119560547 seconds)
  done (took 2.940497485 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.101013099 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115654369 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092645807 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121044085 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109627135 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094752998 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115835406 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115356103 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098885137 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111487307 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118767603 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095487895 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11113879 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088974199 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111730017 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112033576 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098726272 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109674568 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.095090161 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115207918 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112862547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093900614 seconds)
  done (took 3.198762696 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088753769 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08493025 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.108707978 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076896983 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10609751 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.077672151 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111010729 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.080238999 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089122195 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103548823 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080547134 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101695147 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086629751 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.075673203 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103694323 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.079801645 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155208538 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112667361 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085589283 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10876934 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.08099925 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104775728 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.08093607 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080552192 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102870606 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.094414316 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107942205 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086478373 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106729263 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081812607 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084386766 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.102233286 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08330918 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103829715 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081466628 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.079749063 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108718533 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085239469 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.101457623 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083286709 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.080825829 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.104218929 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085669629 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105673654 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082454701 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100904155 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084544283 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085136812 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099331987 seconds)
  done (took 5.44974384 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.111823178 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15487617 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.107837493 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147316614 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.098014455 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117613395 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.084750513 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122401062 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10368062 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083627367 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124564176 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121709187 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08571585 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.11294674 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088543753 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107587516 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087579109 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103571093 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089625531 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10424626 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.08944696 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.11202612 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120178978 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.096499874 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113200512 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083752451 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103942993 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.08970615 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118510069 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113126059 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.09125182 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114837199 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121195439 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.08841026 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103030046 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088917996 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12318374 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085744781 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110776987 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.079701303 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109712514 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09066055 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111158411 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122418151 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086578464 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109576732 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086446617 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099425021 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097615319 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.111100648 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094450882 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120967789 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111677434 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086445662 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111782373 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100134257 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108212639 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083656518 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111365737 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117241564 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.08085866 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08918694 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121160853 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110069538 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094064752 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120865436 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108335884 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090477254 seconds)
  done (took 8.098934194 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111534358 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110186763 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101870936 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124144486 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112912358 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.091339289 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112247393 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09103721 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113303486 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.096286878 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113853118 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160374337 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08789334 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117880825 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090148179 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113456314 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090472986 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113750757 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090231534 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115102091 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111666752 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102241173 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11283487 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100771929 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126898698 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110819058 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090388345 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113093323 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100949309 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115111004 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125704638 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090604408 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113650883 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121973141 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.104603384 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113179293 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08473484 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113701476 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091052689 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114233516 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088093645 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124111065 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112167831 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089508057 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11220243 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091929541 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123653042 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125789776 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097811612 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119963777 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.090541575 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123991148 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112606521 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091109399 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123851398 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130346883 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101779408 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123677264 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111788824 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102813565 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123983867 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131169813 seconds)
  done (took 7.640852968 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110027733 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115131271 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124003878 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.078440262 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079421398 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115096344 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079167506 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104287033 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116788452 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097773955 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1220042 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090225974 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117001268 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121563143 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090888256 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117126404 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111946876 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092385564 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118870314 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090644441 seconds)
  done (took 2.965372207 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088809762 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122358693 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083918172 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11261553 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086453806 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113034057 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085037417 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107718647 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084569893 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10725497 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096551844 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117989067 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08388849 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11289905 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094435029 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113162708 seconds)
  done (took 2.487455536 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101275462 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12182987 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.1036316 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.112757987 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.080249514 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110972282 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08582286 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102200728 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079594794 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121907139 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089724419 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112333249 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086538722 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103239089 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.085481123 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109918687 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.080834203 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089695589 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109174982 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.106463481 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.111444175 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084705027 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111023438 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084927467 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109840618 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.087882181 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.113716661 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079918146 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.105210907 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.08547113 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.109572241 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090261726 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10304433 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08796072 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104001639 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081632621 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10898993 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087481587 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11037299 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08759871 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.080477816 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109081237 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085406457 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108089615 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.078732042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109772489 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079523948 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111858309 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.086488501 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109180083 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086748886 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113136545 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.091765449 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117138306 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094786731 seconds)
  done (took 6.2798505 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09513952 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10561792 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078436037 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080182156 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.110214615 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.084722456 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110708381 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085430205 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107926942 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081861404 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106999775 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088252923 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084482226 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111442804 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084521912 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1110822 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07766387 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108118807 seconds)
  done (took 2.595840257 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086113002 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08202108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.115535072 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082666129 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106506321 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085557674 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101776674 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08293893 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081396152 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107182708 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082934508 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.109259168 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081441404 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.108279723 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084315539 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105117354 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.087069658 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080863146 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.1077628 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078678487 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109277746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082346005 seconds)
  done (took 2.929642396 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.113501833 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121352416 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091542285 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.210448261 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.12389507 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.109005145 seconds)
  done (took 1.654940456 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106154862 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137195864 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082066529 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109143132 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096486438 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112040514 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08826465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111425283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099685317 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125284129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111154522 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098958851 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122285873 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121764098 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095603312 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119753492 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109950398 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089986079 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083604634 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130735535 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112214221 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098247455 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11217831 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109892529 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089655139 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121583402 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099058037 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124420246 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111809885 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10006724 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120240634 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087656302 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124281309 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124024578 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086115168 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123676955 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110960238 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109847863 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11928395 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120600969 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087286726 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118575085 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100676364 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118275857 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121602279 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088459673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118242645 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088069895 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111568851 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1384817 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095906721 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122625827 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118545347 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100634064 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123192356 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13836218 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124002186 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099495549 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119575063 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124375337 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099701092 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119602026 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121820652 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100960074 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119617588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122526574 seconds)
  done (took 8.191144078 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119114011 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10395741 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085926524 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124345889 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12250295 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089124925 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112238303 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088371982 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112440629 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084687695 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156744776 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112824819 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098831753 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12362624 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112063759 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088885831 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112325306 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099518914 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110240996 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138501572 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0880264 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122891705 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123325337 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098753876 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126123407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120094616 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088182314 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112875542 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088082159 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11361475 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117897346 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090153036 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123048369 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085724287 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122496059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088343941 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111619452 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118330329 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090221805 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120270177 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098639776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132414733 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112904732 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088485492 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125340007 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111328009 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089362774 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108443136 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089520566 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108721537 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102258055 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125259973 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125096093 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122080179 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089866445 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111914171 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08949498 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112032479 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089491211 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119679599 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099197177 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113426872 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138952707 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087630118 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113558802 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122155134 seconds)
  done (took 8.066051176 seconds)
done (took 153.217299338 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.293783317 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.205574298 seconds)
  done (took 1.386120803 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097914838 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141927242 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098783457 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169911839 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081749368 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.112451368 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136182405 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094152306 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.103587568 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080266044 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10223355 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082842392 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146544843 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103451358 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.079840064 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.105008406 seconds)
  done (took 2.631212806 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.114239601 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.243783882 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121075233 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.078344269 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108973901 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.083433729 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081752777 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11833249 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.085200292 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107962886 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.084725427 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107681534 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084562752 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.083911193 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109997911 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.084554964 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107546727 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085179043 seconds)
  done (took 2.786778182 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107787814 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142577291 seconds)
  done (took 1.149414314 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.248377042 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162679474 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.230256468 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.363033818 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.189254496 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.34367376 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.189747011 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.185078172 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.172046437 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.17764571 seconds)
  done (took 3.151306197 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115438058 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172528732 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.289680051 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.150799894 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119914193 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095514515 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152687019 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.121845798 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102160615 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124434621 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125620464 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.087503487 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138668857 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116725162 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094159814 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114167459 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119848819 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116256633 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.093027159 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116022678 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116996934 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10873959 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094592618 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11599519 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.126977286 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.106837644 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.110025679 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084076681 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11423284 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093574675 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112202267 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098066313 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.351296825 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.14455166 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.114346613 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.146737909 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.088158704 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110254856 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.092563606 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113087226 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096318131 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117939264 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.100144449 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115084143 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084331858 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.113958102 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085974637 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083334211 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116713286 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.092750361 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117196733 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.090329608 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150590058 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.114348275 seconds)
  done (took 7.385002319 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.796538317 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151422336 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088051604 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.868124614 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13771943 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126438386 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.77964164 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13823927 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231213374 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.785884313 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126781326 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120412468 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205252526 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.227904266 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.949667985 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.300771278 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671345959 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098741356 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144154964 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.150249172 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093328889 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137774167 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131247885 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449465015 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09012129 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112723052 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094365458 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120334295 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158935872 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089815521 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114339038 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176188175 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.243379563 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172003953 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108127253 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084712205 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111024856 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.162537086 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260516944 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18611275 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170894449 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080478575 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111204962 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096704495 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131714807 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084436247 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18472376 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169128839 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170072467 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090366589 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121572503 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117450088 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099710617 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159932814 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110130065 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293913284 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312314029 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110894157 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098027974 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12771969 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240457285 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112707166 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199718658 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138258506 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211828571 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088746355 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796102118 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161668441 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088457459 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118359629 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.095153187 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116577186 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097112491 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16648396 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389562879 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122987201 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092230705 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087716641 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228182386 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089023267 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112636055 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16110893 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089166489 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119721609 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099768696 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122770907 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165868497 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.225513526 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12256401 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094618144 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116024089 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099456764 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114938263 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211134044 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21784908 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158165483 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210141401 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121671812 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163228052 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163003984 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096405414 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189594512 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095921103 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12470322 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098852307 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216438808 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.141085347 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089114802 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115776111 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.094446778 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.143555114 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091289908 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11903429 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164834429 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480904763 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185561065 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08720482 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092072571 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119843996 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16193489 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116448691 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24071805 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118245056 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163851232 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095318506 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109598241 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096046131 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160172937 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124335272 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117839905 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09977929 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118334384 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.226997004 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194900007 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123703495 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217378004 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179294234 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120060594 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170464044 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094976463 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189202542 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096864414 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120804385 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.089937456 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772122062 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098536534 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119969167 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091809649 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191983787 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113169135 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089738814 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088972698 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11034141 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.74984911 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114703209 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.086710513 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.113297209 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096253916 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119096209 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093789268 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116907863 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161030086 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228474889 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096581481 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11943578 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.089350468 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160212881 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115020982 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089554952 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.113261385 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.091227931 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118808858 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093271942 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.090168434 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192720968 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.158926193 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.195999801 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597631038 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089382679 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.11355125 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205457198 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11352433 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260548483 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119841036 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225122419 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165214431 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.086694777 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312074725 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167507431 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193827367 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092584387 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168282755 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111958345 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.093712195 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.183276401 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090419764 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093976563 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181990072 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102668971 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123643846 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.902897484 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107233671 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.219685619 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.084575062 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16588959 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115465674 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120755933 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270323729 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113628502 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104289996 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161015094 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117065686 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090085532 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722986278 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09114143 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119922331 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095580349 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225228849 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164520039 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119384105 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096044275 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122075836 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161331117 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207361844 seconds)
  done (took 42.649601569 seconds)
done (took 62.033857947 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263442373 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218438458 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267767471 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165432048 seconds)
  done (took 1.937494223 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172862201 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.134157674 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.149079453 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107738665 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.13114491 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109200213 seconds)
  done (took 1.727211556 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.372153357 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275010671 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212655144 seconds)
  done (took 1.783899412 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250004722 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249594417 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.467919554 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.320207033 seconds)
  done (took 2.315344868 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210576462 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.100882345 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.121552581 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.115761961 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.173362435 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206650101 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136861073 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.14656011 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.106547283 seconds)
  done (took 2.290994738 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.164347218 seconds)
done (took 11.147255509 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.266636623 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.150101223 seconds)
    (3/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.216324508 seconds)
    (4/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.250777605 seconds)
    (5/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.234743257 seconds)
    (6/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096661716 seconds)
    (7/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097175915 seconds)
    (8/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.233147632 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.115172639 seconds)
    (10/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09900557 seconds)
    (11/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.170416432 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.186458525 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.244956981 seconds)
    (14/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.160584657 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097374506 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092366977 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.17348824 seconds)
    (18/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.205287887 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.14460418 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.08901179 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115605757 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.266828779 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092041253 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.166042958 seconds)
    (25/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091482226 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.198962099 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.242210079 seconds)
    (28/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.107382997 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09653167 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117593892 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.194481948 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.143851448 seconds)
    (33/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.084949682 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.141250403 seconds)
    (35/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.186623637 seconds)
    (36/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086640205 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.138950334 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079865626 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114720111 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093501603 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132130484 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.19918526 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.212843558 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121458638 seconds)
    (45/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.137130024 seconds)
    (46/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.113138037 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.097969456 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.122803074 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.150760139 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093121506 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.203699903 seconds)
    (52/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.187600721 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.088872677 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133674732 seconds)
    (55/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.098696745 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.138272128 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095298747 seconds)
    (58/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152625808 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.094041108 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11650883 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.158319331 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.131597258 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.078312138 seconds)
    (64/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.184675366 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.154040691 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.212770502 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.163001345 seconds)
    (68/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112429066 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184725218 seconds)
    (70/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094865544 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.197146019 seconds)
    (72/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.080973606 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.164545912 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.178767642 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.092714663 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.13467073 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.074339196 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.086940155 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.1113174 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.084843729 seconds)
    (81/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.224559479 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116547352 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.182098998 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.111690977 seconds)
    (85/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.190747033 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100915145 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.079143603 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.097393093 seconds)
    (89/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06994791 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.203592266 seconds)
    (91/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.157422766 seconds)
    (92/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.085001768 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123010012 seconds)
    (94/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.129113358 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.176283701 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.206710526 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090608464 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.181424556 seconds)
    (99/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.148003817 seconds)
    (100/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087496163 seconds)
    (101/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.155547945 seconds)
    (102/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.142059147 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.098285676 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.159636829 seconds)
    (105/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.120054075 seconds)
    (106/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.205201227 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11762797 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119553257 seconds)
    (109/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095147367 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086929706 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.160346285 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.073732538 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.138800137 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.201470335 seconds)
    (115/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155099611 seconds)
    (116/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.164986967 seconds)
    (117/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.106677657 seconds)
    (118/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075791406 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.134893103 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099551872 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.178600757 seconds)
    (122/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138870841 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.098641173 seconds)
    (124/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099330353 seconds)
    (125/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.109913501 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.116528429 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.190158699 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.1230737 seconds)
    (129/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.14721625 seconds)
    (130/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118789332 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090029261 seconds)
    (132/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.109350705 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108932413 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.113114369 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.087139361 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08890568 seconds)
    (137/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.108462005 seconds)
    (138/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068685495 seconds)
    (139/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.118983956 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09110757 seconds)
    (141/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.112809966 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088438199 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.070228879 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.235988151 seconds)
    (145/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.113948214 seconds)
    (146/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07798663 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085244332 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.122151066 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085847957 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.16619202 seconds)
    (151/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.082519919 seconds)
    (152/309) benchmarking ("sort", Float64, false)...
    done (took 0.18346085 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.172346732 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.074096446 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.243936569 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135281173 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159104266 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123156816 seconds)
    (159/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093036268 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.086333698 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.115147992 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.085813608 seconds)
    (163/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128240431 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.109131589 seconds)
    (165/309) benchmarking ("sort", Float32, false)...
    done (took 0.183735222 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087669 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.125991099 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.074236063 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.100846512 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.114159889 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.232922251 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.099793466 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075191603 seconds)
    (174/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.165318005 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.07467377 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.180703745 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11311771 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.13484362 seconds)
    (179/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100414211 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.200979586 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089068271 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.101071591 seconds)
    (183/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.083008371 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091972801 seconds)
    (185/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.100739226 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074471881 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138903579 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.07430456 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110816911 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098691515 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.180221548 seconds)
    (192/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095108064 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118690374 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.075876349 seconds)
    (195/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.169330357 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086768456 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08537206 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.13990388 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.088845616 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11136521 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087914992 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.081726642 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.100272698 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08702516 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.099367319 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113518868 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.100034946 seconds)
    (208/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103727796 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.12276068 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088864222 seconds)
    (211/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074091515 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123034753 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094718289 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111834149 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.075685098 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076667521 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.142441469 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085205724 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.112826985 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.086564541 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075667425 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.182121662 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108714219 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.164467544 seconds)
    (225/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117606223 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085161307 seconds)
    (227/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.082011741 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.134727331 seconds)
    (229/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.083974659 seconds)
    (230/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.17185493 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.116851837 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.19552773 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110162357 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087068033 seconds)
    (235/309) benchmarking ("sort", BigInt, false)...
    done (took 0.224219955 seconds)
    (236/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.093062149 seconds)
    (237/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.084821918 seconds)
    (238/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078872738 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108934966 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.24109543 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.156065639 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137349273 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.205807318 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.103900882 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.140331645 seconds)
    (246/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.095742759 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.094764047 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093197316 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.239233222 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085136592 seconds)
    (251/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.127553953 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091569032 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113240466 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093095666 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.197782297 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086022306 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115009411 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08717101 seconds)
    (259/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.076231889 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12301107 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074027526 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.139036807 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.248542283 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092844821 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087556155 seconds)
    (266/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115791836 seconds)
    (267/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.083930497 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.100348467 seconds)
    (269/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076160011 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074254595 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.207101879 seconds)
    (272/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.073719869 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.115285999 seconds)
    (274/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112104539 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.121470341 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074546487 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.102362971 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086896478 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086450248 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.238747652 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11213371 seconds)
    (282/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.075196827 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07411767 seconds)
    (284/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120750564 seconds)
    (285/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088769752 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11281816 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096191332 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.162958192 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075083963 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086512052 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11299423 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.165562149 seconds)
    (293/309) benchmarking ("sort", Int8, false)...
    done (took 0.199121553 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.146765551 seconds)
    (295/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128311742 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.178748651 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.203762277 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112044263 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.0739648 seconds)
    (300/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.073607697 seconds)
    (301/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.101616255 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087499716 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.084812527 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.10740527 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.075220462 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.101619468 seconds)
    (307/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.087605101 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.07411145 seconds)
    (309/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114384362 seconds)
  done (took 40.301285247 seconds)
done (took 41.236013468 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095245557 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.132651506 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09828746 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114959727 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.128489809 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100063816 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.123100878 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099059145 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12738186 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.101338555 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.126490058 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.077142298 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.12495176 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098835639 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.124332012 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117417487 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126780594 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095088119 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.089637736 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113498772 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.089656884 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113936892 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.08897471 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.076384519 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.126317671 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094941839 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.120939304 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098285499 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.113208825 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088163061 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085054636 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.122119651 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086271648 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127960983 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093847692 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117562575 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099838378 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096622338 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115574024 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087277212 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.122247133 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087649973 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093283902 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.122361636 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.087616412 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111743351 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.090109541 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123047809 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112307992 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111211861 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091813268 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091198603 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.117037097 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.09014522 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109747209 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.090813249 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.111668871 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11794003 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.1159043 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091742246 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.094946442 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.122550667 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086769709 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.117124705 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.091785222 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123156831 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099980975 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.085958161 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125203779 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.092867067 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113550893 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.091505284 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.085888708 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.114149081 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096907419 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125336314 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086544173 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.08796893 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.122212436 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092381101 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114133393 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089326423 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111114905 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.090900373 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087852297 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097130232 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084538102 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089456473 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.106582178 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085590789 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113949186 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090904039 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.108886384 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09572753 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082042516 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.111532378 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087594064 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112704509 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090241103 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085682983 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.114273071 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089353597 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119873925 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090950049 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.087997564 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127431543 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08694081 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120000184 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087297562 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.085485901 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130335192 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096891562 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.11575093 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090352511 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.112329201 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090136829 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085788235 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.114427406 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08737956 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11256873 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.090709083 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086624237 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116140498 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.089126393 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12742077 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088156783 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.085990429 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115578076 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087499357 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.118976342 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089223659 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086519325 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.118099935 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.084918452 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113238895 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086970822 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.086243208 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114352808 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086448421 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.108264052 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087908139 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.084625355 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.10898009 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.080390216 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10545195 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079281542 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084673107 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109350302 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.082722627 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.105688911 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086847423 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082894207 seconds)
done (took 16.451908485 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100559288 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180393964 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.141771394 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.119503277 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132847448 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.084135254 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118167736 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.114581828 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.110996126 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139003123 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107088646 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.126398489 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121040339 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.107363365 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083983802 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.084881535 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.10955989 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097039135 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146487909 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126610113 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117244576 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.105930536 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.11295842 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.132449172 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090337791 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125514533 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.082429672 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.111974622 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085545267 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132848854 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.102309176 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110515163 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083551094 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127871596 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100068379 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089015148 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.083134007 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088081234 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107616814 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082678652 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130449273 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103369722 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.113869076 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087171962 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.110810143 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.086547276 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.081801639 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117356986 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091568607 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11182937 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.095491736 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137616174 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109257026 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092757384 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.104375925 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094134631 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.116454944 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.085996589 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.081564447 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.110342821 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.083979326 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.11043625 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.098705256 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.131979369 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.087497501 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.116964915 seconds)
  done (took 8.126933166 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100174664 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135712833 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100762922 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125515705 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082355613 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.106707692 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.084087742 seconds)
  done (took 1.732042318 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084237529 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107158348 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134538245 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109954115 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132352897 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.128076226 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096902901 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083592774 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.128709446 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.083363036 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134696423 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12512101 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111992191 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.089957518 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137031885 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.084726341 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136763967 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.085767554 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113706189 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10969858 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111401245 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107187733 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.110304342 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.086830777 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102277229 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113366426 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157752936 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09187083 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083688212 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.112896573 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.080447789 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150687874 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.099778749 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12489036 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083883365 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127295316 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.103738067 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110046909 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.101770117 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.115714132 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.100674172 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.082514795 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.111237847 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.080944099 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.113102095 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097986321 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.11574409 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.088411183 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.087762653 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135305179 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.087273572 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132443407 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089535403 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120156161 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.092309448 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092639072 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121860471 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.083573528 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132959325 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09045032 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136559557 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109812542 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.134987539 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110018612 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118167344 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108088978 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.137170705 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.093113972 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090339083 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119552172 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10552317 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112107659 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091326497 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.127216859 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091802764 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115698822 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145701097 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089846705 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129863712 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089111416 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116131263 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.087002937 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135341496 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092784316 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083612758 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114002257 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086187757 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107624604 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084527631 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.085930364 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.108454803 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.084673267 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.112627631 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.085629934 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110770024 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106093574 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.085590772 seconds)
  done (took 11.398801232 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085933832 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084342976 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113513852 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.084409536 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.110364445 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.085468579 seconds)
  done (took 1.578635709 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112966889 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.110887837 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.099653262 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113386685 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.125669403 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134636441 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.114544344 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126447835 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.105790391 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.121845191 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.109796627 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.141239086 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.119442006 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125010751 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.111534663 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.114919841 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.107239289 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116057689 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.093865101 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115869817 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100845213 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.115871581 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088878739 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.129653979 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095196025 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.114885872 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.089783617 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.121688117 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095230426 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118322274 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089241221 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118382772 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.091915074 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.118082865 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110995678 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.118060626 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08947261 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120891985 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090790093 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117656517 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.11257215 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120186758 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.100841169 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120579379 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.094420499 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.114687241 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095819137 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113528806 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10868979 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119369853 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096483912 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.08679982 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120392451 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094435512 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.116210566 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092933264 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12199037 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108240618 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.115772977 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.088672892 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.112740953 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093283616 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120086689 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092112222 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119392451 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.093724002 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.116507779 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.088634934 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115922032 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.088925529 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121148755 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.087628616 seconds)
  done (took 8.865038994 seconds)
done (took 32.696187768 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690642706 seconds)
  done (took 1.697635893 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.712045033 seconds)
  done (took 1.722969208 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.738518859 seconds)
  done (took 18.753084446 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.467425246 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.563036481 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.821474636 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160624768 seconds)
  done (took 3.024097235 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.961186888 seconds)
  done (took 1.994297931 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239607411 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225968413 seconds)
  done (took 1.483908801 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.783910035 seconds)
  done (took 1.808485438 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.436413118 seconds)
  done (took 2.460974981 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323626359 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15155736 seconds)
  done (took 1.50960246 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.569655607 seconds)
  done (took 1.601310295 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.845422173 seconds)
  done (took 7.877755767 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236590645 seconds)
  done (took 1.272914955 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284923798 seconds)
  done (took 1.311606889 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.644792358 seconds)
  done (took 4.672595761 seconds)
done (took 52.210450883 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.094401835 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.095662751 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123208231 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.093459787 seconds)
  done (took 1.430412864 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100168481 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.08916545 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.125502764 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.08858505 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125272095 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.089515204 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119436814 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099451896 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116287223 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.0905846 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116570663 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089462136 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.118859386 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092656241 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112488036 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093813671 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122103413 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.090729821 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.092364317 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118396143 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.087261498 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119552917 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.09257994 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.115157061 seconds)
  done (took 3.541813438 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095122068 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.087879077 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118653482 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088389336 seconds)
  done (took 1.423166262 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09494399 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.099319364 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.127615516 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09355648 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128321464 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099205395 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.113023379 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086059068 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.114399642 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094742748 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.083367496 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.134892828 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.126472344 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.093926127 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094490464 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11008267 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.084447108 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.1274945 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094298618 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123591402 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.090010828 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.120520932 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085769959 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.099507696 seconds)
  done (took 3.559232448 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.165835256 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.122767548 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.106654195 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116724379 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.129030023 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137454546 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.082230464 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137283403 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082399968 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124545151 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.08742868 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.154834856 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.094907653 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108773327 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.082903887 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08130466 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122702208 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.094118397 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.113365044 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095772934 seconds)
  done (took 3.282819266 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.093223954 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089284415 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109913569 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086071731 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120241168 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090896569 seconds)
  done (took 1.633680308 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092521202 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.08384887 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114983564 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.08582172 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114796992 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083763076 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082014031 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11139082 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084311728 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.108743932 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086390996 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082324661 seconds)
  done (took 2.174830552 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.498323615 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.085482737 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.112526302 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108931517 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094232264 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.081869414 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.12657939 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084752998 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138359203 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082161238 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.110969761 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.08612657 seconds)
  done (took 2.654630457 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204684512 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093063876 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255629507 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204439527 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127904591 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161766316 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145707265 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161133333 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179897812 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133621657 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190938911 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126033764 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151599853 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174185053 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135982557 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.125564509 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169584523 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193672939 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145219589 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197613441 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157403593 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164015962 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175006268 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149569364 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1070521 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153939759 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116696479 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098538723 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168011636 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165272451 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167649537 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1451057 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135250112 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193565197 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204014842 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17690135 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181704478 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13129486 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172054723 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134416931 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244744994 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136099809 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189103435 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148540737 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098830804 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175787506 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151555571 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173001668 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099101456 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137773554 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175023436 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170278665 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172774218 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133291779 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162024135 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118255272 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14132146 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141466357 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180326679 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181430655 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161468269 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.087588118 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138637561 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176592062 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172466684 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111786753 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159475638 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121557343 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167699046 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188485466 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172090691 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158605575 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.17793897 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131277064 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157498702 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163770628 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119992307 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172777142 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156288464 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115093459 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118758933 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134012276 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096204751 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189043078 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118266857 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197605237 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103902464 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139289319 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151895151 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126234837 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156532715 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159462418 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159957747 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142725063 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085919652 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141031355 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118793166 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15260645 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128505283 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151056542 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110337495 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.122945285 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146505021 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.092969798 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154427962 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095916107 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159434523 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159625963 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.119950684 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13321067 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146131505 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.144457381 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163037983 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177960782 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102049531 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128290597 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186646333 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153328301 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103943935 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169933299 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182903377 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150614299 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105313218 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160438692 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212095623 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111331979 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180984341 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137518346 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101244768 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13642843 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153713767 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152244492 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124213518 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125976108 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148143704 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183895173 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.091552014 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133483422 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168878529 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095033831 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126076792 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135720357 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104409915 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.132624932 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.109148523 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132341712 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150027667 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154992798 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121763766 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149117765 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138904913 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182125102 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128729989 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.119709158 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14428204 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.087469898 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169241112 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177279453 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126870832 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189291404 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159839815 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150140094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158281433 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100389593 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171846632 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123440158 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088815138 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158506914 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154165051 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156446019 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174849876 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120955358 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159838047 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147937262 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143244481 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157742281 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130276793 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149732784 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13295988 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154506234 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125938439 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119095211 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092193035 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123851872 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141842298 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100218814 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127871412 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175190892 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157585509 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113096009 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157115089 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137621018 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175082617 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.094891878 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158880044 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.165492284 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134620869 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177196835 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173558109 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160617392 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112127943 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17224598 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.116104609 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092827767 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.128099569 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158449679 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101209281 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130563121 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110280722 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176027384 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16582369 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144794424 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154017013 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161889987 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186294236 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.088643787 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164995197 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161432937 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151338245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.147198034 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130272458 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.119034234 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171107006 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139023798 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183218253 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155461778 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162164598 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188632989 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145365527 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099057549 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144916179 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158775671 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135965711 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133273483 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141773428 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131452566 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118087566 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.123850094 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093267424 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165940378 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139862313 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168639095 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142762596 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163333405 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093961139 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138347352 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156561271 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112633605 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112258663 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160643169 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177315612 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13870166 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123209468 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166700492 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127057152 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.172466042 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183751896 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177067153 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130368248 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113514956 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156826383 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154872175 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156242395 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172934635 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115635141 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172287669 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153954761 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.130004011 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104043709 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142833224 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143435561 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109912924 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128263537 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146749491 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.105046898 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169883479 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137180333 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152045149 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129264354 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146331354 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.138928155 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109378654 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19192331 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153919348 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172732524 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145850457 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.156981383 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190916152 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093214394 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125903652 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.094710966 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173258909 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128158787 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124589038 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.141451355 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149545358 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153940802 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131800543 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135210209 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.086434673 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154612684 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144190267 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153938259 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109589532 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13238072 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179801359 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138675559 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099377192 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159203612 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145246162 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114042134 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167800337 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109122427 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113494716 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121940665 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100735587 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155051721 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165146901 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.102438846 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.172050381 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16166573 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109419031 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156172942 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1337723 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112556364 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156087431 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162538875 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166596837 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.128075533 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124919467 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157170668 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170153256 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143972114 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.131709245 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129973985 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174759749 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180068177 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129354945 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155297981 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127606257 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154757656 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162398855 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131023836 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191322089 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126314803 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161935547 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108350112 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120976988 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150859802 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113708668 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13061341 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163805571 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12407927 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129721424 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093092368 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146696221 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152900192 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137137428 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.094266176 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165202645 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.118578908 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129866771 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174883788 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127260099 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120820959 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140465639 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131255611 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109216428 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140909892 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131936957 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.133939507 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176528062 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126129064 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168298787 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167811899 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156104855 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123536228 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140560055 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664049784 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.095252456 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175269867 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142597332 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17827967 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142518616 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130558076 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156110123 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144783003 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160827129 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143711383 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.197284328 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157324477 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152799941 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126975063 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111693955 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138447656 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.125564558 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119489832 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155582774 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136085376 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.102950436 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152297639 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140781984 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10129405 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13503975 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181696725 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113543552 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167950229 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17498288 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134577928 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160803315 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164729999 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096485368 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.155503274 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165280828 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138260939 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143758543 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.09874793 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130140802 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17363078 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092190665 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155260414 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153595571 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125995243 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156414052 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.129108299 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154196414 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109150556 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156549456 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128615628 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.145490922 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125367956 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127296396 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.09377222 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150782552 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14892895 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.144213741 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09514664 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.135736785 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173675006 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.119784628 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099788777 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153273549 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153936644 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184678886 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136671841 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102656409 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139188396 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113036769 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148508359 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154995689 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.095428816 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128716152 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.124593309 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.134458912 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140342322 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151542291 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118481248 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152318584 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192489086 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132992417 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276779757 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107279038 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151814137 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.09038013 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126504793 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108946718 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131090888 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139161657 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113848575 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175946174 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.142337279 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.101607163 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123303551 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.092432642 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130018636 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127017293 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149929862 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153878003 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13883299 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082248391 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14038456 seconds)
  done (took 70.359600087 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150012161 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130906344 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14540693 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199040659 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164744411 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249673551 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20607469 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234174236 seconds)
  done (took 2.598810347 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.088175087 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.140026942 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.124072456 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131777596 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.113103986 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.088049692 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.323441311 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.129329995 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085802212 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.144498777 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.126823055 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.11362359 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.527889083 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.087052825 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.113631288 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081663464 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.114145394 seconds)
  done (took 3.648140659 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.467637361 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.727310693 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.473760385 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.121002011 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.245114937 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.131912384 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.891696421 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193406276 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113824607 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.483067497 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.749232799 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.17907872 seconds)
  done (took 18.898423112 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119822792 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.110240211 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158612355 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.159040922 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.119259439 seconds)
  done (took 1.794457033 seconds)
done (took 118.022365362 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.099499927 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407980249 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073338093 seconds)
  done (took 1.641072234 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106424982 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.134407497 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107585237 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.132241454 seconds)
  done (took 1.610970208 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.092952339 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.093066756 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.135273247 seconds)
  done (took 1.443624766 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.307219305 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158320636 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.138034696 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10085303 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095400874 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.125669637 seconds)
  done (took 1.451307568 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092940808 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.09325617 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12135049 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.094982602 seconds)
  done (took 1.526676787 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099400839 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079031954 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10781797 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076443424 seconds)
  done (took 1.49314397 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.109499658 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.125665404 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.100013587 seconds)
  done (took 1.465525017 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.123767091 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.134164227 seconds)
  done (took 1.388798479 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099440946 seconds)
  done (took 1.225594213 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.112175672 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.163716228 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.172337549 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114631164 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.171715838 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.147529846 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090782063 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085872751 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.117447351 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086838983 seconds)
  done (took 2.39452046 seconds)
done (took 17.47384665 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101508702 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.511576442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384956561 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139568129 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.690957996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404817073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004289223 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141964916 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162461023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.08929523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131836731 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669045956 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022173028 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.435921853 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.009145639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.338638743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.667798854 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116211058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085961709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114958177 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.989968512 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114097693 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087975281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085584311 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.696433089 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.389900573 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116456316 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.337521384 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114542225 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095616542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.372587703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116652581 seconds)
  done (took 16.860658149 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093474608 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172253895 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097751963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131375695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094920868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11560032 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.091646992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087680197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178188952 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115818734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10520035 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11501638 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092269816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086607274 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136583116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08609424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117409081 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087001558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115461737 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088743714 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133447172 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088370859 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086651497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117171062 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087630928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129658979 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087749828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.113785391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088891319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093912461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11945698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087636488 seconds)
  done (took 4.581526419 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138408188 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182625562 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097195974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150910068 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167843581 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089342705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194881601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14101254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151472426 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117665912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10345967 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117692445 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120403081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.1186435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107165384 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117067502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088144147 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115899042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087577471 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085841008 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136508215 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086026478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117486634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086160874 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116800079 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101202338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116364868 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088488979 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086801575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124854781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.089000744 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117795389 seconds)
  done (took 4.903970208 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.092098705 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.09283485 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132386834 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.103284728 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118839044 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.090600321 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120132005 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089536707 seconds)
  done (took 1.980874098 seconds)
done (took 29.459839806 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.098086102 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.087805752 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.122899153 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099441656 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.121825457 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.099572862 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.114390821 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.094278695 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.09285988 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.122539444 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.094245973 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115950335 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090241239 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.085497521 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.12398798 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.087542491 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131134146 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.090249448 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131523948 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.103124343 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.117524553 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.095827738 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.092173665 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132299956 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.100449925 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131694735 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.100983384 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123093027 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.08870239 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118119994 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100420939 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.142469617 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095556111 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.102822508 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118074517 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.086774246 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.116751066 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.089726087 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130664539 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.098531181 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.088674991 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.125965966 seconds)
  done (took 5.637606343 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114005512 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.151731206 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115764475 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.117983805 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091436104 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081173965 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.143842219 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087238421 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113417876 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111298303 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.112358093 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079021129 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079146003 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104581639 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078062217 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076352297 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111152312 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076949466 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.107374859 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079261308 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080603639 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.105099303 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081144076 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078911002 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.10701929 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082635851 seconds)
  done (took 3.715201233 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.095106689 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102281117 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138193869 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.169696303 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.120464525 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.12470374 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.09735909 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133693227 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104450985 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.085681716 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.119681452 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.114419302 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135945122 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.093870774 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119481515 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102202027 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129184044 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090265001 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.091174323 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138726606 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.103265226 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128433564 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.107057998 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128694004 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087024339 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087754622 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122688361 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.096620992 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124671736 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.094364164 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123006326 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090308266 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117340596 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100038127 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.120100374 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09013948 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.105750354 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127069282 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.095286939 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.117810441 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.090815088 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.088439063 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138881043 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162472969 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090580061 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131724592 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095308811 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.094684466 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118536763 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104725137 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127134365 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.086946879 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.119195218 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.089468648 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087960045 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133684327 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095332249 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118651677 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.099936705 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.118488376 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.100813089 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.090845756 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133011332 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.090341162 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123949973 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088313967 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087758736 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116847748 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.109115895 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12412756 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128468722 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.119237033 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.087840772 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126639253 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.093543446 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1234426 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088085895 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100199544 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129565552 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.090412771 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129519957 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.089140971 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119663585 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106677104 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.088251147 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119452199 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.08761353 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.123923807 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.089747917 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11711612 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103050116 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.086124834 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121053811 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.100850518 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117983044 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.089224089 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12288176 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.092957219 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.08563305 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131822423 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.092765895 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.119511211 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.096907786 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117834792 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.089854573 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125827175 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.093140906 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.08576325 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122112026 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.092612425 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118060118 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091219307 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118821968 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.090447531 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.095087763 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125246778 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.089693299 seconds)
  done (took 13.860488151 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225246007 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215020923 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.089535166 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.208136563 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130158253 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.103919455 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209045821 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153410771 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090361409 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.086310569 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.120130243 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.158663775 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.127663012 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.164411938 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.100645327 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.118271222 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106099967 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163461449 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212041921 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.203966253 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.106549322 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.128200659 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.088550407 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.120773951 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.089609482 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.127212102 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.105244483 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130229783 seconds)
  done (took 5.047486166 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104395394 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150768896 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.093170528 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140479106 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114139406 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118297548 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.091916282 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.118902968 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101383567 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132013127 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.087188446 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121930529 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095842766 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.095685843 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118929115 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.096575659 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.127844057 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.088810735 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.119937599 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092247837 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.092836792 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136135662 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120552098 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.088063354 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.095798904 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118361467 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087975454 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139498813 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.116600304 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11060047 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.084793325 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.125049055 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.096561281 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11917503 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.087708041 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.088847148 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120908676 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.088949975 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.119772012 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0861803 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.085286697 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111141419 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.085885732 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133340161 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.093814004 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112590116 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.093692881 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123257607 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09056298 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.084364044 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121937508 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.090950152 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120874425 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.095992779 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.091725991 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.1195669 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.090465758 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118304353 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09464023 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.089151371 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117822638 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.086329553 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123218877 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092104082 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127185208 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093258547 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.11557554 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092006965 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.092073271 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126046596 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090202783 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.120685231 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.08684931 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.089085361 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.121702686 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.092250049 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.121336538 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.087190061 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.086835044 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.120028193 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078035662 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.118124739 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077675465 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.09028745 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.117596146 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.086293328 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.118869215 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.095228281 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134991286 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.088922216 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.126014579 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.090238346 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.086119552 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122572972 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08503162 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119858454 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.104326588 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137991639 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087610137 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116145929 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.102525199 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.08937234 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.11897876 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078149408 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124849471 seconds)
  done (took 12.227732668 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.111581586 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.142530435 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091397165 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.101469516 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.146064646 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.112461401 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127063204 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.094092718 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121686153 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.105173058 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.118483275 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098503875 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.090877795 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129528553 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.110124567 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.128501278 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.090687386 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.129110064 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.09720421 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.153907859 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.102130293 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.133246754 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.100165762 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.088262017 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.124836626 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.100829963 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.145881614 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.098973356 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.128850644 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.103787179 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.127525027 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.115183997 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.102954985 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.1251615 seconds)
  done (took 5.065959727 seconds)
done (took 46.699760373 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.251464567 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.461670919 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.229073491 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.169858808 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.264653903 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.239138612 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.241100902 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.226093167 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.571333459 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.227333268 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.46721738 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.876183953 seconds)
done (took 59.384644147 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.288204591 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.391664132 seconds)
    (2/2) benchmarking "String"...
    done (took 1.522142366 seconds)
  done (took 4.079524249 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.843689965 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.19896938 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.496903569 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.227874887 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.233059728 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.527531877 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.015189186 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.684163748 seconds)
  done (took 28.543825488 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.238582603 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.635623569 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.193754215 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.182035872 seconds)
  done (took 19.41129942 seconds)
done (took 62.327142105 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.244586497 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.2933409 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.260767516 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.226401659 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.343273698 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.26462643 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.581810012 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.250987384 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.265627993 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.218421317 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.249462469 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.228546422 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.249810398 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.587096887 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.234159076 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.227750294 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.294982957 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.733020685 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.642993922 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.241307692 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.243419292 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.283622954 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.254405128 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.247042703 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.260122816 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.230986936 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.261322904 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.229491412 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.918214459 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.22964925 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.252237267 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.703172441 seconds)
  done (took 191.913119936 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.229260249 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.270541653 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.419164622 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.285580745 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.611133052 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.431351514 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.369177457 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.877956897 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.255758285 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.255104628 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.313692952 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.229598272 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.410314951 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.205952127 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.240827599 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.315867823 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.497848476 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.449492658 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.252252286 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.505100035 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.231290848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.21657474 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.155484603 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.301077863 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.277582844 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.297168783 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.274545102 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.234097739 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.425486318 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.388305709 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.271502999 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.281935846 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.885779453 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.09562479 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.255964385 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.259019417 seconds)
  done (took 150.439682749 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.557904859 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.231359466 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.230572726 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.231581095 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.265537742 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.230643952 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.833035329 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.824895339 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.75604125 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.586068088 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.235804297 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.711314725 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.515713675 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.231003841 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327473506 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.246550249 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.233056732 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.248733844 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260176893 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.232502353 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.232216352 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838633834 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.25000558 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.399011641 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.412622925 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.250956981 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266776931 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.631482984 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232854211 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266766383 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.568772556 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.28616434 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.233029067 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.659787952 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.849807066 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.353764271 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.236013698 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267291634 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.234025026 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.517558777 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.233218024 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.233558467 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.236169864 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959883285 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.23959177 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.823068157 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.237386271 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.228154046 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.240205549 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.234179198 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.233987573 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.4694336 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.003663746 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.240133874 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.233974763 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.237941349 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.234419508 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.234984324 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.268942068 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.642976309 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.340286489 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.23596367 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.237849648 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269687955 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.235025039 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.380405468 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.242383252 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.837054629 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.29329404 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.343669643 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.844867403 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.241933245 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336460287 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.358377013 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.235306925 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.235194916 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.235338502 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.234606746 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.348713709 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.235698205 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.667971568 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.416639913 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.255483495 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.727390273 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.24240982 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.334032968 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.236298065 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.699469596 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.242347311 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.236806776 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.009880281 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334784407 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.236835867 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.237157184 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23719617 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.668354517 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836474856 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.524491835 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.243729875 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.750613634 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.245648234 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.236506421 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.683653826 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.818948317 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.972721238 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.243337035 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352133687 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.419072205 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.263405748 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.23754884 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.728816162 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.243477896 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.296006024 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.243038529 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.637832945 seconds)
  done (took 371.539639496 seconds)
done (took 716.612687584 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.868197653 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.856418227 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.973864447 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.849558657 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.807610848 seconds)
  done (took 10.524891111 seconds)
done (took 11.695122529 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.438165626 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.437409327 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.305115429 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.448337132 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274898194 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463672088 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429168904 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.264693876 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.346820873 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.325417908 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.350422775 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.304033887 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.268737043 seconds)
  done (took 18.826775869 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.615772406 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.570590742 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.309840885 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.567609169 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.285323847 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.573249948 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.464420798 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.473803681 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.489410285 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261920049 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254173659 seconds)
  done (took 17.037513425 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.581367332 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.573350333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.3129512 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.580512579 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.287111951 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.574968359 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.456162309 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.471485187 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.47492061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26205243 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254005682 seconds)
  done (took 17.000735321 seconds)
done (took 54.035743076 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.25184527 seconds)
  done (took 2.423738241 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.286138922 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.459904489 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.272415103 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.255695963 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.253550836 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.252085164 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.257297528 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.252718152 seconds)
  done (took 11.462952397 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.246626078 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.247763873 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.249493664 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.247258133 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.249687615 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.247597418 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.249606322 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.249374678 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.247755762 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.249483037 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.246966388 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.249753107 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.24628596 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.250254835 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.250046783 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.247840433 seconds)
  done (took 21.148629232 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.250821914 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.247141579 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.247482483 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.248258425 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.24781199 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.248625387 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.248716977 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.248294319 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.247132525 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.247391183 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.24906554 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.24819762 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.248206651 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.247114358 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.248770284 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.248910407 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.248382916 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.248988717 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.253024386 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.248441097 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.248365276 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.248934372 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.250124715 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.715661272 seconds)
  done (took 31.610349734 seconds)
done (took 67.818389947 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.480537649 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.080846136 seconds)
  done (took 9.736437016 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.309567657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.311656103 seconds)
  done (took 3.796648354 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.253490159 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.250974514 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.25256443 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.252955231 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.252396654 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.252027119 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.253749399 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.252145064 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.253071582 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.251903708 seconds)
  done (took 13.700006214 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.252948313 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.253067247 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.249698156 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.25248423 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.252391361 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.250499752 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.252467377 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.252584295 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.253053847 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.249659074 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.25316275 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.249612292 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.254772198 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.251168934 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.252484713 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.251715088 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.250855491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.250829311 seconds)
  done (took 23.709677473 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.265363715 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.274427158 seconds)
  done (took 3.716021863 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.380749428 seconds)
    (2/7) benchmarking "second"...
    done (took 1.292838868 seconds)
    (3/7) benchmarking "month"...
    done (took 1.361870691 seconds)
    (4/7) benchmarking "year"...
    done (took 1.349560536 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.293161646 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.27268067 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.292716541 seconds)
  done (took 10.421232728 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.254750476 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.452117534 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.551499931 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.850047238 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.254887185 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.258491498 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.152363907 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.258646794 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.25998911 seconds)
  done (took 14.469494661 seconds)
done (took 80.725056501 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.285656801 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.247295008 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.540047729 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.2552539 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.268758037 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.546441184 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.272289955 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.376987432 seconds)
done (took 37.970846372 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.250222796 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.047654272 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.052924013 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.24756909 seconds)
  done (took 11.528348226 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.24421209 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.264940044 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.245833738 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.381325708 seconds)
  done (took 18.31499344 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.342069565 seconds)
    (2/2) benchmarking "read"...
    done (took 1.586227913 seconds)
  done (took 5.107623171 seconds)
done (took 42.380005203 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255670814 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.256821133 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.254176548 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.253056353 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.256015866 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.252616557 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.252720022 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.256416005 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.256298702 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.256077992 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.256700402 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256535842 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25429835 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253469215 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256774488 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.254720638 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.257905518 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252775868 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.257698715 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254254416 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25664799 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.25378885 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.254590002 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.254728479 seconds)
  done (took 31.304424469 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.257229948 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.25476354 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.257698594 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.257671526 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.255021132 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.257703661 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.258757715 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.255430252 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.258038467 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.258393822 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255401322 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.255755127 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.257629525 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.255828501 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257838168 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.256230574 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.257904803 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25641587 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258297707 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.256723947 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.258260248 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255588145 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.255936169 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25837513 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.255675463 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256051451 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.258483553 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.255654875 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257586239 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.256107872 seconds)
  done (took 38.88778621 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.26399501 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.266562493 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.258583229 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.259122139 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.259494144 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.258889377 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.259112364 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.259625202 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.259384598 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.258979377 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.259757931 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.259913979 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.259708279 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.260045878 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.260248468 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.259845072 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.26007567 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.259192783 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.259372619 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.259936168 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.259743102 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.259987142 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.260637603 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.260466586 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.261128087 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.258998542 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.260379589 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.260106171 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.25990505 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.261445119 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.261174985 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.260869228 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.260563795 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.260397897 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.261249275 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.261159837 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.266131868 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.268478251 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.261403357 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.260559878 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.261710756 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.261376178 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.261091954 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.262431809 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.261783894 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.262539354 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.262514588 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.261996711 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.261770002 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.262974577 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.262433567 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.262502598 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.262832985 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.262225104 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.262371023 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.263472525 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.262651541 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.262061879 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.262235153 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.264090229 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.262845325 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.261922872 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.263402313 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.263498535 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.262725891 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.263755237 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.262618638 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.263643573 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.263835286 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.263674862 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.264106583 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.264231687 seconds)
  done (took 92.017666867 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.263684363 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261017562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.26181624 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.260593593 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261230884 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.263608407 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.260805657 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263876974 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261518008 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.263884555 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263976676 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26181425 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261492606 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264549009 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263882078 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.261912621 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264833669 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262043598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.264736307 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265142706 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264233019 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.262296216 seconds)
  done (took 28.970327772 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265286931 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.265959025 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.262696304 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.264817871 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261965952 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266998225 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.265799729 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266147572 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265206398 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263555276 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262794795 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265381781 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.263214628 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26286882 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264246644 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.262824512 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265382475 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263757899 seconds)
  done (took 23.946170175 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.264196557 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.263334601 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.265692535 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.263448737 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.264220899 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266859016 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262860938 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265937036 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.266156967 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.263143983 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.267022901 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266237392 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.267013878 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26307858 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266665658 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.264015705 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.265879236 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264487573 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267705616 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264485483 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.264852367 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268165 seconds)
  done (took 29.024533869 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.26774297 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267630862 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.265335584 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.265209807 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.263986498 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.268069203 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.266910611 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.264914917 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.267136536 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.266440122 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265450689 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.26758253 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.265614259 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266885376 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.265769464 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265479966 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268047798 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266255582 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267751073 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.265333495 seconds)
  done (took 26.518249771 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271634416 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271912001 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272298087 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271349113 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27135344 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.271440153 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271377913 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.271931127 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270865928 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.272261948 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272311549 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272812563 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272585216 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272087195 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272680702 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272950568 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272721199 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273067691 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272829271 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272568417 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273779998 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272988278 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27319933 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272725289 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273407076 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273107061 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273053387 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272978659 seconds)
  done (took 36.820781341 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270582361 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.270160639 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.268040224 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.267465387 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.267324359 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.268405778 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.268010462 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.268451278 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270216125 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.268167559 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.270814266 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.270147517 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.271229347 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.271276614 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270679587 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.272099965 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271457974 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.267675148 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269227231 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268987052 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.271161884 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271461995 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.272086212 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269093951 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269050843 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.271738612 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269281534 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.270657484 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272212089 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.269896893 seconds)
  done (took 39.290746758 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.316603387 seconds)
    (2/2) benchmarking "in"...
    done (took 1.312333503 seconds)
  done (took 3.823310145 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.269924218 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273364672 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.272600062 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.269385885 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.270522678 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.273700038 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.272857757 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269927036 seconds)
  done (took 11.366537229 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.272072573 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.27305475 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.272612968 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.27214034 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.274837065 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.272645331 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278150704 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.293186555 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.27244453 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.273720967 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.279570731 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.280906293 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.275101681 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273751425 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.272782874 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274322892 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.274004056 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.27635419 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.276431528 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.274505347 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276440638 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275408291 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275693276 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.272270081 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.275100265 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.283587397 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.276477376 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.274929192 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273757784 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.277242553 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.274626595 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.271631988 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.276791572 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.278018736 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.274832197 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.27624148 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283045704 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297831618 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.279207961 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277749274 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276622117 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.273329355 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.275173868 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.275561793 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275841285 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.278660365 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.277033202 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.274070354 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.27485113 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.279112384 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.282149613 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275022618 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.274767218 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278767107 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.276552352 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281891003 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.300992682 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.279934889 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.286003591 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.286494885 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.289076551 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.285283306 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278285161 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.279631688 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287427624 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.299973362 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282813345 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.295052632 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.275379238 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.277776834 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.282647949 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289556276 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.302649272 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.280021361 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.279955621 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.278308066 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.277086719 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278722043 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.283829804 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.299440701 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.280531355 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.281122588 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288766815 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.301210676 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.276903805 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.28057979 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.28099306 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.281244815 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.280033339 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288625836 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.301332386 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.278988125 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.277150358 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.278311483 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.278252545 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.281009885 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.277307475 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278323204 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.276087818 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.279629969 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.282083446 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282922658 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.287473145 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282658485 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282497679 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.285392294 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.280637704 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28011805 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.285560144 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.280868923 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281295312 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.281567507 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.28438341 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.276781543 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282396767 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.288533496 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.283379569 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.280968043 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.282930865 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.280940383 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290315508 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.305725152 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.281110951 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.280520331 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.285250066 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.296029674 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28329095 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.283499205 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.281979346 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.277790446 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.279469184 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.281247678 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.281608273 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.281866435 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284082117 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.282235473 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.279248607 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.282340331 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.286105403 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.283584007 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.281221412 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.282241697 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.282761991 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.28310551 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.284409838 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.283668136 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.286706798 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.281584813 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.283132732 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.282654341 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.280751287 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283621688 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.283466753 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.284911511 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.282404756 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285824428 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.281756735 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.285475951 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283609276 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.283130827 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283694996 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.283669562 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286993448 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.285330526 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.285719564 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.282235462 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.281516027 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.284192052 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.283477631 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.281846524 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.284068498 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.281282805 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.28590445 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.294585592 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.283671264 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.286707222 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.284708162 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286379998 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287213326 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286547436 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.287900762 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.292943255 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.286855283 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.289877889 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.286299919 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287150918 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.284347438 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.283409606 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.284091092 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28742579 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.288010685 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.294073879 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295915414 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311076689 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.285907845 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.289993822 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.286296794 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.292494631 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.288195186 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.288628544 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.285742896 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287982472 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284701775 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287725268 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.286121547 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.288330886 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.284490901 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.285611533 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.285483074 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.289895132 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287422237 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.286179838 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286234496 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.283313695 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286460007 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288842982 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.285523032 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.283916261 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.286408192 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.284561388 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.286838888 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.28990926 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.291351341 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.284600081 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288208535 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.288463851 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.286943935 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.284939741 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.288861183 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289017899 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.287302004 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294439241 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.307504383 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.287462074 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293485229 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.307734704 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.287924327 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.290094989 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.288225652 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.286979955 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.290359971 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.297650082 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.289496158 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.291876047 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.291984062 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28827954 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28976553 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.292817272 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.286204456 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.287547814 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.289059884 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.289476867 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.287116888 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.287995087 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.288876868 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.287989749 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290202863 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29119596 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.289917721 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289800682 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.292670674 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.292311531 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.292156338 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292994237 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.300396432 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.294418215 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.289505702 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.290542255 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.291525544 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.295000947 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.289802708 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.292794969 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.289538478 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303235281 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.320416496 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296598185 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.291171111 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.291165196 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295289561 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.292277723 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.294620162 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.291154114 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.291110146 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.290391917 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.289469824 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.289037938 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291636665 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.291964679 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291713777 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.29175455 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.296836357 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.292645047 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.290608873 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.293754101 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.294230714 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.292324316 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.29108797 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.29251785 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.293268866 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292717782 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.291475703 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.291868828 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.297267991 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311381128 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.293044785 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.292084015 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.292779474 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.291555873 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.293607007 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.295164617 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.296063098 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.303045854 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.296023008 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.302319733 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.29466316 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.301265502 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.295487548 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.297386182 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.304051556 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.291783971 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.29039738 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.292043056 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.296254441 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300321666 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.316504825 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.295478653 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.299817624 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.296285293 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.297081963 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.294978512 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.297043323 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.29673553 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.297782664 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.301908526 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.317423218 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.297384703 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.295017017 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.29216382 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.297862345 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.295361247 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.294385172 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.296412471 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.297395751 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.294933616 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.294197079 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.294571283 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.295319243 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.298197186 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.295797823 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.292667889 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.295047433 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3002506 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.315319206 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301976425 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.296160052 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.301287409 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.297823677 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301614077 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.319214912 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.294937393 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.298083886 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.296621742 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.296417113 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.295974082 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.295989571 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.298989896 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.298158854 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.300502266 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.299232679 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.298237087 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.297436445 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.299361413 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.296735288 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306915421 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.32462358 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.297984588 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.302743215 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.295644187 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.298755946 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.305120734 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.2999486 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.296687287 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.300133155 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.307242792 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306187987 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.297329065 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.300379738 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297296892 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.300153002 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.299121751 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.299430015 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.299763269 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.298594951 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.29754482 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.300108143 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298795174 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.298532876 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.297579126 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299333235 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.299075331 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.30694925 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.300703103 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.300111855 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.301010742 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.299219546 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.298960841 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.299156858 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.302910036 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300089069 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.299530669 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.300248259 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305816033 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.305993448 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.30098713 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.299040759 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.302462637 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.299334231 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.299601195 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303570726 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.30306645 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302707597 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.300387044 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.302553802 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.300642598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.299205009 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.299653764 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.29804728 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300833824 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302772067 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.307832803 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.300016027 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.298614449 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.299804052 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301860125 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.298847448 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.300179758 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.307245228 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30407981 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.311666047 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.310482592 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.308518568 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.301019769 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304701921 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.309162689 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.300154388 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.301749099 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.303949835 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.302219657 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.301906471 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.306029382 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.304985716 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.307776625 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.301928115 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.301499524 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.309762399 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.326381692 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.305973404 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.304709662 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.305420993 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.301468832 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.300300786 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.302782584 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.301619418 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308834084 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.322795314 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.305304149 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304268198 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.300805163 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.304513653 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.310518744 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.303855128 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.303357179 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.300405606 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.302586705 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.304984156 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.30435003 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.301112172 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.302579031 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.302565162 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.30702096 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.310160173 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.300680968 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303804464 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.302949334 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.302501385 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30668395 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.304816199 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.300997247 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.301296 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.30192172 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.305678805 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.302611322 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.305129517 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.302562785 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.304211017 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.305952821 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.305991193 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.307946849 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.314318735 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.312345547 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.30214157 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.302971917 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.304184767 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.306048456 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.308376086 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.308001769 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305596721 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.304370687 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.305636005 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307706651 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.305721645 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.308128325 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.31983473 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.328955915 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3048723 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.305124847 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.30641899 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.30632224 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.303202204 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.306087732 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.306320725 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.307845333 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.317174909 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.308837709 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312257508 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.326850763 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.30733671 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.31023446 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.309999372 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.315249053 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.309034562 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.309223719 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.309375313 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.311398093 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.323818819 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.308108655 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317164286 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.337097391 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.327023118 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.307156383 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.310498892 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.307008688 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.309923296 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.307995161 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.311185052 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.310204103 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30966996 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.311251849 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.309861623 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.312703876 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.311182594 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.308724407 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.309173626 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.309448686 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.31073295 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.307543022 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.312926424 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.311824707 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.314292796 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.313279063 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.313471213 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.309628242 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.32152618 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.337316901 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.310573057 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.313578805 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.308680066 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.312518684 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.312523959 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321762183 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.318108169 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.311860447 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.311685066 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.310126189 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.312404921 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.307267914 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.309005852 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.308822017 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.30885938 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.307736947 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.321000668 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.321651508 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.313295508 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.308414229 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.313753998 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.310683143 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.310550967 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312818029 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.313423917 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.309980082 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.310782656 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317420707 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.310669602 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.311302255 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.313129364 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.318868497 seconds)
  done (took 772.963036777 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308418531 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309482074 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30831642 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30904257 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309046568 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309008541 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30874238 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.308810553 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.308601149 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.309683902 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.309157126 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308963042 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.30824917 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308678489 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30905658 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309668665 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.309541219 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.309745949 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.31011208 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309187293 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.309293207 seconds)
  done (took 28.721868834 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.31220635 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.309534586 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.310284472 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.31212156 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31008247 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.311703635 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.310181861 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313294649 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.312816838 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310720626 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.31333117 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312907172 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.30954733 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.309854329 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310192251 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312764637 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.313053568 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311076414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.31402652 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311927019 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313417157 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.311124533 seconds)
  done (took 30.088261313 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.31652072 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.316176038 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.313024113 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.311130434 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.313889938 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.31219801 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.316370208 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.314337465 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.313731609 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.313697966 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.312543339 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.314644401 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.321334172 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.319745845 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.314362674 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.315400214 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.458778272 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.317159917 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.318267836 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.317072619 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.313199868 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.319829043 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.312610169 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.312212329 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.3135631 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.317466883 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.315961112 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.315098145 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.317476621 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.315697195 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.322227138 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.316032634 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.3156629 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.317241515 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.314718945 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.3166781 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.320106864 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.318818326 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.313726616 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.316153687 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.326185117 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.338392802 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.31784761 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.320717998 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.317177988 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.316038303 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.320401533 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.326944238 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.313625013 seconds)
  done (took 65.906668335 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.31584515 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.31663999 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.313344078 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.316340679 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.316370334 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.316519296 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.316575087 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.315808681 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.314223993 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.314831279 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.317573068 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.313986973 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.314411339 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.316317889 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.316436935 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.313878409 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.314785796 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.315491002 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.315047167 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.314764764 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.314382383 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.317290088 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.318011044 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.315589652 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.317961564 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.314602629 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.314271066 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.317399848 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.315554683 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.315531478 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.318872141 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.317452586 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.318251674 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.315341441 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.31616073 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.318893491 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.317802921 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.315717467 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.318292303 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.315983869 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.319128826 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.318733258 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.319145478 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.318501592 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.316150593 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.316671543 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.3162743 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.316344668 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.316468794 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.319198753 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.318614612 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.316051621 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.319370628 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.316501465 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.318964835 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.319090381 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.316068825 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.316964788 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.319321557 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.316808357 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.316487132 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.320169195 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.317891902 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.319605581 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.31953118 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.317605838 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.317159867 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.320442802 seconds)
  done (took 90.78407986 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324457361 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.323241557 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323551049 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32343897 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.322957243 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.323124735 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.322640791 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.32378413 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.321938082 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.322359292 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.321390596 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.319880533 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.322138348 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.320458033 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.322606596 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.322968988 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.322709653 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.32298126 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.322239433 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.323570644 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.32290769 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.322677942 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.323671133 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.32276702 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.323371708 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.323420362 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.323263375 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.323564334 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.323135677 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.32483518 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.323495938 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.324208679 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.324713074 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.323978669 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.324407339 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.323057068 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.324204551 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.324479066 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.324118247 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.324647543 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.323925458 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.324522206 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.324740026 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.324142978 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.324452547 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.32465133 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.324992026 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.324700951 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.321852436 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.323581835 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.326022461 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.326521995 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323952777 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.325209362 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.325942766 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.323157733 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.325266371 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.326238683 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325757839 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.325342597 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.325543474 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.323060562 seconds)
  done (took 83.311687144 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323010015 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.322597737 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.321654272 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.319890622 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.322696679 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.322288634 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.323010738 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.322529626 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.323778342 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.323923952 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322740111 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321286526 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323486963 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325013273 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.323118415 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322999984 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.323031586 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.323406796 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324499556 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.323386482 seconds)
  done (took 27.700326205 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.322771662 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.325047764 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.322521668 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.322147099 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.32493282 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322504891 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.324558182 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324895435 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322415663 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324169927 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.325559027 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325770756 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32164197 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.322786187 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.325861229 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.321893838 seconds)
  done (took 22.422918147 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.323563564 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.3253469 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.327886296 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.328165387 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.323154455 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.322993348 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.326349614 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.323193268 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.323343612 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.326596311 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.325258236 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.326550645 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.326898243 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.328759822 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.323193276 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.326568185 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.323725848 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.3238685 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.326201734 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.328324731 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.325370697 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.323368902 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.326372402 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.326892748 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.323470886 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.324301648 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.324779141 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.324679481 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.324196374 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.327324837 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.32503661 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.325098835 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.324722119 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.324421007 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.331140015 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.325005139 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.32868111 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.328064854 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.328163619 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.327036944 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.326688097 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.325564499 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.328391214 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.32966067 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.326099201 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.329228183 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.326871054 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.326468844 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.326498337 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.32779114 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.32896153 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.331867841 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.330065349 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.330721033 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.329971082 seconds)
  done (took 74.198279589 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33092208 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.330944443 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.327202821 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.329938904 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.330834363 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.326834072 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.33056022 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.327921095 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328750835 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.330523285 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328761308 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.331163117 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.328236137 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.33192039 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.328822713 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330436394 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.327427156 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.328471838 seconds)
  done (took 25.177408008 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.329240783 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.328744363 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.331354191 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.327847935 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.32921702 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.331172839 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328408857 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.331722371 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331899233 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.332226954 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330064666 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.332271124 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332096317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.332529413 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.329781055 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329684777 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.332435955 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33203106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.331049591 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.32939254 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332275237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332064189 seconds)
  done (took 30.527002512 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.330975604 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.330884414 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.331236951 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.348251818 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.350685146 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.355273161 seconds)
  done (took 9.296920402 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341360934 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332642701 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.329426102 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332967729 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332813572 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33038623 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331096661 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331193174 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333766209 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333736849 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331737714 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333011242 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334058266 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331274133 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333071638 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333748065 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331548403 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33196983 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332489079 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334006206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330517482 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333691556 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331688473 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331187652 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33272535 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331916892 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333763829 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332962928 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332776963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334890889 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335735692 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330683462 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333644064 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331990775 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335406786 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335284488 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332852334 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336408657 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334797178 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332492891 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.335066638 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333535461 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335043931 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332630325 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334412383 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332499315 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333018517 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332102232 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333374284 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335313476 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334688732 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332778663 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335266882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33562941 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335454753 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336319231 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333558553 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334357127 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336555684 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333831526 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334892388 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336285501 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334356436 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33390223 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336780408 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334220437 seconds)
  done (took 89.293729572 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335632419 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.333454219 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334316861 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334402378 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33240272 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334084638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3349125 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333580248 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334524741 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33510607 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336360421 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334702898 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335630524 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334059013 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334525214 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334725158 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335717296 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335784322 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334167212 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337939491 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334473191 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334679111 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335344256 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336024381 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336597938 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338423439 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336795688 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336756865 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340141351 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338108298 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335764616 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33638722 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336277155 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.336059332 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3372451 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336597589 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337494423 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335179888 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33575105 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339048364 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336066293 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338286228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337308291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336060186 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33628921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337272971 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336557806 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33646016 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338767401 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336514777 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337280614 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335995663 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338052561 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337763379 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337833064 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336845159 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337705637 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337342428 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336732897 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339503749 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337026058 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337547704 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340157018 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337742798 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337834023 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338605116 seconds)
  done (took 89.461912767 seconds)
done (took 1803.004277373 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.367940322 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.339024673 seconds)
  done (took 13.963133232 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.501152055 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.455891107 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.338954279 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.350264336 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.339297456 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.337219035 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.334685893 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.338896414 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.338830059 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.338797975 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.339640728 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.531319864 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.369232895 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.33852431 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.339379596 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.434125824 seconds)
  done (took 43.292857735 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.368843987 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.345275165 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.471576475 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.368504995 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.369196228 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.549812975 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.408855826 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.349448165 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.540813018 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.395010617 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.151523465 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.374697259 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.342471247 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.636744977 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.371300923 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.552763752 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.619581778 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.076953654 seconds)
  done (took 31.552246155 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.858862931 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.349011759 seconds)
  done (took 9.467524033 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.368775151 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.367649544 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.347868484 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.363191322 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.365604515 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.376834285 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.407462172 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.399604547 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.384099455 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.423188789 seconds)
  done (took 65.071145096 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.367008285 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.345229724 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.345514406 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.344831264 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.346088724 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.343939061 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.344683725 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.338193591 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.517233479 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.496084356 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.353525764 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.352583661 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.365051911 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.346279743 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.343624514 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.383025503 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.520574378 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.348862271 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.343241882 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.353489978 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.345858006 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.439801078 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.39777242 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.349912527 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.488621847 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.516933345 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.355134969 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.352258935 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.496590697 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.344284804 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.346390728 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.346053536 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.347680629 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.979795577 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.804219325 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.359818945 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.390591922 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.353496739 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.344259633 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.513808267 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.352371792 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.352153038 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.339712266 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.800084074 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.505261339 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.480896649 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.780028257 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.356473319 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.348120175 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.413224935 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.34883342 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.349364854 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.379237626 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.166891937 seconds)
  done (took 113.610541909 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.344624526 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.73189515 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510075355 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.366380161 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.069561801 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.982761892 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.364462364 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.663012157 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.344727537 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.340706906 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.643243074 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.891785261 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.370260062 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.339528095 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.625422609 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.356189495 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.34229891 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.0891599 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.365770401 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.343529438 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879576719 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.349133247 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.35927508 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.612046891 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.382808378 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831197876 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.970647051 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.785272653 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.36755855 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.342977936 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.85008373 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.373034436 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.385427445 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.343881213 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.622628509 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.739116019 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.712863306 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.343876614 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.374025215 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.348302308 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.370388661 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.826403433 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.719454059 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.341535076 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.361422664 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830665287 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.343078305 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.353106039 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.346353053 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551541627 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.150277749 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.35821531 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.90960329 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.345496312 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.705448691 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.379924885 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.431771637 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.862312824 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343435517 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.438977389 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.372641199 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.343453203 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.347752032 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.345718588 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.348226457 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.725516745 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.601421338 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.349165513 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.725864217 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838203224 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.366042449 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.90575857 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.212838299 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.356878168 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.411926808 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.360578897 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.994168062 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.878120334 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.36591663 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.345584335 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715182447 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.348636941 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.64583987 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.363292705 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344760063 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902991976 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.361545678 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.359448103 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.346870017 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.34747406 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.058262428 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.352386734 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.650279966 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.417407574 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.346912027 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.346299667 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.391005948 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.347812898 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.353497991 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.350231259 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.908524916 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.375766703 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.485783509 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.368144426 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.351445506 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.347575284 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.349549276 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.347719671 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570456667 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.868458621 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.359621988 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.347220006 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.347816911 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.370634716 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.615586256 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.346648989 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.689113994 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.350344209 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348119866 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.353560893 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.007715841 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.380684492 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.347738363 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.350567785 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.290075701 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.555836443 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.368919799 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.349122144 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.34922832 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.374096437 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.704464931 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.371647726 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.380730829 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.350852915 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097318268 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.410411366 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.369423318 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.812007439 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.353794051 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.344949942 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.371424538 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349148311 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.652134809 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.636132649 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.472782544 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.349811958 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.350333848 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.083461233 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.428515184 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490379452 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.376398032 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.391963394 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548742448 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.471035432 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.352690532 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.978697252 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.350962184 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.568179688 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.3584764 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.659167 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.887400551 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.375587159 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.353532127 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.108376366 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.117201439 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.01078912 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.354387186 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.645502991 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.358707404 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.827547816 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.350484751 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.350688548 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.840012915 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.360287061 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.35720125 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.351867839 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.351380412 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.502175445 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.528554279 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.97773187 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.354770249 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.838423532 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.419633233 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357325495 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.360514034 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.353139981 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.696746106 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.420284572 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.357196053 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.385854653 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.354799296 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.354041792 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.873835572 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.210200785 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.359153425 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50656999 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036149838 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.378851904 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.353013873 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.062031197 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.489668752 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.913721452 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.373504455 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.712587303 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.361371945 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.394279239 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.007944004 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.418422278 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871655854 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.362330294 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.353319844 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994884574 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.379131618 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.440258502 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.354290052 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.354607677 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938147617 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.381024176 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.358696152 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.811908852 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.382749102 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.628329981 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.360706449 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.363842886 seconds)
  done (took 1116.809415075 seconds)
done (took 1395.02451992 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.354202582 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.355009051 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.348441487 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.358083836 seconds)
  done (took 26.693056961 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.363013212 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.363069859 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.361670665 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.35741891 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.361249125 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.357721593 seconds)
  done (took 9.439514516 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.447002154 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.358287673 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.359402942 seconds)
  done (took 19.439229611 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.592914825 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.778429895 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.746620146 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.849783621 seconds)
  done (took 11.243804786 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.362676064 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.363557792 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.363857117 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.362381386 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.364727756 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.365144345 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.363640671 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.363605969 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.36607811 seconds)
  done (took 13.550829885 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.824259388 seconds)
done (took 87.468480482 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.777897796 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.418274656 seconds)
    (3/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.351931925 seconds)
    (4/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.141336526 seconds)
    (5/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.862270103 seconds)
    (6/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.481455069 seconds)
    (7/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.454127453 seconds)
    (8/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.793603623 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.646181904 seconds)
    (10/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.430283122 seconds)
    (11/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.443302774 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.042765591 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.353813886 seconds)
    (14/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.107315468 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.422996564 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.38036066 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.428085168 seconds)
    (18/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.780442675 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.094780566 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.347656051 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.920000804 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.348849699 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.272935117 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.851036008 seconds)
    (25/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.447978903 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.057288407 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.34228048 seconds)
    (28/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.080293006 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.362069711 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.368685093 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.350663334 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.121656168 seconds)
    (33/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.469267604 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.050098805 seconds)
    (35/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.426901339 seconds)
    (36/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.923542738 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.401883932 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.990648068 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.486358127 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.38044153 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.355657278 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.349413095 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.457456538 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.401631865 seconds)
    (45/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.953663831 seconds)
    (46/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.436831218 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.028938458 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.39908983 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.379059948 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.468328053 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.687776891 seconds)
    (52/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.385414863 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.429528434 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.62095652 seconds)
    (55/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.482738166 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.007974101 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.451607208 seconds)
    (58/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.269025288 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.787569752 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.37563179 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.020823491 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.79523663 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.43399126 seconds)
    (64/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.087173568 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.354402316 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.617132615 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.356234679 seconds)
    (68/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.424534745 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.127184599 seconds)
    (70/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.461010405 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.461862039 seconds)
    (72/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.555905481 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.436928104 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.669091938 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.18914 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.711464563 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.100252271 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.516759821 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.731238746 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.816237426 seconds)
    (81/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.404926485 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.209596507 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.344576619 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.929493106 seconds)
    (85/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.391580169 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.102327984 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.649753104 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.357050802 seconds)
    (89/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.912394969 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.35556065 seconds)
    (91/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.583491202 seconds)
    (92/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.445632692 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.446886049 seconds)
    (94/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.557467386 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.482854333 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.348740427 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.378733264 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.346077417 seconds)
    (99/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.560172322 seconds)
    (100/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.470334821 seconds)
    (101/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.789966193 seconds)
    (102/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.372875896 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.355053679 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.35479437 seconds)
    (105/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.451397375 seconds)
    (106/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.165225016 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.368124139 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.617207042 seconds)
    (109/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.388315655 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.465950395 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.347049747 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.380108937 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.631501389 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.362207807 seconds)
    (115/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.369422802 seconds)
    (116/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.337634203 seconds)
    (117/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.460769299 seconds)
    (118/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.348195849 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.223056267 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.4820628 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.460728533 seconds)
    (122/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.349714094 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.517588201 seconds)
    (124/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.393771484 seconds)
    (125/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.364790371 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.369226878 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.901835162 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.391379202 seconds)
    (129/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.172980727 seconds)
    (130/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.407397109 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.646310654 seconds)
    (132/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.47223689 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.379171495 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.389719559 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.2325633 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.634437329 seconds)
    (137/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.399629584 seconds)
    (138/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.351167763 seconds)
    (139/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.397930438 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.481487444 seconds)
    (141/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.403046537 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.311070408 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.674021198 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.363938863 seconds)
    (145/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.524637566 seconds)
    (146/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.35469996 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.242661887 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.391339118 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.213758654 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.365815241 seconds)
    (151/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.252745433 seconds)
    (152/309) benchmarking ("sort", Float64, false)...
    done (took 5.69989128 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.389979735 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.283856326 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.365312979 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.235835598 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.685262788 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.387703792 seconds)
    (159/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.392564667 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.391157334 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.387034594 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.367008137 seconds)
    (163/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.976427872 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.757704173 seconds)
    (165/309) benchmarking ("sort", Float32, false)...
    done (took 5.422639094 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.400554503 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.378855291 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.312714473 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.364118238 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.209699839 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.413764741 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.611425409 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.374906184 seconds)
    (174/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.826194259 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.367708874 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.352589576 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.404637977 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.215445011 seconds)
    (179/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.384035979 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.366478933 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.455873319 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.366125746 seconds)
    (183/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.766668363 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.401172476 seconds)
    (185/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.353108574 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.117423895 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.383817888 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.352393613 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.389921353 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.4164422 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.463469046 seconds)
    (192/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.498047582 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.393044282 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.368020393 seconds)
    (195/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.368878748 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.069251001 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.367756293 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.26416576 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.940493887 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.42528275 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.453038562 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.766481448 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.360574928 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.395478811 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.355483923 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.323921497 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.620758962 seconds)
    (208/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.910674087 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.403490629 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.366642152 seconds)
    (211/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.48607904 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.43919721 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.584549082 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.3310861 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.283450086 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.392754041 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.115113099 seconds)
    (218/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.45926466 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.793543011 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.37796364 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.380444189 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.358752065 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.415959283 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.27879254 seconds)
    (225/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.415905979 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.409242101 seconds)
    (227/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.781588799 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.356059183 seconds)
    (229/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.226057102 seconds)
    (230/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.872595165 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.230156824 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.377946267 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.761829442 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.407129485 seconds)
    (235/309) benchmarking ("sort", BigInt, false)...
    done (took 6.372172284 seconds)
    (236/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.090130896 seconds)
    (237/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.38603276 seconds)
    (238/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.093411636 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.401100008 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.377653194 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.421392544 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.401626926 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.364369362 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.863591389 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.428062812 seconds)
    (246/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.999270172 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.363317157 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.486427201 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.369726032 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.602109183 seconds)
    (251/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.39906854 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.639618106 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.414518766 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.397658616 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.203107797 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.629768538 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.4618192 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.224631725 seconds)
    (259/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.356750744 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.790885021 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.473803503 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.284346857 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.394811299 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.387832855 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.380621023 seconds)
    (266/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.476925632 seconds)
    (267/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.86095489 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.706142012 seconds)
    (269/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.955426014 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.366031667 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.380172736 seconds)
    (272/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.120219726 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.225474271 seconds)
    (274/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.400865334 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.455011932 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.651026541 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.370391019 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.45617305 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.395455559 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.389193947 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.489104652 seconds)
    (282/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.358133161 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.387455734 seconds)
    (284/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.429124201 seconds)
    (285/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.431008281 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.384200195 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.21094615 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.449360359 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.902409912 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.364454516 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.416575195 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.397519802 seconds)
    (293/309) benchmarking ("sort", Int8, false)...
    done (took 4.442790273 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.424784784 seconds)
    (295/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.922833162 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.373491328 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.373825608 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.181202696 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.852245353 seconds)
    (300/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.171410342 seconds)
    (301/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.36055399 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.910313195 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.405803273 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.361621775 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.746800474 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.937063641 seconds)
    (307/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.408694138 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.406069213 seconds)
    (309/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.47034662 seconds)
  done (took 1063.688611804 seconds)
done (took 1064.965670717 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.405864752 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400946849 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.383015084 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.405468748 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.496042086 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.567565343 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.394265996 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.386847246 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.432316859 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.434007935 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.384410767 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.566113828 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.386905111 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.385496582 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.385317027 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399610485 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.591844647 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.394474693 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.403963989 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.394843527 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.403006905 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.385715956 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.435209146 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.567859441 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.389077233 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.388987588 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.39046384 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.405925101 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.497999758 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.390037381 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.388414983 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.397801569 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.598940626 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.392988878 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.380676137 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.405969839 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.397763385 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.395765755 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.390612388 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.418892002 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.000794165 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.387383873 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.389030395 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.38790639 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.387442542 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.392346889 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.38885443 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.392542523 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400705035 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.401650639 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.990522224 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.403714607 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.390846618 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.388897309 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.398073814 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.38858388 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.392017462 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404661108 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.407978297 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.404264755 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.594450848 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.400654226 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.390503213 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.40552051 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.396237313 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.084628038 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.38909011 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.392157752 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.004620551 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.394869131 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.030484071 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.397883133 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.390591115 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.40424208 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.421447227 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.548648111 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.385073005 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.389234056 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.399435629 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.389917633 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.398774218 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403316801 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.395842649 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.389777541 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403316691 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.572589304 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.40019519 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.392281461 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.398490183 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.408966049 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.398333864 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.401415784 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.39406094 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.386318267 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.399871362 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.394549007 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.394383993 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.394169466 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.394400163 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.40162315 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.006459801 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408795398 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.386304874 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.388605678 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.389291121 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.405584805 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.009843647 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.392311202 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.413056035 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.438710087 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.392879473 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.539284419 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.396338044 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408402184 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.400874819 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.394655326 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.386762864 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.543216222 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.002376795 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.407490957 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.393989753 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.389517689 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409141728 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.394166745 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.388934357 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.557492123 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.395223247 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406272859 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.514759791 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.403609526 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.424865207 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.391448039 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.396328462 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.433761471 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408746416 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.424692621 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.396084692 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.409042258 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.409813733 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.391334179 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.406027595 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.404963599 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.395220138 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.399560287 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.388266439 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.430755302 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405841848 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407354863 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.414459167 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.51576521 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.391890071 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.54728404 seconds)
done (took 237.312403736 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.454042899 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.385924469 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.478333049 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.391998234 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.495619912 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.495677325 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.389411029 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.389447684 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.389252087 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.770886583 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.391697883 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.389510397 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.385049889 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.389486324 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.474352224 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.39200234 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.389415805 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.732796624 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.39547384 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.464742006 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.388359403 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.390031838 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.393049881 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.772250526 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.386662477 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.385758663 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.465151409 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.391989319 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.736986768 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.390433612 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.38909782 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.737053688 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.485352998 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.410237364 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.403876578 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.39955947 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.497513577 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.414972118 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.474893868 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.474323054 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.479258854 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.435371907 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.388419254 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.39520753 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.395208652 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.398115215 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.391584099 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.421031255 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.387620079 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.392406782 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.736012335 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.404981987 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.391635594 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.392030053 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.391220322 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.426662496 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.392708815 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.397324534 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.484665566 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.398111733 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.458318918 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.775019818 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.799991607 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.395283165 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.392377938 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.393790777 seconds)
  done (took 152.453785999 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.461600093 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.46879397 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.514693948 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.396794389 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.444408982 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.519372063 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.402132404 seconds)
  done (took 11.51506263 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.401254224 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39648983 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.446287833 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.445400357 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.398471884 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.578340385 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396963357 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.405976681 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.394727256 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.449202586 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.398386716 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.396606658 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.403208929 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.397151303 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.445200947 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.407484029 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.512026454 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.397529902 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.400231365 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.553846005 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.394865724 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.403660876 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.44906585 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.408201633 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.398403227 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.403449373 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.236879217 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.400760794 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.394994362 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.397160466 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396058038 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.502714681 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398228393 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.39199796 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.394678141 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.513508254 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.400452661 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.395634509 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.398806748 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.392873547 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.398881312 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.398833541 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.398087809 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.396064072 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.398694925 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.420686073 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.398050722 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.399332669 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.398831438 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.399037198 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.449274152 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.399908128 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.395547106 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.397138699 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.455033785 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.406459275 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.404069551 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.398222796 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.401429603 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396127197 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.555314255 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.454920318 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.39873119 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.446449677 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398881194 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.399415909 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.398658615 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.398712343 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453981593 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.400975259 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.446944608 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.399389967 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.591997545 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.422790827 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.40175321 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.402982075 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.403133378 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403487056 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.398179667 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.405898191 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.398314087 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.400818203 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.406558207 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.398947115 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.398626166 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.605701097 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.51002646 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.398319646 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.413529268 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.407379096 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.398492337 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.453495624 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.400126035 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.398707254 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453031376 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.516689265 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.454789476 seconds)
  done (took 160.114682902 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.406453572 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.410126362 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.404693925 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.42581231 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.403109329 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.401954724 seconds)
  done (took 9.764961417 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.403906515 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.40475973 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.40176794 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.401734492 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.404760387 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.404415918 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.406167803 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.403892432 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.410810492 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.402298337 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.404201069 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.414076845 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.404357427 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.406750988 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.406430392 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.403523532 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.406802961 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.401552188 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.404146204 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405805603 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.500256599 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.405970226 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.407588866 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.405993313 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.410265305 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.404236052 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.411231716 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.403886347 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.403448939 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.409117855 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.410657565 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.406869061 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.405636354 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.411524855 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.412923626 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.406640878 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.409568989 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.415961243 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.402821456 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.407312656 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.415503423 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.408206907 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.405388804 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.415783876 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.40661947 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.411407074 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.420594746 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.411725587 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.40845113 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.416606849 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.416253776 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.404086183 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.407072051 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.417227828 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.407677844 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.42881958 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.421340306 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.409342375 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.408385617 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.407638688 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.407687999 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.408346453 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.408705826 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.413399 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.414042017 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.41791423 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.4071849 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.413843082 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.409629013 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.406347229 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.417535422 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.404205525 seconds)
  done (took 103.846821997 seconds)
done (took 439.000567633 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.651616837 seconds)
  done (took 7.969267677 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.910571582 seconds)
  done (took 8.230903965 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.555927689 seconds)
  done (took 25.883585173 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.490699372 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.534867047 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.409880353 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.402885632 seconds)
  done (took 27.158922166 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.630564011 seconds)
  done (took 7.949722352 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.407709949 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.400852067 seconds)
  done (took 14.129000391 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.882037143 seconds)
  done (took 8.201239567 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.606750815 seconds)
  done (took 7.93503162 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.416665734 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.422601883 seconds)
  done (took 14.172406192 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.400688147 seconds)
  done (took 7.720425939 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.571518705 seconds)
  done (took 8.892430626 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.399455547 seconds)
  done (took 7.72066385 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.476430376 seconds)
  done (took 7.797350818 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.516717263 seconds)
  done (took 10.835844071 seconds)
done (took 165.915897109 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.40033847 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.409902921 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.408634577 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.409490623 seconds)
  done (took 26.949010396 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.44212727 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.442749315 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.443471886 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.452745597 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.446196599 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.443083952 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.434564971 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.435190252 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.453936557 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.445525417 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.444563131 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.444941063 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.442674718 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.434896167 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.444995836 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.444281298 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.456519515 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.444962324 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.43611036 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.446522936 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.410347556 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.454218811 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.446285061 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.411634752 seconds)
  done (took 35.924364627 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.93133291 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.480823863 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.563500722 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.46298246 seconds)
  done (took 7.760632117 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.462796462 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.46359553 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.476693213 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.514628508 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.541301554 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.473991142 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.433972633 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.432377153 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.419225269 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.464708033 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.539285982 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.480578616 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.557418763 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.411155916 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.597661919 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.411965046 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.411187279 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.464313073 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.515469791 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.536772196 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.412340604 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.464602435 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.47271539 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.481666118 seconds)
  done (took 36.764249684 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.412589976 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.430352324 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.412166444 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.41110956 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.421017369 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.411595911 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.412548532 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.411815705 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.411936925 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.417540269 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.412011441 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.424827921 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.411307764 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.412175276 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.417771825 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.412670886 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.418054325 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.412410245 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.412863127 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.418716127 seconds)
  done (took 29.629976443 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.40659508 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.259961488 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.757938307 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.661428731 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.405826833 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.405878908 seconds)
  done (took 28.223295918 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.496698683 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.657530827 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.420504308 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.845499128 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.936488173 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.423617112 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.415302029 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.740220333 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.079207375 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.071170732 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.481388265 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.491889822 seconds)
  done (took 21.385941239 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.414987164 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.416800633 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.420332275 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.431868754 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.47786811 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.422659092 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.421633476 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.407013253 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.485711707 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.487670302 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.422436423 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.478548671 seconds)
  done (took 38.614910153 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496232568 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.458278804 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.473702313 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3403543 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133953368 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620855686 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354946597 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.178139419 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.41247101 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683313779 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426321309 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505566062 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667842507 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409108463 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421219396 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.568884464 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644000838 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94564269 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411936385 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117944797 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443492087 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42312694 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.212086899 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.693026431 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630705479 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.393630308 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.703883076 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.189558786 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750635819 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432416302 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421429444 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410210483 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685058125 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136382869 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513774815 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662391683 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.37379854 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.958721394 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.416280224 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.064244509 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422250798 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421668326 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421759823 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412085474 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.346703004 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423766597 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211479774 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.417287842 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.124718282 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414711788 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723990904 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519413104 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.418753007 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.408097327 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413121057 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.443131384 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.417615949 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420069867 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986112086 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.581140371 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431648047 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.355383505 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.978264136 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.993915876 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119890818 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.427579337 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.416836978 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417273412 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347546508 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.054073261 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438174933 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551284044 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.438838779 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063278095 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240945457 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427219042 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.35321859 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010384825 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420837842 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.358175529 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643580545 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.190134535 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355120981 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.366176356 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.349029001 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177449501 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422840954 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.88114967 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422759483 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.186154308 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669000726 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440290248 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438402889 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.639874828 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.302047549 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415326995 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.431225025 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541268974 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437130966 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.203937184 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349503935 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.419080896 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673972741 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.628311479 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431317747 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.570544636 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998460894 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432341316 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.43913844 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431302943 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.678066341 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.095446109 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442165112 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.597161631 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444054348 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.192470422 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223357204 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417913013 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.42981247 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.423150712 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701206852 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.264965769 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.300138753 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484714714 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422100602 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417494833 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.107435991 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277500045 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.577117304 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.66264821 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460007006 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.436589941 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.422068579 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380210512 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.431318357 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431530999 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.206162434 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642819556 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419330831 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702054387 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353411911 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556358862 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.434924079 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.642550094 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.816826289 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.433133834 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679940467 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424968999 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434698942 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437100529 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437263845 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51873202 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441124373 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.430913416 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.684800162 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.423120529 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.42309271 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.095108079 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.204809465 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420915263 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.42569214 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.376861206 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082945912 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401752777 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.426660436 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313952526 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.433762421 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489034365 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425326622 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.675916923 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.559754109 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.484027936 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.424581075 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.435694598 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652502215 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430715229 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.00617547 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509518751 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.972138501 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084872443 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442856856 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.356283346 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.131625445 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.113894133 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421504419 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.613236339 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421275946 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676414535 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445049586 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.165407669 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.099413696 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432694168 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.022974027 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.435922726 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43520181 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.428631086 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423225569 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.545644612 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.623513085 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433232254 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.463148322 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567622579 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.437467276 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.357805256 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.93909224 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429177998 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.423054116 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.201238231 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458445089 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.040103007 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313799931 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683699917 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.389063556 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730604501 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.239590903 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.466151751 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.427691312 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435366133 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437845442 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.452801669 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441158889 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.436123414 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.082178538 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.881786745 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993042079 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2867287 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03385637 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.829933454 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.426129232 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.33101694 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.225801128 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358970133 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084920162 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645604455 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212217803 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380458126 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97944804 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.82353177 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.319560667 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739828434 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663903384 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.818999511 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.440824413 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742575401 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647137706 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460549722 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.425687894 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.362443525 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.71275641 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059251861 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445312653 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511717689 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206643772 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429736279 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.214777517 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.425353956 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.225752429 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911589684 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.982476428 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.821219637 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440189688 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435484233 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334115852 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433628522 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.956389958 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115561097 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.429732041 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.00057204 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366643611 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.684537815 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.446621917 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.430726185 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.068648443 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.445233895 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.693603618 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.737259729 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372297908 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445048739 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048072501 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.294610715 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.432944229 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428227305 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232424976 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438265187 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772153129 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.447404005 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.555450245 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44418929 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.363324309 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362608872 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.121627805 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438202688 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398830911 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951857673 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.942029678 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.598812479 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463008513 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28846763 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.686849567 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.442956612 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091674995 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664689723 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.46508263 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450974355 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.433590796 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441344938 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.426106816 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.32957268 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666530542 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429141169 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.654786215 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.487563114 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.336149897 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427709265 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641968977 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.312920522 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.446725255 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724234952 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.148378601 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.431555901 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279955392 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463954549 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.444334606 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.4574038 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.995730595 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437666856 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501441646 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687210635 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.451965095 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.441535781 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915016997 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447389893 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443299302 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.446486381 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525233149 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.665333968 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.562929934 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.213197443 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105496872 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315215422 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120101942 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752588852 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442474841 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437130908 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367478385 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582418875 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.961901612 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707131107 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552797014 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.132342636 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454304898 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444349086 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461249265 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653822469 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706985988 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.309035224 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448445953 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104431328 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.33809954 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445186919 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.645007111 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960477409 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02597094 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593004072 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.446232688 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237079593 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709638189 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.52536935 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435317207 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029624081 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.447336539 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.245908577 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.44022287 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443964574 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590126845 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744744075 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199912588 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.452472045 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.591323761 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.207984131 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159799896 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.701567479 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.973210714 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.702411771 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118482643 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.252834389 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709566518 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50584985 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692842953 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.564897473 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583134052 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.433216591 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.327441993 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435828372 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286821132 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.146189151 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.447393721 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129512356 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710021604 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.440700757 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.435467688 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467310491 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.446659549 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.661340727 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2170852 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.660961065 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446883955 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445664209 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.428120106 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115746674 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75848629 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381064398 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.441001205 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72334472 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.683412572 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4623434 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.89040196 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.148589023 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030173213 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.413289318 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459479678 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442171847 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263851693 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13128291 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.570360338 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983808442 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.098838407 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437350719 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740173821 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.443244453 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.454321522 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722972941 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.443363341 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.440353587 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.706622867 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.1199968 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.324089207 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.457057063 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.186248869 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.38440687 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.668105766 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221774691 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374748065 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448778464 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.940669556 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.469656944 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560223944 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451075134 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.436802282 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466187112 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.180478949 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.7241139 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.446377499 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.447317811 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.425685054 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.450782696 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455966609 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078807556 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443736861 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.12317293 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.794355431 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.698089141 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.440776729 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.45357754 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.444029296 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441203213 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165895023 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417145837 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.198554556 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03512862 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.442207947 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.461260713 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.444986254 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.658065645 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652850244 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.442178084 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710513261 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464233546 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464607867 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.346879607 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.215157609 seconds)
  done (took 1657.781220888 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.464485555 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.497857657 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.474778015 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.550242487 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.540297198 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.475016265 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.509980025 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.484292629 seconds)
  done (took 53.354261681 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.456313291 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.611324181 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.481285079 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.446010149 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.459232678 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.443755369 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.968634683 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.459207269 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.458843374 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.453285725 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.447779156 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.445420439 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.200636468 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.461944147 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.450261011 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.453145304 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.456782021 seconds)
  done (took 67.520011387 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.442283064 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.609011385 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.496488038 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.444204903 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.469208485 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.471926213 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.335466447 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.463337368 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.443186149 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.597604728 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.098548921 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.468107721 seconds)
  done (took 82.698460087 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.453890163 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.454233978 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.45470059 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.453495167 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.454319974 seconds)
  done (took 8.6300299 seconds)
done (took 2096.558318816 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.812776663 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.279952448 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.192433259 seconds)
  done (took 5.831576621 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.59012116 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.640658617 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.775244206 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.797947049 seconds)
  done (took 8.160503364 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.729746299 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.812546128 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.636541995 seconds)
  done (took 6.535449513 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.094081822 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.463030394 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.580289967 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.444600654 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.451582534 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.452339627 seconds)
  done (took 20.706840114 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.447707261 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.450791319 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.447443971 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.450052206 seconds)
  done (took 7.155202588 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.429803236 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.225996464 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.43868895 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.451862825 seconds)
  done (took 18.904123837 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.197111335 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.20737786 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.191252211 seconds)
  done (took 7.954828661 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.454157989 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.396735917 seconds)
  done (took 10.209889161 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.742881215 seconds)
  done (took 3.102495707 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.578622378 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.777875779 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.738121867 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.53663952 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.743521342 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.130220075 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.452113738 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.939632988 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.48254471 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.066940573 seconds)
  done (took 31.806982539 seconds)
done (took 134.677363174 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.79020787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.848398184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.653643242 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.765033815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.675755627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.652767258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.770993086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.730009873 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.562958158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.280504758 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.810518289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.677311824 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.719736018 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.850434267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.720416102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.467638664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.671107471 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.849994435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.447058302 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.462178246 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.773428163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.403518237 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.635766587 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.429902587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.673559306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.600666397 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.000998699 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.468179952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.445531136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.026425512 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.601020149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.448360511 seconds)
  done (took 202.27437664 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.445186078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.463362567 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.446176909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.46384322 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.461465736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.446536956 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.448544606 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.446159094 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.454941093 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.462454113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.446213597 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.446983694 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.446102689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.44702095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.446843887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.446759445 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.447310921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.446549143 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.469348567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.459998075 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.448705789 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.447110234 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.448451761 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.45044784 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.44833283 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.44782792 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.455267083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.447344319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.4767356 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.448285121 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.449981224 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.448698532 seconds)
  done (took 207.821340457 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.447621849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.44741782 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.448182395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.457044159 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.448215835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.457556578 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.470501372 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.448833829 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.449267976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.480041793 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.448160092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.469065249 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.467872659 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.462205286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.450390592 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.449810563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.448094814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.457521513 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.459575395 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.448466047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.468201072 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.449397036 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.449168275 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.468129191 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.458078524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.467924742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.449612322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.450045385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.449985613 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.46635146 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.459792226 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.479370941 seconds)
  done (took 207.995819729 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.65437499 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.457633867 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.459126423 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.398285134 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.464022655 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.47424084 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.454981592 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.650342313 seconds)
  done (took 15.377374063 seconds)
done (took 634.830039621 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.049363535 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.738655745 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.67797872 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.486300739 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.417947738 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.509329468 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.478620678 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.669769071 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.461111189 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.697098745 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.85576594 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.476976504 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.005944239 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.478120425 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.755339367 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.583987716 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.397466948 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.491082275 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.824142253 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.172266981 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.76748888 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.047083859 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.66830421 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.469656869 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.041636221 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.045614253 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.295253626 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.377934827 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.479695394 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.82924459 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.467493805 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.690928265 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.535785982 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.528088648 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.58243421 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.588629717 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.623398933 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.554705018 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.674988524 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.791620034 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.170482092 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.270411131 seconds)
  done (took 100.094780454 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.450609817 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.448892958 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.448853139 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.449677375 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.450863086 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.449865499 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.448695194 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.449469813 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.450397752 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.449058382 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.449071989 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.452446234 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.449407004 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.451374494 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.450133852 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.450441087 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.45138249 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.453044131 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.450301995 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.451694932 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.450809306 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.450135883 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.450885398 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.450819091 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.45159473 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.451753311 seconds)
  done (took 39.082124989 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.463710817 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.732268854 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.915743529 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.46973787 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.462009519 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.467203627 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.55345839 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.464970327 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.466523423 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.467438233 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.644183736 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.467193353 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.499465675 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.948242441 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.466465256 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.465678734 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.464374014 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.463859447 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.740631881 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.473332948 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.576798676 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.466640751 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.55539134 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.474620443 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.488488384 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.464174478 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.470200181 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.999252486 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.477198248 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.645289789 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.406123595 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.560653924 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.954375821 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.932836072 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.408039976 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.476095511 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.466624989 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.649210542 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.467365004 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.464764386 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.553300391 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.467614861 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.924166804 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.121863636 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.489639651 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.475973748 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.025499742 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.658993621 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.763433201 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.484138972 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.952918209 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.470034116 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.468258825 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.468151496 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.761802137 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.48288453 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.466600383 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.032154038 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.493147481 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.556075252 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.468718243 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.468654792 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.75010998 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.467550141 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.737779618 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.470047912 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.475810841 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.490524465 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.932786696 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.480420424 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.141996298 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.486929748 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.468433564 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.645403126 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.739154338 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.065927614 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.480561611 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.757830437 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.977576169 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.567471251 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.48180647 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.992363898 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.574079097 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.480967598 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.472782028 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.4710635 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.470486072 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.521137455 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.559156796 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.071511939 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.141223607 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.077480146 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.592930326 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.486988704 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.469340187 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.046688488 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.500142205 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.471339165 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.935339838 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.148590624 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.490340192 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.477243213 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.147164067 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.494223949 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.562140881 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.484095962 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.931958017 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.471734916 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.521367533 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.470412885 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.477907441 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.496790767 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.560326777 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.480226451 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.471286353 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.111182867 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.678943763 seconds)
  done (took 193.358039603 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.468454582 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.485143579 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.46588407 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.464665724 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.464122483 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.470994554 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.465347391 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.464767363 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.471539589 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.463545429 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.463343296 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.464679852 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.466305873 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.488222447 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.483836882 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.472181958 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.077723473 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.464938187 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.475748387 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.46642658 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.29666503 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.474484342 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.483909397 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.466207823 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.468651959 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.466874728 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.471260122 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.490096847 seconds)
  done (took 156.005261963 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.475143066 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.124923192 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.478363502 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.6249319 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.498663761 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.471787172 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.622655408 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.538357973 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.476156099 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.472621059 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.472029523 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.822799541 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.47594146 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.070855956 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.700716013 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.625212378 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.070492012 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.495374804 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.473675726 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.473865651 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.629196789 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.485990515 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.842548875 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.174386387 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.48668411 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.173613104 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.474275323 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.476703908 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.475108231 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.175785732 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.484396875 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.848034514 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.57215546 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.542580409 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.172772057 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.095012811 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.101451372 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.647434001 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.473675188 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.474129401 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.47414361 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.46420708 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.175596634 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.488372252 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.477278425 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.171150351 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.506759357 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.478233515 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.482430656 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.474011312 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.542734903 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.543626595 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.853766109 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.191485144 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.572685447 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.490801467 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.629277579 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.903625245 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.492493107 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.076903121 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.466753612 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.182213265 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.510682673 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.467336306 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.478214576 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.483162203 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.650450733 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.629874436 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.079127574 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.49915849 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.077628794 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.671137083 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.477790655 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.477256091 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.481015811 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.181271845 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.088942514 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.670827538 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.632661881 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.707070751 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.471160131 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.478175399 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.47016001 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.567387628 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.479316203 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.183053236 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.109591322 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.501763791 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.481341802 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.481468598 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.482001286 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.687581281 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.184448055 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.578387709 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.076054343 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.878922115 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.866991205 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.492030905 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.547836753 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.500515545 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.859296749 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.492278181 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.546924091 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.978832859 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.870455114 seconds)
  done (took 178.322250687 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.753273372 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.814944885 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.580162286 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.625183334 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.158739569 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.083475258 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.892264916 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.658166782 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.612247246 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.765806509 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.834566328 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.578250063 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.676536205 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.564228385 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.292625607 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.56703433 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.583985615 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.648429799 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.587266583 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.592764521 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.200803699 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.801472453 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.669979171 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.533229874 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.584334973 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.36694093 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.083363642 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.053816279 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.669663318 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.90054658 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.056766039 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.678471103 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.589474195 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.266490841 seconds)
  done (took 71.716248084 seconds)
done (took 739.944908259 seconds)
SAVING RESULT...
DONE!
