cset: moving following pidspec: 26629
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.306161882 seconds)
loading group "string"... done (took 0.596899102 seconds)
loading group "linalg"... done (took 7.706056772 seconds)
loading group "parallel"... done (took 0.17426656 seconds)
loading group "find"... done (took 1.192896859 seconds)
loading group "tuple"... done (took 2.129586883 seconds)
loading group "dates"... done (took 1.353303759 seconds)
loading group "micro"... done (took 0.249899271 seconds)
loading group "io"... done (took 0.947628286 seconds)
loading group "scalar"... done (took 42.468173616 seconds)
loading group "sparse"... done (took 14.196328688 seconds)
loading group "broadcast"... done (took 1.07656793 seconds)
loading group "union"... done (took 15.475109919 seconds)
loading group "simd"... done (took 5.012279991 seconds)
loading group "random"... done (took 9.929629881 seconds)
loading group "problem"... done (took 2.070617277 seconds)
loading group "array"... done (took 22.990097199 seconds)
loading group "misc"... done (took 2.098728161 seconds)
loading group "sort"... done (took 3.534042769 seconds)
loading group "collection"... done (took 19.46600083 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.490982192 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139318262 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141980683 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149179268 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184429737 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135980165 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152904384 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.107236599 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.946865197 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170996547 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139719114 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.486652199 seconds)
done (took 4.989485503 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.206369038 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080321296 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095485819 seconds)
  done (took 0.864425308 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.087266958 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14101926 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088867033 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073313773 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072034198 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.088967567 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073490564 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.089340197 seconds)
  done (took 1.317862484 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079915809 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073886327 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.090728819 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074522964 seconds)
  done (took 1.008612366 seconds)
done (took 4.181780033 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.712615106 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.255986637 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200504102 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.499776737 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.171162412 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.203949778 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66670116 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343834474 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.242046786 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100834536 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.12713547 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387702214 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112888131 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682493042 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.083724117 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121709082 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.174923778 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448392459 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088694573 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088620985 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.111791199 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.151842299 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.111180478 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081988575 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.177231646 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.076043058 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.180608711 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.103053958 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074364286 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.263858127 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.181143183 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.728353161 seconds)
  done (took 10.683577075 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11120866 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133514985 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074297324 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150070562 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.131840525 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077355734 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.093007339 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075137156 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.117977133 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174076585 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112423053 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137032163 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088125675 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07730961 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.112190125 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.225035238 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116443093 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.094332451 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094837408 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083890403 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.132111374 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.106472987 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08813845 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.102554384 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.162630943 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200346235 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107957719 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120822733 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074939193 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.105966207 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139057768 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15291182 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074013082 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073893309 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171390566 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11861422 seconds)
  done (took 4.913842195 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.099077458 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185983071 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097981192 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166933492 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089369491 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139860535 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.0737164 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107357668 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256078764 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182618503 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159106324 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138327508 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110237067 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075875724 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095010444 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074198078 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.497930496 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.118737092 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147834395 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.0912441 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095372356 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096152646 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.712561118 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079363839 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072205605 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095211561 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066292105 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153936607 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094772062 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.147685315 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.094945689 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095547474 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12699469 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.184779155 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108251879 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129096374 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092024874 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072438042 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172892179 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078824411 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093548594 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100407692 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129784239 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130688579 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.088343408 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074793223 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201919472 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089542913 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.155970153 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088639164 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.961551652 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.174440749 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.085615474 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070914829 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.328674851 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110185066 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073435921 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.089747451 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.256591417 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122091276 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070988784 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092104908 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072706054 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092748231 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075742108 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385871615 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091369767 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.849903087 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077531559 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085947604 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092688522 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089797833 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.072293814 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080657725 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098046014 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092683299 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.091307695 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076502062 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089966081 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073512955 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073559922 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110103972 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095587336 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074344511 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156552765 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.074197233 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092815011 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121841935 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091867676 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074336043 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123275749 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07704331 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073840301 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.130592215 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073893871 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110324305 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088568336 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075180277 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135812031 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09224997 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.124722981 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073520764 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.118982596 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078120811 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123250326 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102412373 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075419113 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096123021 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072198191 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.089114457 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141771446 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073653855 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.091259043 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.075202287 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.102013412 seconds)
  done (took 21.99675352 seconds)
done (took 39.386164493 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.3272651 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104023373 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104899317 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102747559 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.1018546 seconds)
  done (took 1.506204518 seconds)
done (took 2.24659933 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.158770903 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110408406 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088897464 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103962961 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088859026 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10955889 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124928355 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.104657825 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108877009 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087893382 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104135454 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087665525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07151338 seconds)
  done (took 2.115348197 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089079758 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109083872 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077594681 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088370534 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086774499 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088805432 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103532858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093924414 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103042908 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079887023 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069884255 seconds)
  done (took 1.726957957 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088075472 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090563779 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093559799 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087021779 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086613244 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087790887 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102980115 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093120141 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103565615 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080031302 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072479846 seconds)
  done (took 1.723786414 seconds)
done (took 6.298487326 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.088739224 seconds)
  done (took 0.820892932 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.98397941 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.914827789 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098600465 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.159104637 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.300926865 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.207328212 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.58197659 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127294835 seconds)
  done (took 15.319311357 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.106561585 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091886768 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090036604 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091116733 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077469086 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092656291 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077619796 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073760319 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090937478 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077172501 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089673266 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075556629 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092250692 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077762623 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09362435 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078416488 seconds)
  done (took 2.170039977 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110712015 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110057596 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096926024 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083105847 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09582637 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078450992 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098047579 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080372616 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093740078 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07826724 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099097695 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.081571504 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098418479 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.076752825 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097282651 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083215503 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093589783 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08053467 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098479212 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.096073369 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083575672 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093819899 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.081488539 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098335222 seconds)
  done (took 3.027235558 seconds)
done (took 22.076198757 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145316309 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079361639 seconds)
  done (took 0.964477774 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094766748 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111826534 seconds)
  done (took 0.952819311 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100131701 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091291861 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.126771097 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091478689 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093114874 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076707443 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121808571 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.076366121 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092367891 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.076513069 seconds)
  done (took 1.692900431 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080567815 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07915424 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099616302 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.112285351 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.085634333 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094358448 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080989755 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095609803 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081864695 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090895821 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084249491 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108295122 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.082218297 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.110114411 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096659057 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082577522 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100731537 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.078881108 seconds)
  done (took 2.392310341 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.075850716 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.07717332 seconds)
  done (took 0.902738306 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.077965278 seconds)
    (2/7) benchmarking "second"...
    done (took 0.073115733 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093858049 seconds)
    (4/7) benchmarking "year"...
    done (took 0.093854063 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.074525135 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0738892 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.090434058 seconds)
  done (took 1.328003867 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.468113708 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135685279 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.256746714 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079114738 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.114894259 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.319144966 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07291159 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.097214893 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078220559 seconds)
  done (took 2.409596307 seconds)
done (took 11.386598295 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086251733 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094437112 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.122665613 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.440436135 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110697157 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07378598 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.150488858 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246288379 seconds)
done (took 2.081409563 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.135921666 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.596399276 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.42081409 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220659746 seconds)
  done (took 1.995341687 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.400384244 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.1014478 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083110874 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074471661 seconds)
  done (took 1.419142152 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074175793 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077069702 seconds)
  done (took 0.910626023 seconds)
done (took 5.21809355 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074359337 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.12183614 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073490803 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073140578 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.089518387 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073354637 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.088979475 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071403969 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073692958 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091589638 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.07312784 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089907042 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074622715 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0705982 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087295129 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073636312 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087119693 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071913486 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070615266 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087333084 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073828205 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08967994 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.0715899 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07080471 seconds)
  done (took 2.712485683 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101446114 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091005543 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079427891 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096883928 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077548609 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.096729001 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079355186 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090711337 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.079629962 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092728792 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.186731571 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095034413 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076150881 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094567798 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075912961 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094855514 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.079329165 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091186158 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076528132 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094357235 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079208735 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091242975 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.077654942 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09603961 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.077785382 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095147848 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07631852 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09158218 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080156388 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094544875 seconds)
  done (took 3.471430703 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07944888 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071482697 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089991563 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079231396 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088154921 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0766503 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070711659 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089432315 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072511316 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088285065 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.073434967 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070769628 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089167527 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.072447677 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09061765 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075334605 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.101074478 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072627201 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.071052575 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089843591 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074532553 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089225361 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.075229564 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071144861 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088961167 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071747562 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088843448 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071786233 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072545889 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089693748 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07421444 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092123697 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07203052 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078118675 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093207449 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072031959 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093313617 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071755632 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.073347795 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088303279 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072095478 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.088892934 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.072857024 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.077910735 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092340674 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07343589 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089426806 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.073936737 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07245026 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092754544 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071165975 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089788327 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.074114696 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090343285 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.076060516 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07114219 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090141735 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071215956 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.089841265 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.072208712 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071781122 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088927068 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.075025024 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089152815 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.086872004 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.095462024 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07219376 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.073741886 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092786678 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07419619 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090272619 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085947808 seconds)
  done (took 6.576480478 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077452764 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09917349 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07368521 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073430113 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08802319 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072096029 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095866445 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07244523 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09057828 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089491848 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089770084 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074100359 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072871558 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09354033 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071831883 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091007252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081158192 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087275714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072139331 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092717758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073004668 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094507678 seconds)
  done (took 2.59486093 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.204992026 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096846792 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.133467398 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088068382 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107233772 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087542457 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096587012 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07865604 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096195835 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081415554 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098326859 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095599171 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088433682 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098595335 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081512623 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099746406 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078577156 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099205892 seconds)
  done (took 2.578012527 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087734441 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092065625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096644868 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091807338 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.074867569 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094590541 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080733616 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107257953 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077377152 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092101515 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.084306793 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094999365 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077632031 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091332822 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077399504 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074690694 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094961415 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074846941 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101838423 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09774909 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081058549 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102354841 seconds)
  done (took 2.717247544 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090669426 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093909499 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093943391 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095487282 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074005831 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093320517 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082598746 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091558389 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.082157688 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.076762032 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092672545 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07637799 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.097824361 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074272508 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097702234 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074908411 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094669199 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074704509 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094345524 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.073694411 seconds)
  done (took 2.495894143 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113015628 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107501756 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089531233 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117282991 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090402936 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106927908 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116821479 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089799641 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106000141 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101766481 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106817293 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08887433 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117435254 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113960798 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089210622 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117761317 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100437351 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117507089 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107315168 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089962608 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119418696 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089963218 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118074138 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090414919 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107970487 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092078694 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107734506 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113265666 seconds)
  done (took 3.70232704 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074769777 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074583178 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090292473 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072428873 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071756595 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089520262 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072291658 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.089875356 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075406083 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071846977 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092482117 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074786848 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09205778 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07504761 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077365593 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091891751 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074719718 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089878225 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072049937 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072261623 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092238844 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074773028 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091821705 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071847322 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071945001 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091811659 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072707038 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090315238 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074787893 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071919204 seconds)
  done (took 3.173106051 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083009481 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097375819 seconds)
  done (took 0.958529016 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074262383 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107858824 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072312001 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077651602 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098379755 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07525571 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102103313 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080139126 seconds)
  done (took 1.463858973 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.092364127 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111095755 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.080739463 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104375927 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093008741 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.109296501 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135390446 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09888316 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.081373012 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.092173095 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.091444799 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093721165 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08081225 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07557687 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.099824598 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081649958 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094695411 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086347162 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100675499 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.077989674 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098724915 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087133755 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095415967 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.078462022 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075957562 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.104545437 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084410131 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10252815 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078433879 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10276594 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080577847 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087500204 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080064046 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098445345 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076449926 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110156178 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08855676 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096120748 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.084214706 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098500213 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084614591 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.073477615 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.099257231 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080979324 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10453167 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.080281426 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09922342 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.073874554 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090858132 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.078487388 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074113316 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093459924 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.069590469 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100914849 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.079218874 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107706401 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.077639844 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.095751608 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.079268631 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.096115591 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.081991122 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076988464 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096106422 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.078609359 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101221815 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079812175 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101684953 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074131391 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088072471 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077219123 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083464254 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116514387 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.101824349 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.080822776 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.080489658 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09470021 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079121987 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099743472 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082001062 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.102575142 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.079904046 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100758782 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083613874 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094092218 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.078127148 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10081136 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078469778 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.078470627 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091428788 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090275942 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096584415 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.077092211 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.091418276 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.085558628 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.097076619 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.080339627 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.073021763 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101342026 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06955805 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099080503 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08139146 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094753924 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.085342624 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099196767 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.080921314 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.101597451 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.086585534 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074955681 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.096941644 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072161108 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099897634 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.074796163 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.101676703 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070236474 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096679386 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.078345744 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.080448746 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.101919793 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.077428951 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098900445 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083835054 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.102130525 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078399084 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091311776 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.079230118 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098456143 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085015701 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.101401191 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079527905 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.074081679 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092958833 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.079666704 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098270613 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.080627123 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100198454 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079285144 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07044229 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095059758 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.080359067 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.101608185 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.076443559 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094311036 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080280801 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094926589 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.078685706 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10001895 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.078118706 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.074877349 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099070848 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.077712528 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092946508 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0853094 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097063968 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078193235 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.097547322 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08430503 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.078345555 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100373429 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078039885 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099607589 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080902263 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09376581 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075738501 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098311088 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.085316075 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.077809204 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093123804 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.072925844 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100777539 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.073592475 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097379433 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.075455817 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07828287 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099545424 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077354176 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097087615 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076477573 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11055151 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088977866 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100200609 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.082163676 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10508296 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.079930331 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.096117272 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080899818 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081042592 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099230296 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.084020543 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.100713731 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081528025 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.097566309 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.072905473 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100684271 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084061168 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.093825382 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077226653 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.075011675 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098859783 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.083442214 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099881387 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.081072393 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096064472 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077193958 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102828806 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.079558536 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.07978248 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.094005201 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080585363 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100536558 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.082689364 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100140543 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08690018 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098447141 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074802863 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103124259 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078329975 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.081748462 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093863144 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.074141286 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.093264895 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.081873832 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097126912 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.079170992 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.069932081 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102146235 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08465058 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095505574 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.076030759 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.09881446 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085959308 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09704024 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080328406 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080528047 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.100494624 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090058692 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094443814 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079611498 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.104532601 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.080643588 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089646418 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.081941506 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097448681 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076887958 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.078963247 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09702327 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08001785 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10149397 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080739066 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089273368 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.078737632 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097546193 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.075440197 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.074555638 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.102427927 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.079881905 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.096789824 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084434246 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101095767 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.081629412 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098848181 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.080728411 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100601703 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.0819584 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079113871 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100422677 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.078183451 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.094647921 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.078529464 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.094022235 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077216411 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.097186455 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.080958042 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.078802237 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100275065 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.079505284 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095839384 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.078886758 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100693708 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078101664 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.09592531 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.075946645 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080199346 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095982077 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.077106577 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097556389 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.075240588 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102777854 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080774831 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084383174 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.095084577 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.07308803 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100339664 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.078664248 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100801627 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.081870616 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100611382 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.078070187 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.079937031 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098154587 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086092342 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.093485575 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.086054053 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101356232 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077210096 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098664975 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.076941883 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.096501353 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07567115 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.077981227 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108915478 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.077307406 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099390365 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.081660902 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.097766945 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.076196495 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077616259 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101255663 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.076732858 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100719538 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07073511 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.094275285 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.075967682 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.080653615 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102676802 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082231798 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.095893554 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.07892894 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101416684 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.079128073 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092066842 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.08509353 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102213863 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.081871748 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103916889 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076228484 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.077661382 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105117055 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.070829742 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098392136 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077561402 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09379354 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085786952 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.081446168 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105200077 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075928963 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.094805737 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.073814809 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101189728 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.079240519 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071270078 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096719987 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079803235 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.094817702 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080162958 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101090128 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.079459778 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101104907 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083606882 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.079807339 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.097731005 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.081434082 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093046586 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.075370149 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.094471513 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.080040664 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.081347751 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.093300757 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07467003 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100119716 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.079050438 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.096628927 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.080874107 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.078183841 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102081279 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080360575 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.098866986 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085291683 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.090472749 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07937328 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099903678 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081315184 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.07521375 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.099640681 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079844557 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101795345 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083911249 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100109685 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077537504 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100224756 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077730811 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099779546 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.080881675 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.081137035 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.095015923 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.082228072 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104412534 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078492121 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.098858162 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.076435232 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.095956458 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081113705 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.082668964 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.098376203 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084409022 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.096547548 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.078002139 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.102958697 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.080584082 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099829604 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082205428 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.078321141 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101912845 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.075935421 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.104205426 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.077029417 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10167698 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.078314019 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093871481 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080987497 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.080688674 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09905303 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08139674 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102387076 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.076063033 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.094986136 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.078341094 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.097913809 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085510504 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103981939 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.079318631 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079825348 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094612974 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074097881 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101917819 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07448087 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.097249187 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.080232232 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082975499 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.099459795 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.077577067 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09943206 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.084820143 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10324248 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.082414405 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.093929527 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.082542378 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101699192 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.080604943 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078335882 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.096615334 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082971218 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.102414831 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.079590898 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.095727962 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085778667 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.100436257 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083144157 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098184257 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.078472931 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.077768705 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095994915 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083025399 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.099503586 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083763644 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.099319532 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081576951 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106690255 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.075616011 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.077848201 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105750625 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081557264 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.103614524 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076318729 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.097808626 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08336161 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102422758 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076577252 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.076752889 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.095314436 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.079936156 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096307573 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07672556 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106847371 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.085209777 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.099567241 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080443917 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080481045 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095700963 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07602731 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096677988 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083780946 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.098985081 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.086714453 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.09544797 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077405709 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07578207 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101407796 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080597466 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.1011237 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074958641 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095378165 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.076768133 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.079768641 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.104353946 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080417556 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102482682 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081203796 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.099253411 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.078399678 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105897435 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.074674728 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.081560196 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107714671 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.082907843 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098227575 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.08267467 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106283317 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083197611 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095525944 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083453119 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.098928975 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078373326 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.082755734 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103082364 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111556622 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081542617 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.076484713 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10067947 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.080136507 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.096390225 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.085611334 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102981791 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083033983 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.1026913 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080279476 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084564445 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099539464 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083338231 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09990686 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.080960377 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099882904 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078713619 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098969911 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.076066877 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.083484309 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102255082 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080827027 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103493814 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.07721132 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1076506 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.086658414 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.099528682 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074647521 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.076614963 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09689121 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.076962842 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10311982 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077071252 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099389056 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081206722 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080678783 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097926328 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083341975 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.099912024 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083901985 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10116008 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072505391 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.079105812 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.100847245 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07916226 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094833586 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082859001 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105244827 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.084206049 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106167609 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.075633015 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.079353021 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.099374967 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078386651 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096962179 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.084300197 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099973587 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.080661979 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.07713879 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101534809 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.08404465 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101321548 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084032015 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103547941 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.080613293 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.103713694 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084839137 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094996406 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075643718 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.083958857 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099439927 seconds)
  done (took 53.576725364 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123263656 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104037331 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072664341 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093472089 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117598963 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07749515 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072661886 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097385775 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07815341 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10636101 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073732815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093358986 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094194922 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119655775 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117413342 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106455716 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073485593 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097570452 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073854155 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077488394 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112676897 seconds)
  done (took 2.809406356 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099804272 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111400735 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089037972 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114531783 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104244617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09079953 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109469051 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110979552 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093855526 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104804606 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113459375 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090953051 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104976636 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085152391 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105211629 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107942634 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094309379 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103669052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091197632 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109167109 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107800941 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089684245 seconds)
  done (took 3.060942109 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086287089 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082322183 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102634216 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.072741351 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101093608 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.072725426 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106025826 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.075731873 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085564013 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.096471103 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.076577206 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.095868312 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08209649 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.072655625 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.097150821 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.075173993 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.148686607 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10584401 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081413378 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103098984 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076280836 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.100882216 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.076523279 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077147873 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.096725181 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09107508 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103024018 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082112558 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10166038 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.077482381 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081231808 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.095078042 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.078983562 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.098671498 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.076870376 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.077047483 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102135551 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082630285 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.096053481 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.078958502 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078325416 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097068269 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082370464 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.09896418 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079522391 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.095651307 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.079577714 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081395534 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09316107 seconds)
  done (took 5.189905637 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.109920826 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.148923022 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101297822 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140294687 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.094482431 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110715091 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.081760924 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.119101327 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096835409 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079384352 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.117911028 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114938137 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08168361 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106818334 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.084692066 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101377043 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082777465 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097248793 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086426663 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098120138 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.086841689 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105321615 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114445362 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.092861025 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106178869 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08026829 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098228487 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.086699823 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112628331 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10793942 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087040845 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108665985 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115964578 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083677283 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097950181 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.084832918 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116346266 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.082489585 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105188936 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.07587497 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104598864 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086874488 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104824776 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.117063991 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081878451 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103343215 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082024832 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.095171996 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.093135968 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10537473 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.090894156 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11593735 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106014816 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.082304734 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106884531 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.095123411 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102222358 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0792406 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104543249 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112206701 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.075997476 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085537653 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114193749 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104171475 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.090415834 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.11432733 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103175338 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086236295 seconds)
  done (took 7.717813211 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109571826 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107307797 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096651755 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1182147 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106381323 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.086729886 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106491617 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087039433 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106704721 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092804238 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106874621 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.153072913 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083962471 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111817734 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086408361 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106996799 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.086559991 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106411083 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085521568 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107332831 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10630464 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09755811 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106590665 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097287347 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120154387 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103895766 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087178971 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106556941 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09651503 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107253191 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118047268 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.087005093 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107092353 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116711356 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.09972534 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107518686 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081806541 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107234103 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.086472563 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106914664 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084345898 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117580712 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106794158 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08470402 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106919044 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086902865 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117512801 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.119040408 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091728742 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113691647 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.086515231 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117826357 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106721262 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087106264 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117900196 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.124785068 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096214635 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116595221 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107117405 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097096387 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117562849 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.124390268 seconds)
  done (took 7.269702657 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109047457 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112676345 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11973236 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074025664 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075521625 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107847498 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076340624 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.09753675 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112059491 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092366219 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114445887 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086815004 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111114058 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11499106 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086642211 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110675814 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106569382 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086800365 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111821545 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086701894 seconds)
  done (took 2.833702155 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087414132 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118850968 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079930944 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106483018 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082904864 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107069419 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081021855 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102936173 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080535974 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102663361 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091731176 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11072602 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080259317 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105997654 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090810256 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106492462 seconds)
  done (took 2.381755636 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100324581 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120047088 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.102689999 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106526057 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076564391 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103810414 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081792125 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.096117532 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075316425 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.115450423 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085220008 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10611156 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082961857 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097872604 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079680271 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105168343 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075421145 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085523134 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101897105 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102777988 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104779633 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081885272 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103765136 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081684593 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102928955 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084478087 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106388651 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076516766 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097729464 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082680144 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102582716 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087559048 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096671909 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085072325 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097627243 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.076695225 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102124047 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08327205 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104990864 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082178527 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.076693911 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102536885 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081459718 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101084832 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075335583 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10266963 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075183003 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105686653 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080805884 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102655394 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082483399 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107453293 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086346144 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111006193 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089549523 seconds)
  done (took 5.971755366 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094345424 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103660715 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074478531 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.076918361 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103897139 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.080839051 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104553037 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.080666747 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101747608 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07700984 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102091203 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082341762 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080672787 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104646273 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081204986 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103895905 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074310802 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102079172 seconds)
  done (took 2.481285731 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084733443 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078460173 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108268904 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079095182 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099914138 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081476958 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096241975 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077592608 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077408186 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099899437 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078940074 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102033432 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078103165 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.102056573 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080262916 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099540064 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081938032 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077142822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099568771 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074869646 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102397132 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078022583 seconds)
  done (took 2.788071206 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11210222 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.115631749 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.086122431 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.199386669 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.118015998 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.103162825 seconds)
  done (took 1.587527528 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104547854 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135503438 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080696717 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103541901 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091387984 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105256507 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084791992 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105333115 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094849558 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118121119 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104645103 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095412467 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116096366 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115121801 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091715949 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112608297 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104923209 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084353635 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080281449 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124984813 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104932809 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095038881 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104840231 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1043795 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08484471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115380192 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094798034 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118288535 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104584876 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095635774 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112809474 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08337687 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116462598 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118303989 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081669984 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117258245 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104770761 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104739127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11224927 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115297633 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082915234 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112871854 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095289328 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111713139 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115222465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084553277 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111277373 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084342606 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105408078 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13117215 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09166931 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115765489 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111697324 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095887764 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115930818 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131804375 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117931024 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094942922 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111887898 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118664449 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094027436 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112612247 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115134436 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096991557 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112122891 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115382025 seconds)
  done (took 7.790014502 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118170293 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101788804 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084560468 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117866971 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115747128 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085283446 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105609791 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084647493 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10554315 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081448893 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148960656 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105336496 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094267434 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11617877 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104994857 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084060063 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105365853 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094056153 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102062965 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131951744 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084566086 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116112351 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115738744 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094923449 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118601284 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113022263 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084692402 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105843673 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084347291 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105379891 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11186995 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08443145 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117118984 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081607452 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116042379 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084314899 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106785621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111439501 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084559002 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11334583 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095212856 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125246033 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105451635 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085106513 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118728043 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105322622 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08433746 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10194996 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084750359 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102490422 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097541884 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118405581 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117530064 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116419466 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084741244 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105441713 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084888327 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105686619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084918168 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11367654 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095146233 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106071082 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131626483 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084131325 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106845278 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115642085 seconds)
  done (took 7.66054941 seconds)
done (took 146.322734812 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.225832571 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.285105611 seconds)
  done (took 1.366524572 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.094887856 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.133394822 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.093150005 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163580735 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.079699279 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113399965 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133879664 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094477054 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.101435876 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080310661 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101529028 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082288855 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.145497761 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10126093 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.079898849 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.102702759 seconds)
  done (took 2.566393179 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.112984429 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.241934169 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.118812436 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.078352985 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106235868 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08000484 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.078180966 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110509025 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081538254 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.101048532 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079824971 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101493106 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.079537717 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080224426 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102285351 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079701309 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.100332721 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079867341 seconds)
  done (took 2.67758008 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106688145 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139350329 seconds)
  done (took 1.115177414 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243096639 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.155561684 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.223383841 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360325481 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.181672234 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.329978302 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.174693616 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173292759 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166202833 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170676508 seconds)
  done (took 3.0402431 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.113677539 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170596683 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.289338403 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.148560643 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118530739 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09460343 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150730877 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120936666 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101020213 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123014624 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12346678 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086232185 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.131325637 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110311152 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.089181358 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.107845977 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.113022183 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.108166518 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.089131327 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10911643 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.112006204 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101057283 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.089340497 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.109258055 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.099138529 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121550946 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103350294 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.079129808 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.108302512 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.087650405 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107381734 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093364786 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.341294546 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.143878102 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.091172587 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.164781698 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.087079004 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10642368 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088063687 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.106024752 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08982778 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.110557011 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.093997723 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107724081 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.079548443 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108239932 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.079216235 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.078889434 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108360392 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.087444809 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109427644 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08541506 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.142926271 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109504303 seconds)
  done (took 7.090275365 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.791449694 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146836482 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085464251 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.866033167 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132734277 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118837745 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.761385052 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131362625 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224400254 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.769040118 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12469122 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11605494 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198969149 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.220573405 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.910907022 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3021734 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.670750334 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093899337 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136206362 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.142230852 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088311821 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129995862 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124110977 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442732375 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.085911074 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105777523 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.08892609 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113840427 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151032823 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084527452 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107974411 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168223519 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.234348184 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172090263 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107459191 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.082870445 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104608804 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.157792628 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258396408 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.185572762 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169003637 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079897818 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105357895 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092244161 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123247204 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.079983078 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175818623 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.161864339 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.161642586 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085952156 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114279915 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111937907 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092503259 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.151929478 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103229238 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283885475 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301439234 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104307882 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09183415 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12105351 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231916178 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106029944 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.192040541 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131893832 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.202538482 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08448337 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794348746 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.157568747 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084074648 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111217891 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.089993252 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109260586 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.092534676 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160200512 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.383225704 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11614152 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087020132 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082756492 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217524458 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084243173 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105088836 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.15365207 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0850347 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111931268 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094841373 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115578621 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.158367805 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.217417411 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.115841568 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090165511 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10959818 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094908345 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.107032381 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.202255382 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.209183083 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.148908288 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.200965137 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114300927 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.15429908 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.153782188 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091415817 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.180769204 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090386126 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11835129 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093412357 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.20709851 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.132884718 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08346805 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108305469 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088478236 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135826068 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086180259 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110853664 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.156742704 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.469729854 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.175930249 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.080197689 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08707013 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112532172 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.152808742 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110758968 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.226761626 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11369186 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.156560252 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088279167 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.102989075 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.089661407 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.152865629 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117017618 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112793208 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094483973 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112634504 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.218122003 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186725793 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115795289 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209129646 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171809022 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111670779 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.162346344 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.089785925 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.180550663 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091719974 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113649599 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084983108 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780493137 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.094529815 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11215005 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.086379856 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183904848 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10509389 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084573857 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083802607 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102852617 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.742776879 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107713848 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.086533649 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105719457 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090579291 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112147772 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088417974 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108701759 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1522269 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219657448 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092944948 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111232544 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084218241 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.151864415 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.106931588 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084879671 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.106427509 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085318564 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113012414 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087331091 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085067642 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183478379 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.149420368 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.186236501 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.586221938 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083745074 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107425457 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195534743 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105816063 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.272639795 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091051173 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.214322459 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157248812 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081488511 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.29897787 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.157476954 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18547437 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086006182 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.181561303 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.081352957 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088414618 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.17368856 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083986088 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110681017 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.149131215 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096403113 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116231482 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.891007232 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105771449 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216972272 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.079801834 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.179649925 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085371646 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113324334 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260434783 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106290557 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099063815 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.151819658 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108880908 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084189247 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.7142554 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084976067 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115764736 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089941592 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212942277 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.156149757 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11270128 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089901547 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114373318 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154659719 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.200495828 seconds)
  done (took 41.078362278 seconds)
done (took 59.797066506 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256496112 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20923454 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265852762 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16362274 seconds)
  done (took 1.883825098 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171175709 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.120875356 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139584128 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.078619728 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.146323145 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101394524 seconds)
  done (took 1.650051664 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.362378873 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267964001 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212270459 seconds)
  done (took 1.737897103 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.240720301 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236653523 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462191103 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.310565258 seconds)
  done (took 2.245970732 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199065557 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09627733 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11799873 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110463628 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164861148 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.199135059 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136759812 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.14497852 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102957223 seconds)
  done (took 2.213848967 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.158053247 seconds)
done (took 10.789061976 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.265231212 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.206164841 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.279005999 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.175288761 seconds)
    (5/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.232421431 seconds)
    (6/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.24667224 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.159201517 seconds)
    (8/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.092607051 seconds)
    (9/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.21109536 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.118993798 seconds)
    (11/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.093330411 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112430902 seconds)
    (13/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.261341223 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.20912066 seconds)
    (15/309) benchmarking ("sort", Float64, false)...
    done (took 0.148192576 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177937773 seconds)
    (17/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.191321671 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079886153 seconds)
    (19/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.184163465 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.141232182 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.122366484 seconds)
    (22/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.153564092 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.152538191 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.095516445 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111206657 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.084578613 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.293639348 seconds)
    (28/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.192707636 seconds)
    (29/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.141244999 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.114528338 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100050939 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.131711043 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.094573583 seconds)
    (34/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111393262 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.246005044 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.170906494 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114639019 seconds)
    (38/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174131192 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.131663314 seconds)
    (40/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.088316249 seconds)
    (41/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.09136582 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.174242729 seconds)
    (43/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094323625 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.189224707 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085587729 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.176809218 seconds)
    (47/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.108243342 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.129631585 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128562951 seconds)
    (50/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.078423908 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.245062202 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.226363079 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216352715 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092039214 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103825063 seconds)
    (56/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.136936833 seconds)
    (57/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.102648481 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087430943 seconds)
    (59/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186450748 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126456065 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110230648 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.130557152 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111034477 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175152524 seconds)
    (65/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067343209 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.129794192 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.078740955 seconds)
    (68/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.237607772 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091695856 seconds)
    (70/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087922951 seconds)
    (71/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.15922231 seconds)
    (72/309) benchmarking ("sort", BigInt, false)...
    done (took 0.218450269 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.17234541 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092072332 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068256168 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114810164 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.082851238 seconds)
    (78/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.157560175 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119054 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.116791722 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080467498 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109397759 seconds)
    (83/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131857938 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185360397 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192535641 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.081370173 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090674816 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087024652 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080357694 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103591059 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.198730653 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091911699 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.234888767 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07990197 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.115226241 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.23600318 seconds)
    (97/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094344169 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.191716739 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080099823 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.134222055 seconds)
    (101/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.149701904 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.224714944 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082898464 seconds)
    (104/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06795834 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.157192714 seconds)
    (106/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.141948883 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.117116426 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.18365325 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.138336994 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.128199679 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.088308129 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106194327 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.188577757 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106571402 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 0.191213194 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.126262201 seconds)
    (117/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137032952 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195625477 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.103620615 seconds)
    (120/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.081706861 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.080740118 seconds)
    (122/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.102788418 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.084123213 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068149659 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.105970465 seconds)
    (126/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084663854 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.129987176 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.180508744 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.091245466 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.13259647 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068634491 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111638632 seconds)
    (133/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.12860438 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.131221041 seconds)
    (135/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176112178 seconds)
    (136/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.126745048 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134658034 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.086147873 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.124588909 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087550989 seconds)
    (141/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.068494716 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.221741745 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109482518 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081742411 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.115264255 seconds)
    (146/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06776941 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.186918613 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089328139 seconds)
    (149/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.122515264 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.081764101 seconds)
    (151/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.101656779 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096690134 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068075797 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.114097708 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.080050927 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111368536 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.080864241 seconds)
    (158/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.082225093 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.092819826 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.183134095 seconds)
    (161/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068495168 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.19053341 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131530454 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114780585 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.091064591 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.095833692 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085342073 seconds)
    (168/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068559187 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.093710342 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.093774616 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.10273743 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 0.151113298 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155990058 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.196997407 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175991472 seconds)
    (176/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082507427 seconds)
    (177/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164201375 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093658945 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070166266 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.111971837 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.068527788 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.134210873 seconds)
    (183/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089311322 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.107781958 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081096352 seconds)
    (186/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.147885632 seconds)
    (187/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.087247088 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.087296311 seconds)
    (189/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175362283 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.116154421 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.0891646 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.09670532 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.103509964 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077580985 seconds)
    (195/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.119396632 seconds)
    (196/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.158721224 seconds)
    (197/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.092024818 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083054217 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.183159563 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.133830546 seconds)
    (201/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.078981127 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.069158966 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.091650797 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.168729479 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115001531 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069850836 seconds)
    (207/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.09297814 seconds)
    (208/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138310938 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.092972204 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.090272165 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.112117766 seconds)
    (212/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069457971 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.15744127 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067608359 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091627136 seconds)
    (216/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110993996 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068818664 seconds)
    (218/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068198877 seconds)
    (219/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091566543 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069352281 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10371837 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079596863 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.09146935 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.188880056 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.108998042 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.163753851 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.092698286 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079813325 seconds)
    (229/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092814035 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.082509571 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.091876154 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.093297688 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.089839614 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.129394246 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.18999823 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.081000538 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.069220943 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109443764 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.082819976 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.107750577 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081195041 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081253947 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.105520547 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108145591 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.096593551 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122375184 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.09390617 seconds)
    (248/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081257042 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.088164015 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.118633072 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.182069824 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070591493 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.080528626 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.093719812 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069639842 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.104930099 seconds)
    (257/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.106952886 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.106918239 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.103997488 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.086873648 seconds)
    (261/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.107877201 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082587936 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.093750107 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081745699 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.192643012 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.089658967 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.092848396 seconds)
    (268/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068496047 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.228735912 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.070243173 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112083231 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.105180837 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108309196 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.105681454 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.107013521 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068356963 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079529595 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.091928869 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.089054515 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.079880775 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09337439 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080051065 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104482764 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.089192234 seconds)
    (285/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093765343 seconds)
    (286/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.093998799 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082979953 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.094749194 seconds)
    (289/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080037321 seconds)
    (290/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070451567 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.104371889 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.23349491 seconds)
    (293/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.083816016 seconds)
    (294/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106420143 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.174322115 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.13236226 seconds)
    (297/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.08281829 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12338484 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081859485 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.139412002 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.159145728 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.104985425 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.080718179 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.099141762 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069094143 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082680032 seconds)
    (307/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.093574687 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082236205 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.147106079 seconds)
  done (took 38.587031957 seconds)
done (took 39.49162199 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094615614 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133076236 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091088995 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.109075874 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.118994 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094636927 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.113838297 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093239926 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.117548378 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095819092 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.116784527 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072006803 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11629969 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.092190744 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.115553626 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109143856 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118297569 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.088516092 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.084493016 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.104205238 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.084322073 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.105209165 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.082740697 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071596471 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.116340913 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089342158 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.111737774 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093376405 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105287513 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.081351027 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080556002 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11343973 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081295036 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.11904346 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.087869393 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.109030014 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093492599 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091814843 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.107369125 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081430264 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.114076844 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081042391 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.088608605 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.11321583 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.082706168 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.10428381 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.084659892 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119591449 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109525062 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107223158 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.089620847 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.090887467 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.117550827 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.08802936 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104447109 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.084666982 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.10466185 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108802279 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.109169146 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08384897 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.088950663 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.1136111 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080268258 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.108882487 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.084992443 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115500309 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093264679 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080014929 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115176847 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086340348 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.104570473 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085370169 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080963428 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.105266953 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09133991 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.1157259 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080989003 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.082779363 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.112205956 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.086446843 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105410601 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0831299 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.106875646 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.083565677 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083211961 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096130456 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.080300762 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087315771 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.104283168 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.084884743 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.112121207 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08811881 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.10706537 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093172474 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.08087143 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.104751484 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081052759 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.105819982 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083986435 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080483102 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.104889291 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083927423 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114801178 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083133333 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.082351769 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118373442 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081965351 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.111679104 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08004793 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.079856366 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.121930265 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091446317 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.106129078 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083336077 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.104816644 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.08366287 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.080819164 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.106128694 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081381621 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.105015137 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.083015824 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08118181 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107654402 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.082715794 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.119604077 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.081425505 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.080499635 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107720609 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081697733 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.11093181 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.082112914 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.081474085 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.107348048 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079859725 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107836619 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.082071822 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083095158 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107940471 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085581257 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.107800204 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.085802785 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.085762141 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.106777856 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081471021 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.104280794 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076249097 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084142142 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107625751 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.084376216 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.108538844 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.083560693 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.081467054 seconds)
done (took 15.551285542 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.081784301 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.197913984 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.141222354 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.114489582 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.126622652 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.082035535 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116644037 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.112757798 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.107739367 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137499478 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.103744144 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.125795743 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120261102 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.105090592 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.081918128 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.085980676 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.108657413 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097756406 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145196915 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127521511 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114977663 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.105318524 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.111703508 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.130498055 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091168666 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133545738 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.082605273 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110952632 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085302243 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.121859889 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103069359 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109609765 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.081998477 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128053025 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099040449 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114188173 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.081629648 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088851504 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105965198 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.081788759 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.128585886 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103557323 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.112100549 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087736241 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.109827443 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084341332 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083028754 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115620219 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092138096 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110501157 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.096346393 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136001847 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.108325773 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091963573 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.105197225 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.092373892 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.11556853 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.084302387 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.082560117 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109577325 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.081278132 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110475443 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.097666875 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130566214 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086029857 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.116098798 seconds)
  done (took 8.028529133 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.098719527 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13542153 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.099809753 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.124842306 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.08190212 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.081984047 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108635528 seconds)
  done (took 1.695100056 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082959757 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108197178 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132932212 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10811914 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130273909 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.126192772 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093518519 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082854779 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.127611059 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084051219 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133383701 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122517763 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109641598 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.09050833 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135415603 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08241199 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.134880296 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.082806504 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.110636659 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109872871 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111100802 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104326839 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.109528232 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083318769 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.126885303 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.083631988 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.158099951 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087360803 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083988036 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11219633 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081968417 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149498261 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.099552146 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119435344 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083115831 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125649714 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.100624022 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10541136 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.098870336 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.112737978 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.100457436 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.108248583 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.084318099 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081169095 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.112055005 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.096256904 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.111367221 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.083758206 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085471485 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132041267 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.083856131 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126036586 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.082929333 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.112218547 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.084811635 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113968395 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.092989002 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.083978009 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132116079 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084692167 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128234603 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103006999 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.125025515 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.101917814 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110672381 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.100680117 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128023091 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.086098702 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085151343 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.111676051 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.102480886 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.105991293 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.085637766 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.122404509 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.085006408 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.135108021 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.109352609 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084125678 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.119432449 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.083598573 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.108665148 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084060055 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135360566 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086975385 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083198608 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115131168 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086415003 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.106121265 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08194942 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.111925512 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.081673191 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085054453 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.111437328 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.083992324 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110803268 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103364594 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084489823 seconds)
  done (took 11.064434228 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.084591368 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084016857 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111934749 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.084864604 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109667664 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08546174 seconds)
  done (took 1.542062465 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113332695 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.109427402 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.097856545 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.112978271 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1241058 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.133386582 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107997387 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118263844 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101205667 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.120268056 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108451342 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.134908797 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112584958 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.114425551 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107687463 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11416914 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108938485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114361829 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095220388 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114641413 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100696722 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.114323504 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089809456 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.127917241 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.092690864 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.113742793 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.088994305 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.121434851 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095325391 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.117609962 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089692164 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118263074 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.089293179 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.117510248 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108374381 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.11475802 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088948668 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120486966 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090195328 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118269226 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109691011 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113682563 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.094539815 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120168738 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.092919667 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.114825984 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094619304 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113608204 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108666199 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119060965 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.094711599 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.087863834 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118922358 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09518656 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114497476 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092048651 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12028293 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.10832447 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.114595536 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.091195952 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.111308885 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093150527 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117914466 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093378473 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118457209 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.094908692 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114562291 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08931784 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11489754 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089016883 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119061694 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086235094 seconds)
  done (took 8.726813629 seconds)
done (took 32.02467647 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68565941 seconds)
  done (took 1.660252819 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.693460394 seconds)
  done (took 1.669820471 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.79785665 seconds)
  done (took 17.77919212 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.457924169 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.551752087 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.82365629 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15550209 seconds)
  done (took 2.964431915 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.933444403 seconds)
  done (took 1.929626084 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237245077 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224678887 seconds)
  done (took 1.442932009 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772865775 seconds)
  done (took 1.761276307 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.428961142 seconds)
  done (took 2.414182362 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320792236 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.151394272 seconds)
  done (took 1.473818671 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.560139061 seconds)
  done (took 1.559696958 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.701419293 seconds)
  done (took 7.699068911 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236619476 seconds)
  done (took 1.242327574 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.283408896 seconds)
  done (took 1.27933923 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.569999464 seconds)
  done (took 4.56649723 seconds)
done (took 50.429425146 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093090709 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.09607203 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121286441 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094113439 seconds)
  done (took 1.395793546 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.097791852 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.088865009 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124011934 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.089003563 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124430047 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.089000145 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118287193 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099448299 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115432239 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.090682325 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115762342 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09010191 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.118496899 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092633247 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113253905 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.092896365 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122761221 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.090216686 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.093739093 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116806416 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.087294268 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118544551 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.093207198 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.11442799 seconds)
  done (took 3.501853127 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.094377416 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088736624 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.116273717 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.087576654 seconds)
  done (took 1.390767662 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.094395364 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100258213 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1261885 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09365739 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127651601 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.09850495 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.112034981 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.085817755 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.113715513 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.093569601 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.084450597 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.132874482 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.125896224 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.093454521 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.095666118 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.108875044 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085286534 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.126469343 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.093984874 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.120915996 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.086900367 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.119148385 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.084560721 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.100607432 seconds)
  done (took 3.512782387 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.164720083 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.122312443 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.107065033 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.115818404 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.128741034 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.135919938 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.081564541 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.136195016 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.081775499 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124113817 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.086500568 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.153243652 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.094832005 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108642473 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.08222062 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.081774723 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120636699 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.094566646 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.111401651 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096000174 seconds)
  done (took 3.239018699 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.091476974 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.08716794 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107577094 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.085551104 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121837757 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09017306 seconds)
  done (took 1.597229338 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090380999 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083375644 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114051886 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085534284 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114582124 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.082894436 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082700813 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110293325 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083858369 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.108838725 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086122634 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082459136 seconds)
  done (took 2.138622087 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.497725495 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.084998004 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.110758378 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.106841759 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09472254 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082256783 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.125725888 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.08488603 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.137748797 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082442289 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.109918225 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086406003 seconds)
  done (took 2.618324894 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203510232 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093549196 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256492799 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340040222 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152449671 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160787526 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272704171 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158276899 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179494386 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106488636 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187105079 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153507089 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151166605 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172929858 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109309685 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.151824798 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169756788 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195199968 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144222966 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198262064 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157449308 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162768662 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174573541 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148977313 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106368631 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153451657 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115290814 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098527353 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167223571 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163142423 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167749253 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14441783 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134301637 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193157827 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200586577 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171020228 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271952735 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128942529 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149714388 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.158712441 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242685559 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108864497 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213503251 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123033695 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12477099 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175615764 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149919463 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.172245306 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10036433 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135979435 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174965966 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170064866 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172206362 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132096012 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29061185 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141366352 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113263591 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175119915 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178780409 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180906812 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160887583 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11357077 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177137593 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174110861 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171999012 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112065621 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15942596 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121249001 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167504038 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18790044 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17095166 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157996115 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.177128796 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130398872 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157675126 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163963439 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121340781 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172339825 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155773412 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.08925601 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144605238 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133578194 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096512058 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189925838 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120136873 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197112073 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103471201 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.168108169 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195883722 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152999087 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156747714 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15938695 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159822458 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115047231 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113255426 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113522463 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.146718276 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15115554 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100217654 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150923311 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138522513 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.121393299 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118700916 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119091905 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12677778 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.123348198 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158668191 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159450767 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094136953 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160827961 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145481381 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.117229546 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162873526 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178806542 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130016339 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100237386 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185470863 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152738429 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129919684 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169370513 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182248111 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149861609 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105374499 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161151877 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186265847 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137606403 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181811979 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135855541 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10332452 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135661592 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15254459 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123994561 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153261164 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126061006 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120970441 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211180042 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.092968779 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132118925 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168563366 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096044765 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124881943 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109995778 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132977707 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104262888 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.137701263 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131390249 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149809535 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126899106 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149915456 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149585721 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137099076 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182484194 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101207594 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.147712888 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142326004 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088759581 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169468546 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178816763 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125110505 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190086605 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159252534 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188267332 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157221312 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099546939 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17068143 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125461002 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.087509667 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159896425 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155446421 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157793194 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174672237 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185228645 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.158403389 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147587325 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142989491 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131143651 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.15991054 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149842539 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.132553688 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12763815 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152726937 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118090329 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092324796 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123087569 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109511887 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127129096 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128196968 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17512323 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15812588 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180178323 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155062996 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10930479 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176629408 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121695645 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157667429 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.164962766 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105963815 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177105913 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173792762 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162712586 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139506682 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166773067 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.087942527 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119419809 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.100954843 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159978139 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128977211 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103051207 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13916943 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176509733 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167437278 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144447523 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194104634 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160701619 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184522961 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.088386877 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16314174 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161770571 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153142328 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.145186995 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127850804 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.11731686 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171383397 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13702396 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183491524 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15591531 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163598444 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187300396 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146384854 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098606322 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145396265 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160090216 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134989128 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132413731 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141135873 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131754865 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117075401 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.122895303 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093780304 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165115682 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139308719 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169354064 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143215098 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164249979 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09416231 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139002185 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157379761 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141632456 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083578927 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159852827 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175912557 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137907941 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151682657 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137881743 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126253637 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.300440868 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180814373 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176665878 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133113686 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109255731 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157071521 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158358663 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155806692 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173230488 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114413236 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172484016 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154921907 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.130115126 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103642558 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143367214 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145293247 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107701155 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128141064 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14645839 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104040718 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169208687 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138619171 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153676733 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157286938 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117265959 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.139387656 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108996432 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191402858 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152065263 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1714052 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145064361 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.15851643 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191197095 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092379796 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125831194 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.09444837 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172910029 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128235071 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152716444 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.177562547 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187983686 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154366507 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158742732 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104822434 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.115043091 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15358647 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11558629 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215957813 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110272478 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131609157 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180047038 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138905558 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098757019 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157800164 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274316473 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139939821 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167186272 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081624906 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27207682 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093838935 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126467564 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154687205 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164704995 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103159944 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.169189819 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157513418 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110950369 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155514245 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134073194 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182170987 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197085793 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162591973 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166735612 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.099604659 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152946987 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157002955 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169080349 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139096583 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104375948 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158914151 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17580943 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179717484 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.127909072 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12760702 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156219901 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155604594 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162071045 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129633431 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191570753 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098025881 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158625739 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13587846 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090754035 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151636326 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.178936877 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128890642 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166585296 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152776739 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100132524 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123025484 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145746546 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124785536 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137755001 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.09342998 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16375925 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.120223317 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157361716 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17413153 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098121125 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149582376 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1118607 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131177181 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13892353 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1118613 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133282103 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135431943 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16950937 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.125784603 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169028934 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168785826 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158583923 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153503264 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11128665 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664354357 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124873668 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146801131 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142704855 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178224216 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144871726 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161234146 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155319255 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115599834 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160267445 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144364875 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223353117 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157307476 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123047472 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127603152 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139583926 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108989596 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127224625 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145470743 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126722585 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136808648 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132207426 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123383968 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140424626 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.128134374 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106397597 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177714777 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142937561 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170178222 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175071349 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105061979 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16042614 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166054988 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126514784 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.154357718 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165018017 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109250477 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145573211 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.096955947 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130570719 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175515471 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.091040689 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156265802 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156266314 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155500049 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156594437 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.100409075 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154488565 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138197438 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154636987 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097666444 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147602914 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153306948 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098647312 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123685631 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122207451 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149383081 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.145668114 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093976373 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.159869968 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174321192 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.090349265 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128039977 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273746671 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150300655 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183547542 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109398991 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131298848 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109585887 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143381965 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147582581 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153973618 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097824627 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128001993 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097817133 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162769553 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110648272 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152369949 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178013711 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150987652 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192453476 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131686718 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.243212448 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13506311 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149493935 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.09085761 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.1238274 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108913321 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130269647 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137049235 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182128348 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17358851 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.112925032 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.128408877 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09343728 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.120462996 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1004567 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156693831 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148645217 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153515728 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109717793 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109735189 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110811098 seconds)
  done (took 72.045241574 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165381346 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129234963 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.143612659 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.196932087 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1621412 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247860251 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.204821022 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232661581 seconds)
  done (took 2.579435715 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.087493686 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.137895193 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.122107938 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.130289126 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.111709444 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.086810407 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.319691008 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.127995903 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.08484658 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.142052675 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.127000843 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.110743168 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.523165166 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.084961823 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.1109964 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080279194 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.110372545 seconds)
  done (took 3.58340011 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.460891716 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.71399333 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.4684886 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.119111055 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.128690475 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.127560479 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.707289877 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191923822 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.107731941 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.477515384 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775854824 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.155786575 seconds)
  done (took 18.531420206 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.120119818 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.110535309 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158262819 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.157691205 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115421802 seconds)
  done (took 1.768170457 seconds)
done (took 118.893874636 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.098192065 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398927375 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073241623 seconds)
  done (took 1.607704168 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.105293553 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.133847304 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.106173573 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.132683802 seconds)
  done (took 1.587367583 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.091855933 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.093625477 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.134814128 seconds)
  done (took 1.422292567 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.308751768 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158952614 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.157742934 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.099929874 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09607839 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.125695295 seconds)
  done (took 1.428577239 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09206429 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094074686 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121448859 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096551764 seconds)
  done (took 1.506769551 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.098307294 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072584433 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102974738 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076731494 seconds)
  done (took 1.459670141 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.107736424 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.12626526 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099677823 seconds)
  done (took 1.440951296 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.122446733 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.133763301 seconds)
  done (took 1.364111356 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099179165 seconds)
  done (took 1.203115842 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.112228101 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.163518936 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.170289214 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115059494 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168774596 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.147487382 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087177787 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086292345 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.116715376 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086823579 seconds)
  done (took 2.363220337 seconds)
done (took 17.21369577 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100584703 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416795496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384807717 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139461215 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691145881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404059186 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99637765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142316307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163140144 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087138899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13161794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667596428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.015560824 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343019729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002206267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.430970769 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.666231539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115341876 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086223052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114366811 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.983471427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114038353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087541279 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085641593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.696581194 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391048831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116714399 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.437338168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114418105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094796313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.37239082 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11507303 seconds)
  done (took 16.809225637 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.092619191 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173881319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097418455 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131112313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.093928391 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116928069 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.090564934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088140259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177235376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114706146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103791848 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114991505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.091096951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087019814 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135240423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086459544 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116245178 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087310278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115158673 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087788533 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134341564 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086950155 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086690359 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115726679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087588067 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.127816562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087536161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.114366252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087846164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097748165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118551972 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087459748 seconds)
  done (took 4.54556451 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138638049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181849093 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098389206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150037326 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167365515 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088994517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194176891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141774149 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151326456 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116249642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103429989 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116065134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121369726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116813771 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.106756623 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116173716 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088235466 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115985586 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087215015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08727205 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135033876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086195413 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116475296 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087068121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115463701 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101260197 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115961956 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087373787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08661465 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123949231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090129593 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116782411 seconds)
  done (took 4.86537859 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.091489951 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.093678992 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131476412 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.103481038 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118050064 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.090589094 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120186923 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.08929668 seconds)
  done (took 1.951540352 seconds)
done (took 29.283308903 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.097086878 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.088668128 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.121863909 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101076389 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.121373557 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100322578 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115446413 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.095146947 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.093976213 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.121688808 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.09521273 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116060862 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090317299 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.086080281 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.123341656 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.087951771 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130515779 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.090125748 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.130348958 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101681404 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118006106 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.094638266 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.092806118 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.130657213 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.100980727 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131296632 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.098992484 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122776361 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088722724 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11783643 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.101189723 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.136302274 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.088168534 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.100052481 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117263301 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.086831318 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.116459777 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.089413041 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13028861 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.094518161 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.088729091 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.124536571 seconds)
  done (took 5.585430705 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112980373 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146233262 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109175122 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.112125564 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089659519 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08494628 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141887309 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080680797 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112368664 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111150977 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.105199897 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078600257 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079749369 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103874605 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078248985 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076286959 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110027692 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076555855 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.106936284 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078232896 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080357731 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.103823673 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080567829 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079176805 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.10532151 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082720325 seconds)
  done (took 3.654162212 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.093913914 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102830125 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137637307 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16957024 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.119776038 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.124703148 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096829595 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134469399 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103198214 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.085770733 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.119185695 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.115087619 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137178178 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.094143764 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119355979 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.10233603 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130410687 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.088988319 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.091734533 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137890425 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.102897332 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127037621 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.107866886 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128285648 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0870976 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088385228 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121655859 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.096512421 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124149602 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096013599 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122507699 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090845899 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117709897 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.098953563 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.1211071 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.088292497 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.105641802 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126315115 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.095839123 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.117788652 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.091365997 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.088548495 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137972507 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163169212 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.086988694 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.092627427 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123475488 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.095843798 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.117641252 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104468459 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126360624 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.087715546 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.089479022 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118128001 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087833352 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132393903 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.088628683 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117862861 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.099008141 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.088896605 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.128937655 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.090983423 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131780034 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.087975085 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122531937 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088320376 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087413519 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115881663 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.109437353 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123133967 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128861559 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.117999438 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.08873043 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125823363 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.093382657 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092711868 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117842713 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101169516 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126728485 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.090768944 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127694803 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.089484976 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118547953 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105648844 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.088729822 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.118541217 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.088637233 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.122424441 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.089581489 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.087106532 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131420264 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.086183203 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119959655 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.100479211 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116750255 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.088832238 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.093032043 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121745393 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094996895 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129311664 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.092459366 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117157218 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.097743773 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117295959 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.090516422 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131136474 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092306498 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.086709864 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.121728293 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09359809 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117224276 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091355403 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119201197 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.090125236 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.096335664 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.124437136 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.090442662 seconds)
  done (took 13.800955403 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.223471884 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21428979 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.088941163 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.205640582 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130068895 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.103288108 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.20783274 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153968006 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089573306 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.087166795 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.118170144 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.159402579 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124035496 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.163743711 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.100629311 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115259279 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.105338484 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162240009 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.20922304 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.202785674 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.106382209 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.126599274 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.088452747 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.118871217 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.089074755 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.126675402 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.104216416 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127485907 seconds)
  done (took 4.995354069 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.103638429 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149706807 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.092833566 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.139542546 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.113242764 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.117490135 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.091917443 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.118214948 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.100286624 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.130485716 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.086961697 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123219669 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.094267504 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.095761316 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118021223 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.096382152 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.127456132 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089091607 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.120240983 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.091101892 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.092696746 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.13511236 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12103695 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.087862121 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.096616846 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117332642 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089966079 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138277053 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.116439431 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.109518097 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.084330422 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.123988788 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.09757761 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11894566 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.087432774 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.088739332 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.119682062 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.08908524 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.118891909 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.085843308 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.085164935 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109832371 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.08714396 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132560446 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094552281 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111898433 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.093916653 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123302226 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089113793 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085020078 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121202155 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.090608934 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121040526 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.09518706 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.091753328 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.117844893 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.090949466 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.119398782 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.093791842 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.08893813 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115760304 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.085643362 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.122362728 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091015764 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126647125 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093177586 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.115758394 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.089407119 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.091502396 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124868933 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.089168525 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.120620467 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.085821569 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.089472951 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.120114712 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.092593313 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.120581947 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.086268558 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.085861131 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118476284 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076937054 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.117287873 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075948362 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.090047087 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.115508634 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.085782442 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.118780181 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.09371745 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132457752 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.088832254 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.12550175 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.088796522 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.086125826 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120691079 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084611404 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120162567 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.103312929 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137425119 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087312417 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.115796481 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.101026361 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.089616894 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117301546 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077847579 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125298574 seconds)
  done (took 12.147114448 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.110192565 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.143809397 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090226375 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.10095121 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.145857166 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.110527658 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126018429 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.093799976 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.120552899 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.105327856 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.118496872 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097315906 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.091758979 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128713225 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.111126037 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126973845 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.089578211 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.128389379 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.096387459 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.153556127 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.102216593 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.132425722 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.098837057 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.087962385 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123821609 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.101027333 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.147331602 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.097638661 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.127772996 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.103052069 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.128097887 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.114242027 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.103135977 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123259365 seconds)
  done (took 5.02585171 seconds)
done (took 46.326904135 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.21363643 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.428535026 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.204283474 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.088454774 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.252451485 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.229015936 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.216561841 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.218695793 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.257018147 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.205520743 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.444771137 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.777692077 seconds)
done (took 58.677203041 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.293697329 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.371057323 seconds)
    (2/2) benchmarking "String"...
    done (took 1.496762002 seconds)
  done (took 4.005591155 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.918177098 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.266545342 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.464934175 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.20583674 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.204370963 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.493208522 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.937084498 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.650185291 seconds)
  done (took 28.359535112 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.215587983 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.611578646 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.099917815 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.092616834 seconds)
  done (took 19.15838097 seconds)
done (took 61.875243075 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.232939763 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.235780832 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.208717962 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.194993054 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.318941777 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235243651 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.548905058 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.250150439 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.226149484 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.210412042 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.229436705 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.221087575 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.221377804 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.587010655 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.212498041 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207372978 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.240415764 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.761782794 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.616259816 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.216346505 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.229961362 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.26099226 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.229321382 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.211184705 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.265580359 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.219948747 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.205815723 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.221613452 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.82882634 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.207436912 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.224916472 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.802555251 seconds)
  done (took 191.222118579 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.206494832 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.236249035 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.320701231 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.240311189 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.708025462 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.407410272 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.349916667 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.90913763 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.22497881 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.227398432 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.502269851 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.208751227 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.587178866 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.223733307 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.217503769 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.23964265 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.482448416 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.542268323 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.22727834 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.479141539 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.209058738 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.601652681 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.520569725 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.407940773 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.248297447 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.240959328 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.218028367 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.218317612 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.408033477 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.391238825 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.21934027 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.244022925 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.853633709 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070984809 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.227332882 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.256588482 seconds)
  done (took 151.016291943 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.519443902 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208822285 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.208813421 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209214079 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.242686559 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.208142334 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.805551708 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812897721 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.742935865 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.655138219 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.654539427 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.53097567 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.209992491 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304888469 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.223132701 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215878297 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.22624649 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.234351188 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215094191 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.209727637 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786860789 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.221574369 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.41766837 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.392264786 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226955539 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243945916 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.608969816 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208588907 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243764538 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.54536545 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.260341839 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2100589 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.613370767 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.6325675 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325580098 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211912781 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244135894 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.211716095 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.492771597 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211609835 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212150065 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.214270075 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916698366 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.214061405 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.80990034 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215587337 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.201529556 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.217204608 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.211959571 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211574581 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.408301563 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.941584263 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.218114278 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.212648467 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.216343555 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.211391764 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213264511 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.246986249 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.302118204 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.312690756 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.213549383 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.214909178 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.217106727 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246157517 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213797786 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.430786242 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218611542 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.618746128 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.274548052 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.433629084 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.805223221 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218748659 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.215755751 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315632772 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336513426 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214679222 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.21387351 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214602103 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.2151341 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.327763196 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.214015691 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.639675146 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.393518137 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.232399042 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.669536636 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.318401571 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214921704 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65151706 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.219456424 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.21558129 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.97481868 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31239373 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.214702154 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.215251033 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.222390054 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.640732023 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.215790358 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816687197 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.493762989 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.220727112 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.533434145 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.22097399 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.651601455 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.7862393 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.929804659 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.221140878 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329303874 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.394612307 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.232784136 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.215400196 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.668504412 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.220358125 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.272725453 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.22142163 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.61503022 seconds)
  done (took 368.056081708 seconds)
done (took 712.955255528 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.831625959 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.820877589 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.930483472 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.816013623 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.770825625 seconds)
  done (took 10.319241418 seconds)
done (took 11.469014746 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.411258739 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.413355408 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282763477 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412429386 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248992158 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429101558 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392279166 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.240978756 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.319494932 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300097011 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319286439 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271775077 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246274384 seconds)
  done (took 18.438199676 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542531408 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.543945592 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282857428 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.539459202 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258718427 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.553941071 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42593014 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.432058475 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42733609 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234557791 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232070329 seconds)
  done (took 16.625360777 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.544761649 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.545682356 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286962298 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.547859664 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260080616 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.544273059 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431452382 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437873666 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.446861571 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234086898 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2324841 seconds)
  done (took 16.662679873 seconds)
done (took 52.877664346 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.229023896 seconds)
  done (took 2.37933895 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.264555813 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.431193603 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.247964401 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.235667143 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.230548232 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.231601208 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.23663309 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.229235624 seconds)
  done (took 11.259487931 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.224164525 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.22533469 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.227740005 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.225286151 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228248504 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225500669 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.227421415 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226106835 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.225253413 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.227033913 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.224573289 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.225587027 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.227907738 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.228047919 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228710343 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.227901817 seconds)
  done (took 20.777237537 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.227596186 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.224426367 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.226337905 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.225800824 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226513361 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.226823621 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227354894 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.226215516 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227505315 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.226884522 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.228372484 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.226586536 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.226847554 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.226396744 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.227023716 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.226876555 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.226415388 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.225949939 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.231406799 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.2262167 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.22656669 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.226120535 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227812028 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.227749689 seconds)
  done (took 30.600004143 seconds)
done (took 66.166602195 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.427685734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.047072626 seconds)
  done (took 9.632266896 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.289145148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.289597315 seconds)
  done (took 3.736860535 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.702984558 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.230446765 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.231268683 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.231824026 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.230664864 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.231287419 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.230708611 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.230626306 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.231447575 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.230893322 seconds)
  done (took 13.935287118 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.231491865 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.230854646 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.228250468 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.23107632 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231878232 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228248189 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.231553337 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.231642497 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.231409858 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.228966487 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.231000196 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.229052032 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.232351056 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229313676 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.23206503 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.230403757 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.229898814 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.230259403 seconds)
  done (took 23.304422275 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.245152262 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.253376413 seconds)
  done (took 3.653381105 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.360018353 seconds)
    (2/7) benchmarking "second"...
    done (took 1.271779611 seconds)
    (3/7) benchmarking "month"...
    done (took 1.341450561 seconds)
    (4/7) benchmarking "year"...
    done (took 1.328464822 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.271515562 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.250657897 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.271123476 seconds)
  done (took 10.250986167 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233506499 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.414996533 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.521826619 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.81354477 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.234407559 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236357964 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.086173783 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.237007948 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.240343853 seconds)
  done (took 14.173134177 seconds)
done (took 79.841330399 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.259023288 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.225910014 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.461910512 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.241785479 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.244061439 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.525635623 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.277089885 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.351369253 seconds)
done (took 37.745485488 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.226562036 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.007568962 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.014053933 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.228927107 seconds)
  done (took 11.408514712 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.213371785 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.207508119 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.21883703 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.366979475 seconds)
  done (took 18.165643956 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.32222358 seconds)
    (2/2) benchmarking "read"...
    done (took 1.563584244 seconds)
  done (took 5.043778372 seconds)
done (took 42.00314006 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234924825 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.231990233 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.234597745 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.235048499 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.231856373 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.234620327 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.232837397 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.233244016 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.235354996 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.235319201 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.235472733 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.235485716 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236456598 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232974825 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233281306 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236155339 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.234012394 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234085117 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.234059224 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234123128 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.235633227 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237711274 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.234395951 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.234772434 seconds)
  done (took 30.786876956 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.237983895 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.235497925 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.236476985 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.237554783 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.234639024 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.237813435 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.238199024 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.234455365 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.237526511 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.238840553 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235306736 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.234933493 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.237592338 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.236063153 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23738922 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.235845651 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.238048193 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234831072 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237420099 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.235545765 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.238129 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235038164 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.236564799 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240726571 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.236233183 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23576562 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.238323311 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.236414839 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237158158 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.235332126 seconds)
  done (took 38.263381074 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.244179055 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.246811397 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.238837116 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.23899849 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.239372377 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.239121946 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.239320608 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.239330936 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.239275002 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.239968646 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.240609319 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.239314008 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.239284182 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.239243656 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.240606082 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.239579509 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.238807371 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.239668789 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239420805 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.240960125 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.240053402 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24057957 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.240643525 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.23963751 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.240279057 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.24163081 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.239658055 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.240508112 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.240655249 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.241943159 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.241226477 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.241488583 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.242281185 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.24029618 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.241336342 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.241493377 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.245759505 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.248217172 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.239940451 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.241405342 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.241592811 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.241282299 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.241390715 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.241463748 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.241436841 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.24155397 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.242400423 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.2422223 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.241940712 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.242278128 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.242218983 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.241319899 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.241865512 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.242911529 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.242146028 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.242472795 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.242269002 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.241698449 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.242483112 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.243334226 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.242042072 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.242587543 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.24210381 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.243643269 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.24300986 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.242788581 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.243271499 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.243314976 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.242515476 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.243322672 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.243296777 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.243479084 seconds)
  done (took 90.55274765 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.243743623 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.24074043 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.239916074 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240368515 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241143793 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.242627042 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.240629452 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242986793 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241948386 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.244237316 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243484849 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.241910516 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240840087 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.244013468 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244053416 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.24137296 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243827538 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242041197 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245322977 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.245086873 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24438997 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.242260695 seconds)
  done (took 28.504270463 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244030312 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245362882 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.24237757 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244958249 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242541581 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245874831 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.244318807 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245984082 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245265905 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243402299 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241436731 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246265876 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243112211 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244327775 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24387077 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.24280614 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245552169 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244565535 seconds)
  done (took 23.56247956 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.24365339 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.243273798 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.2460303 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242051055 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.243564697 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.246069529 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24293704 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247042724 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.244738525 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.244102716 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.246503569 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245758201 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245813699 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242721505 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24695623 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.244657246 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.247968789 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244085308 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247139097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243735259 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.244271989 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247107397 seconds)
  done (took 28.559236661 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246586735 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246133206 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243313596 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.244603685 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.243936047 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.246542368 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.247521905 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.245409373 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.247660383 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.248582355 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246067296 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246323529 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.244220113 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.244922224 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.246044056 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245233818 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.249611273 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245343244 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246975245 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.244467611 seconds)
  done (took 26.089931719 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249239 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250548163 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.250788965 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251916052 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250812661 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.251919153 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250833005 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25097239 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250390341 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252083082 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251737774 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252448726 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252551371 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251554673 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251265633 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252086255 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252314043 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251927072 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252357826 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251164869 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25246644 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251222129 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252740814 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252663708 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252721439 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252193978 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252549063 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253772209 seconds)
  done (took 36.221637505 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249859461 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250701406 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.248501532 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.248128333 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.248134348 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.247705521 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.247372998 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.248367308 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.249519219 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249043531 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.251970699 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.250751482 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.251573047 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.251902904 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250463264 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.25229918 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250257128 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.248683882 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248874066 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248354116 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.251904982 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252068207 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.25212145 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.249095464 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248983469 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.250654763 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24930436 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.24937446 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25144573 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.24994041 seconds)
  done (took 38.67293392 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.29656764 seconds)
    (2/2) benchmarking "in"...
    done (took 1.291068346 seconds)
  done (took 3.762345902 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.249573365 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252558501 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.251699595 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24941965 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250105097 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252714395 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252814511 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249612556 seconds)
  done (took 11.18311546 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250222582 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.251984825 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.252253341 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.252627828 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.253463842 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251805537 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258716675 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.27148719 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.251476655 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.25236198 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.258453612 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.258889559 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.254165478 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251935078 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.25131068 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254195074 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.252543278 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.254018537 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.254788535 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.2530529 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25464427 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254351312 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254357883 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.251920691 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.254212429 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.262245121 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.256827842 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253484989 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252830735 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.256630434 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.253145952 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.250497288 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.255887715 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254974967 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254342726 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.255660748 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263180252 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275072926 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25940991 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257063976 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255006657 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.252794171 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.255345871 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255536773 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255533599 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.256266405 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.255589308 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.253013051 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.252912673 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.257970588 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.26143214 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253052231 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.252791539 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256859676 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255917838 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26122389 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.277139304 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.258342066 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.264008182 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.264409112 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.267922299 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.264456822 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258154444 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256503878 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265721892 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280321719 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26208705 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.27305384 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.253574823 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.25633897 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.262146357 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269723453 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.282566231 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.257339378 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257484255 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.256905876 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255721727 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256789951 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263017321 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.277902221 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.258722235 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257322907 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266915719 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280785597 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.25592428 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.259221762 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.258886987 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.257765654 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.259265284 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268043501 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.279270253 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.257717139 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.2557085 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.256965364 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.258637047 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.258858896 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.256153486 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258470765 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.255271766 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259003608 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259461636 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261568237 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.266789507 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260083546 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26153815 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.263834973 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.258856467 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257026184 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.263275805 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.258472963 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259818662 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.259262002 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.263301148 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.257028153 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261584727 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.267407276 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.261155877 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.260531665 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.261828777 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.25947976 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269147701 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.28652546 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.260905171 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.261490142 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.263754164 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.273351301 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261466286 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.261484776 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.260385093 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.257827273 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.257382691 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.260900793 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.260824558 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.260320987 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261513743 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261409192 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.258373832 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.260703549 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.261994388 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.261411703 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.261790568 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.259692565 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.260748754 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.261637034 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261514073 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.261680555 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.265462672 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.260069046 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.26172833 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.261400765 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.258281319 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261101315 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.260962609 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.264445684 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.261343664 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264717631 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.260642838 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.262585407 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261950017 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.261447871 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261913716 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.262244822 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26585574 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.264419398 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.263798112 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.261523166 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.259039924 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.262729769 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.262987482 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.262498443 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.263700193 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.260451598 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.265405395 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.272474168 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.263178076 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.265237127 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.26462558 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263471268 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264765347 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264143152 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.265575377 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.271030661 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.263302669 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.268751534 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.266091094 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264931803 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.264051041 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.262708611 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.26193319 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267355224 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.266680046 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.272006818 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276296474 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289752841 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.265179248 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.268851393 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.264391745 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.270922667 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.267673538 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.26580712 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.265375574 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265363637 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263421321 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266460763 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.26635643 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.265684326 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.263945331 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.2656914 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.265959382 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.267353946 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266542137 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.26538114 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265646402 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.262979641 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266026378 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266361607 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.265170098 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.263695566 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.263441772 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.263790996 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.265920117 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268642722 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.270731944 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.264415917 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267069078 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266113 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.264216833 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.264309221 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.26675149 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267008069 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.264692644 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273500072 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.285415732 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.265584318 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271517732 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.28410709 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.265360905 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.268012299 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.266908657 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.263439329 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.269403235 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.274816106 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.2668417 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.26823262 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.268696404 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265508589 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266435696 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.271819195 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.265017401 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.265780953 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.26797458 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.26822839 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.265196179 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.268671146 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268317391 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.268115186 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268461258 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266681736 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.26825153 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266862745 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.270441991 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.269391621 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.268892396 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271992664 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.277612128 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.271574654 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.267796131 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.269948352 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.270048062 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.272034429 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.267731575 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.269936144 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267716371 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280860599 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295758199 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275078119 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.270705996 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.268994391 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274667203 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.271489784 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.272334107 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269575871 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269728815 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.268868672 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.268242551 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.266962163 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268922714 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.27051 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270663811 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272270679 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.274195655 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.270582042 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.268235377 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.272072986 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.271524168 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269511947 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269253022 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.270728402 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.270191191 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271240367 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.268687236 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.270609719 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276320386 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289420446 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.270378056 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.268763455 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.269644809 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.268724612 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.270996801 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.271229566 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.273667174 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.279302956 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.274361022 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.27908373 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.272570318 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278915487 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.27327426 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.274682768 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.281502386 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.268819403 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.270127522 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.27064461 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.273788333 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278822261 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.29244629 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.271517476 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.276902785 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273764297 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.273975862 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.272407771 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.273355644 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271441692 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.273353021 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278655618 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.294741385 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.274531411 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274723607 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.269633329 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.273810598 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.273101617 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.270743543 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273780278 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274551631 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.272570689 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.2717577 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.271275895 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.273503799 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.274265558 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.273337488 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.27098562 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273666781 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279186831 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.294095548 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278732082 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.273990036 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.279580833 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275430157 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278970404 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.296508126 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.273123934 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276230652 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275516505 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.27485243 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.272812137 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.274570578 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.278891282 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.275511497 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.278392605 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27499372 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.27606243 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.276689259 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.276778015 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.273292353 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285149712 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301857447 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.275418912 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279536237 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.272327235 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.276391805 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.280819768 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.276782604 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.273224475 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.278581852 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285108218 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282902143 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.275645521 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.278586845 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275548196 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27749827 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.276730565 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.275745074 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.277215512 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.277097002 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.27565263 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.278435613 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278053709 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.276377354 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.276255149 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276853619 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.276323917 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.285675554 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.27983678 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.276833096 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278231271 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.276168504 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.276705144 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.277062546 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.278278703 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277239313 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278196961 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.27823701 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283727714 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.283021171 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.279781931 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277575867 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.280424549 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.276939319 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.278235252 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279639276 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.279199117 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279433455 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.278454879 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.28054773 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.276951883 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.276099947 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.279850889 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.279487659 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279471994 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279539368 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.285386195 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279840231 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.276863406 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.27904173 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280317673 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.277803765 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.278765927 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.284402281 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281190805 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.29015676 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.287870863 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.285502826 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.277773494 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282496427 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.286662281 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.277639293 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.278508811 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282325128 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.27922434 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.280926665 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.282962692 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280087093 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.284453969 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.28059973 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.280122555 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287678658 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.303265321 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282711696 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.280564557 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.284365476 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.279980244 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.278743396 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.279430883 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.278903344 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287033636 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.300184448 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282800022 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281494421 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.27902953 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.282608618 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287719369 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28049593 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.281722682 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.279090622 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.280868675 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282606479 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281719608 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.278159987 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.279902006 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.280317278 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.284656008 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.288530041 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.280019498 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28360554 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.282291048 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.283088754 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285061236 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282413653 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.280449929 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.27926078 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.28084052 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284295649 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.281623502 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.283992928 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.281872138 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.28381852 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.284795993 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284125181 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287444517 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.292883196 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.291233064 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.280193215 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.282036876 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.283303679 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.285497323 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285391085 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284513363 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282726805 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.285278823 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.284823885 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286071609 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.284618117 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.287436523 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301722564 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.307567125 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285246009 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.284853945 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288002502 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.285814892 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.283627064 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.285526922 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.286398987 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.289843602 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.295185053 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.287201694 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291436168 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.304487868 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.286808609 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.288967667 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.28898079 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.293999731 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.288148544 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287974805 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.28846708 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.290470096 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.303516704 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287346885 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295313065 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316102344 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.30556918 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.285651333 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288564785 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286819934 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.288636663 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.287080666 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.289040945 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.28610151 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287559758 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.288347047 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.286747586 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.291576175 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.288869928 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.287986241 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.287644059 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.285191346 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.287416009 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285191921 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.289261435 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.288101546 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.288471925 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.289463903 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.289820745 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.287025863 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299750837 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.314646955 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.287272405 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.289675504 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.284759083 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.290343065 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.290231211 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298491404 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.294944851 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.290395025 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.290074322 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.288444521 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290366462 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.286230102 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.287984071 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.287676514 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.286887834 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.286435088 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.301106283 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301786535 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.290586388 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.288195323 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290741183 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.289439449 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290150032 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291134332 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291424898 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.289836316 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.291113047 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296237618 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.289882661 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.289225918 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.292448909 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.298926674 seconds)
  done (took 759.983157276 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288265667 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286948379 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287670889 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288259771 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287836807 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288384223 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287381145 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290306082 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.287402858 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287866025 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288344691 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289074229 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288261289 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289024786 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289375111 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288615652 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288569904 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288389279 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288368171 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28770585 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288563575 seconds)
  done (took 28.263473535 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.290761729 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.289048205 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289419895 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292075301 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288823885 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291489544 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.289061194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291172322 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29123195 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289339632 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.291871522 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291972752 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.289507833 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.289860937 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290101633 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292285812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29124494 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289093681 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.292844686 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289780764 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293198492 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290103373 seconds)
  done (took 29.604967977 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.294716437 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.293806241 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.291550693 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.291508597 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.292754428 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.291185193 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.295503875 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.293198681 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.294254676 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.292690277 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.291835831 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.294891845 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.299753803 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.298723657 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.294758167 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.294167523 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.437891919 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.296373995 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295467106 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.296397483 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.292106238 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.298483579 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.291142859 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.291768372 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.291766406 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.295252447 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.294762476 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.295349089 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.297182354 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.296497078 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.301502945 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.294894862 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.293665123 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.296718374 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.294057063 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.295718754 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.299461496 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.299021258 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.293710235 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.29626651 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.304982417 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.317210427 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.29765296 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.301364933 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.296634663 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.297757792 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.297833621 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.305954579 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.29405651 seconds)
  done (took 64.867112073 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.295345253 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.295533908 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.294560171 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.296017869 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.296480935 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.296031096 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.297133696 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296371299 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.293855112 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.294138484 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.297706001 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.294771468 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294409814 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.296714953 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.296941407 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294864567 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294042829 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.293474324 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.293839246 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.293699892 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.294488578 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.297150518 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.297471183 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.295178393 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.296657395 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295727176 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296325687 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.297867817 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.294924587 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.294450012 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.299048733 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299062675 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.29895184 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.295545919 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295296678 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.297646295 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.297384803 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.296137091 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298945371 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.295534816 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.298708234 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297759634 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.298855947 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.298114092 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296756263 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.296643118 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297915251 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.29544971 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.297074767 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.300077089 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.299169457 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.297057416 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299329777 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.296890202 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30037272 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.300585924 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.296660682 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297038395 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.300775413 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.29839012 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298379185 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.29995672 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.298368643 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.300573402 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300399983 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.297902857 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.297998433 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301262285 seconds)
  done (took 89.415482463 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301535264 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.30292584 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303919922 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303263209 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302912843 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303075529 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.302591929 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.302732892 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303110613 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302746614 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303122221 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301464128 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.302865863 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30213173 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303070169 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303245748 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302449982 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302928026 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.304355553 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303715891 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.303558771 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303440251 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30496135 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303597023 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303880516 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.304550047 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305826249 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304151202 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302995702 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303267265 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.304701647 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.304962203 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.3043205 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304443278 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.304611474 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.303861916 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304806642 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303773156 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.304155201 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304228687 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304579558 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304733576 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304632969 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.304695881 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3050996 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305131913 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304295997 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.306271524 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304072007 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.305753855 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.305953601 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304094048 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305495346 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304261609 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305073411 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.303858366 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30720281 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307411561 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306661571 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.306769464 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306939536 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.30472094 seconds)
  done (took 82.081825049 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303729336 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304014355 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303231795 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.300480703 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.305526087 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.30252069 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304393042 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.305466873 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305344364 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.306816084 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305162951 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303218985 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30462411 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305865245 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303216161 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304016353 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304207235 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303708608 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305093158 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.302923177 seconds)
  done (took 27.308140692 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.303470342 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305878416 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.30388126 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303633521 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.305609142 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302652146 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.306217118 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305174123 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302709722 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30632668 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305540785 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307375982 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304543361 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303524209 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307508285 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304587081 seconds)
  done (took 22.102826399 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304602471 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306208982 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.308471357 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307447737 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.304123086 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.305402593 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.306811075 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.305530532 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304425743 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.307444507 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308196987 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308459647 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.307316478 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.310189666 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.304673921 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.309186311 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.306518747 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.305616761 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.308360912 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.310549827 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.306203489 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.306153526 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.308527388 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.309039064 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.306041734 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.306380582 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.305421263 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.306272286 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.305423435 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.308563652 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.306997992 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.306543175 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.306974413 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.305971725 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.311179664 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.305827736 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.310146029 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.310082241 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.310576078 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.311248932 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.31073693 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.309007087 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.308999392 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.310377949 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.307087893 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.31040979 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.307858123 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.307726801 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.306827026 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307663725 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.31106003 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.312122428 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.310114116 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.31149178 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.309427158 seconds)
  done (took 73.159536043 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310884405 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310649918 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.308964915 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.310138011 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310670419 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.3077522 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310936921 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30929792 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308795633 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.310825824 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309904681 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310353618 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308370993 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310737338 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308535994 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310785574 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307693958 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.30960131 seconds)
  done (took 24.804072925 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.309482952 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309704687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.312109127 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.308518148 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.309462687 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.312537331 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309592336 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.311232342 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312065381 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.310474504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308426978 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.313588152 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312840662 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.311706164 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.308948393 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309384501 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.311900669 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311215371 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.310019461 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311576395 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.312472332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311865655 seconds)
  done (took 30.069324404 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.311506113 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.310145084 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.311701569 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.328190352 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.33082538 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.333771629 seconds)
  done (took 9.156372298 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320888515 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314358674 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310449686 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312804506 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313385969 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310739637 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311021605 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310644332 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312313469 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311912554 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311563454 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313274773 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315302477 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31343121 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313458131 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313741549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31445858 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312489046 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311816529 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315662012 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312737208 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315132372 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312103413 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31201239 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313358944 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31122625 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313478681 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313768043 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311067818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316378535 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314895413 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312521305 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316151821 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312978307 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317351883 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317676479 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316052945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317081792 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317477855 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315888037 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315611409 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31596928 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316172497 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314139971 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315159244 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314029046 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31326777 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31286435 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31360165 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317287957 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316056892 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313789606 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316477991 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317439522 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316364025 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31759282 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314984217 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313747303 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31811292 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314411273 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316672206 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316931552 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315825127 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31581177 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318415843 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317758793 seconds)
  done (took 88.017939387 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315527742 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315372176 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31615854 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317351554 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315496818 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316189453 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317324375 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315459432 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315707926 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316233368 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318649651 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317776073 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317523108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317731827 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31917984 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316744269 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318330923 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31628221 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315502505 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319696057 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317320934 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31583431 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317725622 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317386785 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317778095 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318014455 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319496986 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316712773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318548308 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31883174 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316987787 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318019102 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317054475 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.316379919 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318601616 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317700923 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316430741 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317021375 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317829069 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320912971 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316357575 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321028794 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319720594 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318537878 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319072306 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319303572 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318396498 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318242127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31724933 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318227235 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318821377 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317550341 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318077081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318438054 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318478938 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318215104 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319241801 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319869457 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318231319 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321999806 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319626683 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319171434 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322055375 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318316812 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320024499 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319702117 seconds)
  done (took 88.22453157 seconds)
done (took 1774.37712098 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.313266504 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.378113801 seconds)
  done (took 13.930733681 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.484830489 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.437965818 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.319536742 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.317950939 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.318896368 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.334033619 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.330149326 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.319688019 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.320210544 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.319460804 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.319693274 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.509279954 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.35320802 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.321008292 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.320422958 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.412849706 seconds)
  done (took 42.989914833 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.35115895 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.328898489 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.449997355 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.348307795 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.350165101 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.525220466 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.385913956 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.329047503 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.512473028 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.369693565 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.026140435 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.349835385 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.324928884 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.592879158 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.349410667 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.521656154 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.601931353 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.038528039 seconds)
  done (took 30.995054708 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.82978506 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.326550677 seconds)
  done (took 9.394939015 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.316485145 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.339890591 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.363483036 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.336278877 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.345296981 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.369366699 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.375631594 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.379007183 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.331556535 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.340764347 seconds)
  done (took 64.744902818 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.34761621 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.325628337 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.327204823 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.323758204 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.317176837 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.317934517 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.325535046 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.31979974 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.428071722 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.469967349 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332607964 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.336129938 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.345628359 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.327369773 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.323619915 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.365946212 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.496257161 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.324320492 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.325596456 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.332611498 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.327072445 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.424773564 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.372505543 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.327918905 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.465980446 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.433305347 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.333635361 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.33717885 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.477905498 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.325440344 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.32697294 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.326364083 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329287801 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.965863745 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.843032986 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.337854302 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.354399215 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.336816079 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.326142776 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.500720135 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.328188315 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.334909615 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.32207298 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.837453448 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.47953916 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.451666278 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.743050975 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.334485682 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.332098768 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.396950628 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.33334815 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.330836525 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.362038666 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.129249193 seconds)
  done (took 112.446321823 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.326188701 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.714735561 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490182632 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.350680653 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.089578314 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.966038474 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.345686608 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.649591474 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.343071586 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.326809405 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.62641786 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.874792332 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.348043629 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.362154738 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.611468052 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.412375926 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322198113 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.132535829 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.34724631 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.327016002 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858434815 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330537084 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.327407394 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.60762397 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.364562955 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.806954772 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.926459968 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.808179588 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.346237054 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.322805306 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816638245 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.346025509 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.337818257 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.32527092 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.600163047 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.71215323 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.68771258 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.327735715 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362428315 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.32579508 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.345177728 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.802057264 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.694765173 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.325075238 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.343312444 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.805612581 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325669 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.330655851 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.334011025 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527494348 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.106658561 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.325298751 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.931350219 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.329715199 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.703908955 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.327980499 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.347820279 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.839023036 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326038344 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.427472209 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.37323466 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326724834 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.332215768 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326561354 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.328793503 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700564554 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.719668723 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.330618883 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.700493687 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.811978457 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.345820968 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.900991311 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.184361173 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.344042321 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.372448324 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.339260149 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.932024709 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.853231935 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.330515956 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.326521675 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.688943512 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.331802542 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.622406629 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.343377335 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.329654115 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870324164 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.341691683 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.371770075 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.327533659 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.342716344 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.998958053 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32697498 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.631510351 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.386042852 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.32671405 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.326202957 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.330300867 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.328171434 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.353833048 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.333295475 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.884373864 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.355091417 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.471773257 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.351915476 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329078143 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.334406796 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.331024425 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.330012142 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549943313 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.945965415 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.339161567 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330419958 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.345772137 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.339917141 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.640354446 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.32933544 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.665563437 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.332203276 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328200067 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.334443952 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.961966243 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.358895282 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331247364 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.338518619 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.274301474 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.543237614 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.354196102 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.330615112 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.345537408 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.329695526 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.765107023 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.354313633 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.386829644 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332621568 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067776688 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.387933193 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.344056912 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.771140451 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.338751654 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.33231033 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.345511492 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332253006 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62660321 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.61526887 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.63193931 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.335137305 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.333809263 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.043906651 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.405848715 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473686553 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.358856056 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.373736632 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532457026 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.459789454 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.331884749 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.958225558 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.333894829 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.548943677 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.336838163 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641319179 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860033934 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.354917429 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.338656214 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.071612491 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.091798751 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.994151881 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.335079344 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.628809488 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.346070753 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.810733501 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.332873017 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.33323634 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.812667121 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.34169764 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.341790105 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.334948342 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.335163854 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.485640563 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.508848889 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.02084989 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.337676312 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815851107 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.365816327 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.335420506 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.339681487 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.33532601 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.682043647 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.382391531 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.336744187 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.379791963 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.335634075 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.33447165 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835918153 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.201248529 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.341172336 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.489839747 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003953585 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.357276447 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.337756687 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.105908252 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.034192742 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.878246336 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.354814229 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.671945845 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.338851649 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.377353264 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.020124726 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.403641672 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.836640388 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.337274133 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.335712412 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955683175 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.354722065 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.397929668 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.335924181 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.337293812 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898286183 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.353758795 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.338047974 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.690979094 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.35853424 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588480238 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.339103422 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.383021944 seconds)
  done (took 1113.445025654 seconds)
done (took 1389.185636418 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.336389137 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.343463362 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.32838193 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.342130765 seconds)
  done (took 26.609453287 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.346733586 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.343222961 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.347379458 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341611001 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345797994 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.34336583 seconds)
  done (took 9.330522807 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.479592133 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.341803147 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.342986602 seconds)
  done (took 19.425525522 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.57126741 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.731352373 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.719751172 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.798601258 seconds)
  done (took 11.083439632 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.34831592 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.345660772 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.347948603 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.34857962 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.350628617 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.350340245 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.347585135 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.348331849 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.352316202 seconds)
  done (took 13.401039696 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.787293095 seconds)
done (took 86.897060144 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.757606334 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.325778649 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.378139711 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.330279208 seconds)
    (5/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.227341034 seconds)
    (6/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.330852706 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.607022879 seconds)
    (8/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.402832548 seconds)
    (9/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.126956057 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.381299897 seconds)
    (11/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.350736588 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.371784869 seconds)
    (13/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.771061171 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.845412649 seconds)
    (15/309) benchmarking ("sort", Float64, false)...
    done (took 5.653268856 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.32589618 seconds)
    (17/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.33092222 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.346845746 seconds)
    (19/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.39747574 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.328196499 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.25482831 seconds)
    (22/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.869771276 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.3428357 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.353655228 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.266080653 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.40502393 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.340325433 seconds)
    (28/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.722713013 seconds)
    (29/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.428646907 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.456778536 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.24709583 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.341829949 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.455194611 seconds)
    (34/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.423135332 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.424659985 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.006333735 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.471381759 seconds)
    (38/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.327885352 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.082240433 seconds)
    (40/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.367343978 seconds)
    (41/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.029810667 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.114204055 seconds)
    (43/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.367875461 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.346525887 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.853184302 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.371792496 seconds)
    (47/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.452048682 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.285787105 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.766565383 seconds)
    (50/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.048393883 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.028948132 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.617047305 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.824326897 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.468384362 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.144260938 seconds)
    (56/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.721507718 seconds)
    (57/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.440756978 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.450740558 seconds)
    (59/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.32523927 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.596671859 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.341432278 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.359125426 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.338086119 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.091758865 seconds)
    (65/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.168099958 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.352365702 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.398315063 seconds)
    (68/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.337400128 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.531155196 seconds)
    (70/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.442110431 seconds)
    (71/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.777347825 seconds)
    (72/309) benchmarking ("sort", BigInt, false)...
    done (took 6.3402405 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.11484575 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.476937785 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.043824904 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.707925037 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.421203884 seconds)
    (78/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.75568801 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.389909655 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.348878613 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.196971332 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.177086268 seconds)
    (83/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.022554893 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.387813707 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.326674247 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.640514149 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.616059093 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.891651035 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.353724242 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.282121547 seconds)
    (91/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.477082933 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.34423284 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.411136808 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.176998839 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.368615191 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.343280133 seconds)
    (97/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.506698931 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.456118521 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.875159808 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.950568626 seconds)
    (101/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.049593654 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.378271161 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.893501008 seconds)
    (104/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.565857305 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.932626069 seconds)
    (106/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.109123866 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.466102415 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.452000689 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.337880523 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.593702966 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.556156223 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.341493268 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.903727202 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.359169547 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 4.395816147 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.808885039 seconds)
    (117/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.364098043 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.367817104 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.466951948 seconds)
    (120/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.427095182 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.027205554 seconds)
    (122/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.754965528 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.362160337 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.329623859 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.428758858 seconds)
    (126/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.340500395 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.867493527 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.867778283 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.372173575 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.93468648 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.485804393 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.628899267 seconds)
    (133/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.218084132 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.223043343 seconds)
    (135/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.356589645 seconds)
    (136/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.754952947 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.922136332 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.18172234 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.073383094 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600665715 seconds)
    (141/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.534909878 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.346643958 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.589789188 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.360995748 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.436037092 seconds)
    (146/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.690408119 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.330345254 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.477091312 seconds)
    (149/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.816518893 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.345493137 seconds)
    (151/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.226225511 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.828232684 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.330630807 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.403668265 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.203359036 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.370988413 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.162383648 seconds)
    (158/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.431829737 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.330692696 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.257701906 seconds)
    (161/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.33000467 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.387198996 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.425929186 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.370837789 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.368140616 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.33108096 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.458990868 seconds)
    (168/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.420126126 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.331692255 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.092071688 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.351135878 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 5.39690741 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.333009753 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.353665177 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.343035211 seconds)
    (176/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.470887402 seconds)
    (177/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.344653975 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.370900648 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.344620579 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.363280841 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.332481903 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.393908327 seconds)
    (183/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.346094837 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.499560625 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.774812695 seconds)
    (186/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.562160308 seconds)
    (187/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374306533 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.373819077 seconds)
    (189/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.333031201 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.388469782 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.373531622 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.977667771 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.405161134 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.736705053 seconds)
    (195/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.089192079 seconds)
    (196/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.35361554 seconds)
    (197/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.547820433 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.351204402 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.641424362 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.954796759 seconds)
    (201/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.82092379 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.334421023 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.17644238 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.369755952 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.372263651 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.470527823 seconds)
    (207/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.876784642 seconds)
    (208/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.310288829 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.335251922 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.418681043 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.560467207 seconds)
    (212/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.949463852 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.47125515 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.357160179 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.373637465 seconds)
    (216/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374530772 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.335293658 seconds)
    (218/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.078486383 seconds)
    (219/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.240001132 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.299781234 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.034560161 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.371153761 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.475858462 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.33491102 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.066705755 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.34616411 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.651512464 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.389174564 seconds)
    (229/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.073207709 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.448948718 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.351853272 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.3464291 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.376650619 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.064513741 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.348576066 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.739837199 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.356015735 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.413550733 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.350350581 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.485988681 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.768198441 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.796899241 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.452534284 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.348828845 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.339357058 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.431661721 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.337081183 seconds)
    (248/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.349716554 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.376601592 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.84795062 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.462068053 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.336318381 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.621653119 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.354091482 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.355550493 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.316812279 seconds)
    (257/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.3780812 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.375757342 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.624716682 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.397139628 seconds)
    (261/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.863452122 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.365202968 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.33984889 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.382179973 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.357028301 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.754547342 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.66772496 seconds)
    (268/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.672712971 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.350752535 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.339378322 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.377976174 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.351007582 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.364337165 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.629085282 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.4021974 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.632914147 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.434934628 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.330026262 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.43528704 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.434458554 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.283220191 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.471775929 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.367336724 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.188955081 seconds)
    (285/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.363601716 seconds)
    (286/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.884832323 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.352923371 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.410443171 seconds)
    (289/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.378706205 seconds)
    (290/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.338686985 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.475713533 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.36158348 seconds)
    (293/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.416878802 seconds)
    (294/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.926188922 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.353698081 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.090422993 seconds)
    (297/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.362955846 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.037247195 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.65207377 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.422718988 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.378436923 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.374276853 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.35713726 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.340031454 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.346012837 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.365671061 seconds)
    (307/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.610753512 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.359703591 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.428957529 seconds)
  done (took 1054.243085582 seconds)
done (took 1055.506120099 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.38544642 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380111952 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.364520737 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.385390575 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.47567351 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.546382329 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.374685718 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.365920341 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.41178458 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.412205821 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.363950544 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.545131134 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.365565988 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.364364143 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.363580983 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378290512 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.551773094 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.369741267 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.381639456 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.373967625 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.380121514 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.364163147 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.414864837 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.546785404 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.369434029 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.367952709 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.368742311 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.384709721 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.477890836 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.367236059 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.368462334 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.378109256 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.562110828 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.368024979 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.361828607 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.385163376 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.377488393 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.37639913 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.371351434 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.398135248 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.95669466 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.366336122 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.368487711 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.367916942 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.366659585 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.370053203 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.368420313 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.37255193 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379873235 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380792219 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.94622164 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.382373983 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.370440371 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.368165308 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.379594296 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.367577709 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.370480294 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383780908 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.387316013 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3834119 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.555058742 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.379200737 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.370764503 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.385404971 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.375154016 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.988651066 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.364001473 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.372981193 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.964995233 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.373026093 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.988396248 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.377072938 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.370367466 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.382321905 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.400942591 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.573334182 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.370122301 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.36761087 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.376460183 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.367116963 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.379854871 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381700427 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.374621717 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.370676121 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382514163 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.552911612 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.380118784 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.371425774 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379697979 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.389569922 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.377012026 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.381775352 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.374734894 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.364966008 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.380108946 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.374486765 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.372094245 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.373639268 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.374925026 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.380998393 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.961728889 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386891144 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.367367333 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.367198025 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.369446888 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.385236085 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.964467117 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.371516408 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.392137513 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.417702607 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.372842842 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.562605184 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.38058229 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387864968 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.379513228 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.375450651 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.366393343 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.566149542 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.961960389 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.386255826 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.373446602 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.370286131 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38741378 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.373310861 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.368466854 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.579814144 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.379148817 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386202525 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.492128818 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.382519314 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.403928247 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.371036446 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.376397538 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.409655367 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388349995 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.402663284 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.376124424 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388544804 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.387224229 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.37042546 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.383390459 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.383213767 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.375840697 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.379075923 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.367187191 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.414011083 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384848201 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386153842 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.393772696 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.493912919 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.371677504 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.511175078 seconds)
done (took 234.023505982 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.431120565 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.363616447 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.462383458 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.37000503 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.473131873 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.47233005 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.368718242 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.369072457 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.368106989 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.747195375 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.368863062 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.369967956 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.365097447 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.369655811 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.451688401 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.372199525 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.369564469 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.710016552 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.372779737 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.441536087 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.373053443 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.369266345 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.372075277 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.752241962 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.363583724 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.37130995 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.442567821 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.37205811 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.717661097 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.368886846 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.370565372 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.716312803 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.461309567 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.389031182 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.382556222 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.380099375 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.475095375 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.393359695 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.452467887 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.452816382 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.46501563 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.413000281 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.366527691 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.371286554 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.375175606 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.37578002 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.370567549 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.399967336 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.367293356 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.370939348 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.712273352 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.382999263 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.371781416 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.371533276 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.371974781 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.405255986 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.371264076 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.376732624 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.463796918 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.377362605 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.437905854 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.753572508 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.750590461 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.37522887 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.368280711 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.373072647 seconds)
  done (took 151.017420905 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.441704807 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.446050999 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.494285268 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.377515334 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.425904779 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.49842313 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.379613418 seconds)
  done (took 11.350386882 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.381471961 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.375788929 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.42481105 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.423335413 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.376841017 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.560232107 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3769213 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.387198457 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.372738564 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.428178219 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.377383943 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376631332 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.382999629 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.372072476 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.424526422 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.387181828 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.490268972 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.376654301 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.378432477 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.532528254 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374796742 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.383328396 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.42921415 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.388136609 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.377638851 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.382668465 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.213156307 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378435623 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374426557 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.376610687 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374871612 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.462615958 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.378286191 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.374971094 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374466634 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.49344313 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.379026721 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.375312619 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.37791061 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.376557531 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.377724526 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.37790386 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.378093048 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.375647801 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.377432922 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.400024199 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.378089293 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.379548397 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.37770449 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378363932 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.428675074 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.379020101 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.37583728 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.376193934 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.433365249 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385576486 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381752182 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.376878196 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378928879 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375705786 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.534163074 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.427170805 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.38047196 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.427389191 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.379801691 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.379311331 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.379027371 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.379458914 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.433140626 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.379998124 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.426761607 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.377423152 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.571220032 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.402573377 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381043599 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.382654703 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.382617058 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381615387 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.376771255 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.385830313 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.378721363 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.380840663 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.386496657 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378134779 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378742429 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.564267056 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48892407 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.378595811 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.392989206 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.387811636 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.378502026 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.434467173 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.380628868 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.379373848 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.431870699 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.495704649 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.434233101 seconds)
  done (took 158.055032587 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.385520109 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.388816523 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.383923098 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.404096075 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.381252723 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.381032365 seconds)
  done (took 9.617533465 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.383580664 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.3833065 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.381618012 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.38247373 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.383606343 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.38228611 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.384580114 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38174593 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.388875343 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.383189363 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.382254211 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.393103401 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.384239948 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.384146943 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.384749412 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.382761177 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.386349686 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380660781 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.383035134 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384145115 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.478511041 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.384735387 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385648897 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.38537733 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388338643 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.383423079 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.391135308 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.383957888 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.384101211 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.391262269 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.389920603 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.384518581 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.384838797 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.38979571 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.389663036 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.38485666 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388695699 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.395721959 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.38252948 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.383961828 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.394003414 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387050709 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.385466726 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.394836596 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.38554374 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38945369 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.40002395 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.392795548 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.388474594 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.395849415 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.395580779 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.385777808 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.386723943 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.39528083 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.387895455 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408845878 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.400166862 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.387976739 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.386767786 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.386520778 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.389736128 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.385964309 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387207031 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.393186308 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.39257634 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.395907317 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.388385975 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.392636316 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389402417 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.386063894 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.396615283 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.384396462 seconds)
  done (took 102.325664769 seconds)
done (took 433.649571193 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.609344335 seconds)
  done (took 7.907314882 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.582001556 seconds)
  done (took 7.884838566 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.191164849 seconds)
  done (took 25.498265885 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.465200228 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.499031334 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.402034908 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.406204363 seconds)
  done (took 27.075493155 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.675609687 seconds)
  done (took 7.977956153 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.38333998 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.416682178 seconds)
  done (took 14.105490799 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.634761051 seconds)
  done (took 7.937471842 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.471080839 seconds)
  done (took 7.778461812 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.387065701 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.406827652 seconds)
  done (took 14.112068707 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.370636673 seconds)
  done (took 7.672980025 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.49104387 seconds)
  done (took 8.794010762 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.386349488 seconds)
  done (took 7.69142659 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.448589246 seconds)
  done (took 7.751999002 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.230558777 seconds)
  done (took 10.532896421 seconds)
done (took 164.019863455 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.384197409 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.382302205 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.385623153 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.383710753 seconds)
  done (took 26.838714334 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.425922412 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.427231579 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.427395331 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.436451751 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.428137605 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.426360213 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.417906235 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.417596678 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.436079915 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.428067159 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.427540009 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.429495394 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.427512939 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.418085335 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.428230196 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.42723435 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.436159558 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.427923397 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.419557621 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.428808743 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.393598773 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.437909981 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.429767668 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.393416746 seconds)
  done (took 35.501054058 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.916757246 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.463357711 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.547136562 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.445862539 seconds)
  done (took 7.677934508 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.444746015 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.447866267 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.457523324 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.497126689 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.525056544 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.456370265 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.419721352 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.415666201 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.401237038 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.447817866 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.521257879 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.462295102 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.532863231 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.394139792 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.581930393 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.393895364 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.394559137 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.447168692 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.49848687 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.512499231 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.394420946 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.446374291 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.451543996 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.464139583 seconds)
  done (took 36.314415284 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.395014791 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.413029482 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.394064649 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.393800383 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.401312112 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.393698079 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.395739522 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.395628435 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.395053852 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.400473362 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.393328879 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.406245431 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.394483787 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.395373382 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.400673483 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.396118679 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.401025992 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.394534137 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.394490123 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.401473934 seconds)
  done (took 29.263135827 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.387347586 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.242567585 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.740038627 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.64482588 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.389000368 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.388457654 seconds)
  done (took 28.09946004 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.476080916 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.621487688 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.396379158 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.820787333 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.906946456 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.403173099 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.396340083 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.665730061 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.034271051 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.034350672 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.468511872 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.472930958 seconds)
  done (took 21.007734312 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.393174462 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.389796582 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.393940487 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.407046559 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.459394592 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.40161757 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.404183527 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.390964466 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.459456438 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.465641084 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.401649148 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.460463039 seconds)
  done (took 38.336908304 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478731695 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443948756 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.56338024 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489891454 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1176311 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606006403 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.449319283 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.174379057 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.397821489 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665737325 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392911865 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488311449 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650811554 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396643858 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396805613 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.506961604 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620287281 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964302274 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398633422 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.98900521 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424375057 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397888306 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.082835253 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669977402 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610572272 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.378776691 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.655107699 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.171775197 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724443787 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414179729 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405226972 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394175968 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66980148 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103081991 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490802539 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642516246 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402169864 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.045815527 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.40622863 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.902185844 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414324845 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403585414 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405211907 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395928337 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329245093 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410554105 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183827006 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400786003 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.107156447 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397129144 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699075559 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495565079 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.399679617 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.968796491 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447942895 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402300531 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.40045407 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494227224 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964370669 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.459939388 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418678191 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.33070593 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397721829 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.916831424 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074884586 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.402472987 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.401257064 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401210526 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33164078 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.96913824 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419655225 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534394758 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.42213872 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058869719 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161405941 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407621208 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.334207725 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026603479 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405239967 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.335196984 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62719126 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.177540416 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338892504 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.351025938 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331723753 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183752011 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408019247 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.923077161 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421173732 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160349654 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647029808 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422074491 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42321052 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623987487 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.285943695 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398595604 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.39869063 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528952087 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420341806 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177001433 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333218233 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.402037135 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657056553 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.610599482 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408603637 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.519384813 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932698251 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402626681 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.417777322 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411283468 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.652741587 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.067718018 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422999622 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.472284936 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421459921 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.175849559 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232802122 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402642558 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.408550358 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414952719 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678214874 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.274654898 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284390509 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468553312 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410160721 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400674797 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011854659 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.258740819 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.29948603 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.640767329 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438421745 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.411021749 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.404639018 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358376049 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.399619974 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418879164 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.186773555 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.627500875 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420339581 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681588555 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336171422 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540700961 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418737366 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.625865941 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.73242934 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.407998681 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664011553 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414563351 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401744495 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418871613 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421140591 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502425613 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424724911 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.4203757 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66385672 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.405486735 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.406771598 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.016319461 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.186596603 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406012212 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.409089061 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412517184 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063198654 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380459401 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405850986 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.297058911 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.418023183 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471174054 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408472369 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.655021188 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.514480055 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409812841 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.409529311 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.407596071 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633393362 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413731373 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.938138069 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491486677 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.934551981 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06545317 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424716792 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.338885036 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.115594397 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.096582294 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40565928 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.594923236 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405543885 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653668987 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424397175 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411224325 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.073785951 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414571258 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.935710677 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.417416759 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417586308 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.411270478 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406104172 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.459515342 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.499808729 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421364679 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.417304526 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550264806 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.419796026 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.340575143 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.923150977 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411688837 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407415398 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.182317426 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441331967 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950449453 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283783368 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66829242 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404654132 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711972562 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.125635129 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.448619728 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.408626858 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4153082 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414861037 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.439816414 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415339652 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.418150132 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.005844656 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.86197217 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973633787 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2341251 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007207506 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.93018217 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.418930091 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.310683378 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197957097 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34027992 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06774574 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62616745 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184445095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364690456 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944131094 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.731476603 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270351776 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713051561 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644988139 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.902860324 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.42621781 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722273102 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626257681 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443198375 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.41617699 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.345586619 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.696925163 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020420145 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426547053 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494505187 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18384605 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408777376 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.196303679 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.486199546 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.338520479 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882051484 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.04063876 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.803940999 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411877373 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430593489 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284923452 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413262192 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94022431 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087872793 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419413232 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.950214236 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350609939 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663494251 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.427205399 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.41569451 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.96171843 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.424859145 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.669092185 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.71649661 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349130299 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421251012 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02508226 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.268770622 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.417461758 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412046348 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236103865 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424796184 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749429202 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.418469628 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.454780963 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417718938 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.346927885 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347832764 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.10512446 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418171891 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382003786 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971613345 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.433695613 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419256271 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418203678 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26486759 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671193381 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.427080435 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.075783299 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64550794 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433763579 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436766301 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.417126857 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414059944 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.405022196 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.296002549 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649215389 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428039409 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.660815651 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.591444832 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.323943317 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.445251253 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648832384 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.311867388 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425161632 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701569475 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.127777549 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.419924547 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208801835 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440340971 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420257096 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.437784053 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431126562 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435661664 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48594534 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667625232 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.431429572 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.425593072 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879783603 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415506855 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420992747 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.428791514 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509229421 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.548481839 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.461393993 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.187997883 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082993776 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220700078 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.091768878 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725156191 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418722398 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417602168 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349934174 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564415057 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.945005824 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68899406 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537037834 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.419601008 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440437163 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428373017 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435620617 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632678671 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691213314 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.292867039 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426221714 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.085246118 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.575894596 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428581897 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.629119949 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983072585 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029771808 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534552114 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434313844 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208906197 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691536663 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.50959806 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418074938 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013914819 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.435183741 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.355517618 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.426962933 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432049207 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571259609 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718395293 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141388815 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.427349186 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.573150369 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.19163868 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066855426 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.682901174 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.967726721 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.674017113 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089431557 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.230113953 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688334404 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489384789 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672859742 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.547319853 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568684282 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.421489784 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.307993369 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420744165 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267624296 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.129760966 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.428955775 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086629541 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684984867 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.424190276 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.429654515 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450670263 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.43011704 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.644565811 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221778729 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645643236 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429798245 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426480513 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.994254826 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085923531 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727816724 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356091234 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.425783463 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701859316 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.660938608 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446457677 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.872707643 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.131864932 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035342038 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.39586272 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443125502 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435130241 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.22948686 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088864065 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.533024801 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985332836 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084169254 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434533231 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700570688 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.426577306 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.424330204 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704317779 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.425565222 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431757872 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683234747 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.080215474 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315848362 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.437632073 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.091447066 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.366129903 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.651819424 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49669848 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359609358 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43130367 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.901286625 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.446099884 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54289628 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434484969 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.428838379 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440645971 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.183189948 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715980703 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.429035386 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.420180359 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.418191496 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432393376 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526599847 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043244819 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432065661 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.096912367 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.778265863 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682516838 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.432122853 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.415095746 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.428816593 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424767655 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148577082 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402418322 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422656435 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034622159 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.438747969 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.439792126 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.428257931 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.641046894 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635556101 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.425514143 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687162439 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440958776 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444773918 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.330771768 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19764868 seconds)
  done (took 1692.589392722 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.458097467 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.447771705 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.450916198 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.462127824 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.490291806 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.487498067 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.450148986 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.547102205 seconds)
  done (took 53.134858595 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.430541937 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.592795277 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.459375001 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.437807445 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.43943956 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.427441046 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.943568884 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.431523821 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.436533035 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.436170288 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.426296679 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.425595636 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.167414878 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.43627844 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.441915815 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.417091959 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.434835141 seconds)
  done (took 67.13186228 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.43864684 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.074197996 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.495826908 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.429662495 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.087576842 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.455304734 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.957356835 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.495436759 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.426396281 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.54121314 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.087651163 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.481633413 seconds)
  done (took 82.315437317 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.439519908 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.439694032 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.439515175 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.438689081 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.440070499 seconds)
  done (took 8.540751737 seconds)
done (took 2128.056462382 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.674839119 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.260595162 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.143021988 seconds)
  done (took 5.746719174 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.572898894 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.627015293 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.770366394 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.757938335 seconds)
  done (took 8.073172244 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.714760154 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.827369041 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.62283933 seconds)
  done (took 6.510034942 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.052489846 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.437684464 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.434200751 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.426352872 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.433565337 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.431548146 seconds)
  done (took 20.637337876 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.43299674 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.435155408 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.433484144 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.437563688 seconds)
  done (took 7.085426289 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.415813706 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.190879258 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.418363079 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.435068405 seconds)
  done (took 18.80499507 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.182803039 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.193264838 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.178043942 seconds)
  done (took 7.899894873 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.448863616 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.37305987 seconds)
  done (took 10.167501766 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.740145584 seconds)
  done (took 3.086219101 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.566071815 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.764521885 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.672470803 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.550231293 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.672702842 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.022234453 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.343496939 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.850757117 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.490403826 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.961800774 seconds)
  done (took 31.242402363 seconds)
done (took 138.197252603 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.740204942 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.454178188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.638609723 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.753660031 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.664627321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.639075784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.711128329 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.720211724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.219327914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.208220424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.719287721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.666265404 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.67015407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.453218932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.668073216 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.835393046 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.664527298 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.788297207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.403015673 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.443176197 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.71333357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.347274336 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.544983831 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.368978706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.667007041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.587312427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.930477573 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.835388972 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.432353673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.947663133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.586256457 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.432722814 seconds)
  done (took 200.802112864 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.434394837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.432356978 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.433001904 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.445404241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.43294705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.43457895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.43557685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.452902389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.435033276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.433728679 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.453532373 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.433319494 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.454292466 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.450249968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.435683206 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.433824057 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.434295607 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.455676145 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.45217354 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.43380527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.436224971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.434914389 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.434750986 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.460351302 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.434273756 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.453256497 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.453102338 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.455167763 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.454650445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.435623315 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.436341305 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.465478021 seconds)
  done (took 207.511690967 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.444288182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.445336156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.437404783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.434534609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.434453034 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.441776941 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.436249755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.446779735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.451789703 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.444222101 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.443965714 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.448752025 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.435751488 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.43579472 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.458415969 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.451021118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.435608653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.439716367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.449239255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.436248811 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.458248504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.436805513 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.436530978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.45557207 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.460753611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.440388793 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.466258631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.452800281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.43723769 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.43703348 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.441430727 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.440779367 seconds)
  done (took 207.567074235 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.633757034 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.442918232 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.445330284 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.399824387 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.44494641 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.443598362 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.44097113 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.644919973 seconds)
  done (took 15.247835126 seconds)
done (took 632.477156476 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.891877008 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.591705044 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.652550976 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.465249694 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.363203686 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.486200691 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.465852113 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.654510397 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.41826619 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.661024599 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.787287578 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.463142778 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.935058608 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.463927396 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.735774196 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.569027734 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.378359411 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.477416762 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.818000471 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.107522799 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.754671087 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.108000707 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.66147676 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.420935443 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.965748296 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.109932135 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.360266805 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.364523941 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.464753376 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.826337471 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.268049114 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.668757201 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.518436158 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.514252967 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.573362854 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.569860554 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.630031192 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.541540809 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.661213428 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.804662716 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.124702336 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.228587333 seconds)
  done (took 98.880211719 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.437469891 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.43686586 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.434795186 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.436976598 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.438703652 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.437436779 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.437604421 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.436048443 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.437758815 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.437488221 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.435865202 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.438883254 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.436550288 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.439307491 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.4362772 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.437751224 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.438830682 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.437844752 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.437753129 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.436827369 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.438048848 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.437734924 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.438456835 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.438114917 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.437977357 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.439871194 seconds)
  done (took 38.735308149 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.451424812 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.720240882 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.902461315 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.457394459 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.451787959 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.455640508 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.542641028 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.452824208 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.453547094 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.455775825 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.634863676 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.454785397 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.491727382 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.932020855 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.455673118 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.454039368 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.452086991 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.450620938 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.728426416 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.462593339 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.565837365 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.453356786 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.541541471 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.462281446 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.47685021 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.451980501 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.457024988 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.983952564 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.454904725 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.633749891 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.384936013 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.544370526 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.931442057 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.912034609 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.395713604 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.457425025 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.453188359 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.637256807 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.454027581 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.454245555 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.540994107 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.454837475 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.910565758 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.101271014 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.476733402 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.453620646 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.006940628 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.637523962 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.745114044 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.468401979 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.940590537 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.45809543 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.456943179 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.455930995 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.738826741 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.462307557 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.455394291 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.021939062 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.479810521 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.543361861 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.456805454 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.456919089 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.739537027 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.454319143 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.726586936 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.457710696 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.464477992 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.47849135 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.915318704 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.459602334 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.130453843 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.476324591 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.455275222 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.634538273 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.728232212 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.042703474 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.458715961 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.742176096 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944857658 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.544471301 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.45950871 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.974130001 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.548558513 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.460561388 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.459530924 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.457223845 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.455289305 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.509102536 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.542809752 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.050294626 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115547286 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.042415618 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.568194579 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.463355529 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.458206736 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.022859865 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.478830223 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.459067221 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.920280436 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.125364869 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.478307231 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.463730478 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.133295572 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.479906865 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.548101991 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.464188306 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.920892791 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.458239497 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.508510909 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.457462635 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.465049993 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.483531533 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.547824492 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.461873614 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.459294579 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.095013291 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.669427702 seconds)
  done (took 191.571819125 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.460884323 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.450768701 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.45309068 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.451482611 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.449215705 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.45693687 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.450846083 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.451541406 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.457621805 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.451778997 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.452198203 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.454658419 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.454135668 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.452687523 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.482208439 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.459776313 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.068512792 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.452543137 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.453739978 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.454002572 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.282576321 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.459522592 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.451700427 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.475752385 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.45384173 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.45414764 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.480970198 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.456182865 seconds)
  done (took 155.600585906 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.461922588 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.108668663 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.463881321 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.613048978 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.485780055 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.458726332 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.609357586 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.526901357 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.462301182 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.458188692 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.459217746 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.806817501 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.464100671 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.053305447 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.689030421 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.618937836 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.052596245 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.481361582 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.46042471 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.459522814 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.614041964 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.474595084 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.809659813 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.113315258 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.464786193 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.112755925 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.4534961 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.462956353 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.462256993 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.113429157 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.460693272 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.811708845 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.550092387 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.531073085 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.11349928 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.055175588 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.076795366 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.634024204 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.463846034 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.462305261 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.461349876 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.452780089 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.115899137 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.464537013 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.463785169 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.111279571 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.485080383 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.463553822 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.468403543 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.461867065 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.529986376 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.532576348 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.81753555 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.119779733 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.55288741 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.47621491 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.614127456 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.867148026 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.468768188 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.054525364 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.454314469 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.121485312 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.487042388 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.453093717 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.463550387 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.469816717 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.635784458 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.61669262 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.058211319 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.484743755 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.058468663 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.656271958 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.46500756 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.463514041 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.465326165 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.162029977 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.063068086 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.657310678 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.618818061 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.692161647 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.456224094 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.463848441 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.455764466 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.55364708 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.464016965 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.161343699 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.080303737 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.487536561 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.46606917 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.466644823 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.467044036 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.671958406 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.163667734 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.561258887 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.054466808 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.859671661 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.843229705 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.471125337 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.534234569 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.485263523 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.835526665 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.467945594 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.532076459 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.930935093 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.836409836 seconds)
  done (took 176.105343131 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.741324627 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.795355895 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.564698167 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.609089556 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.095313672 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.058791425 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.829432814 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.619585795 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.588580393 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.754631996 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.753990924 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.553737733 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.657850327 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.552340578 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.247560808 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.545645919 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.566545993 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.638887275 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.573823233 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.568270162 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.148749713 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.780296376 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.658517048 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.493317 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.568834196 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.323337771 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.072337547 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.01360594 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.657016134 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.891968059 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.034516764 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.665529462 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.527971476 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.193012894 seconds)
  done (took 70.723216611 seconds)
done (took 732.970906892 seconds)
SAVING RESULT...
DONE!
