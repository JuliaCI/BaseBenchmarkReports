cset: moving following pidspec: 9410
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.165143766 seconds)
loading group "string"... done (took 0.631029337 seconds)
loading group "linalg"... done (took 9.68073929 seconds)
loading group "parallel"... done (took 0.172523265 seconds)
loading group "find"... done (took 2.445714151 seconds)
loading group "tuple"... done (took 2.333400776 seconds)
loading group "dates"... done (took 1.402496295 seconds)
loading group "micro"... done (took 0.632347382 seconds)
loading group "io"... done (took 0.685708706 seconds)
loading group "scalar"... done (took 54.737497347 seconds)
loading group "sparse"... done (took 13.537643719 seconds)
loading group "broadcast"... done (took 1.343776049 seconds)
loading group "union"... done (took 10.32513534 seconds)
loading group "simd"... done (took 3.586591144 seconds)
loading group "random"... done (took 13.614697093 seconds)
loading group "problem"... done (took 2.193178057 seconds)
loading group "array"... done (took 23.84225103 seconds)
loading group "misc"... done (took 1.540651155 seconds)
loading group "sort"... done (took 3.787256956 seconds)
loading group "collection"... done (took 20.735692577 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.900795974 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.175839121 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.238499742 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.570976937 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.309256087 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.203264605 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200495747 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.182894487 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.693543502 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.235100218 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.191478819 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.401110504 seconds)
done (took 7.11311166 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.308843953 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.092312786 seconds)
    (2/2) benchmarking "String"...
    done (took 0.236533221 seconds)
  done (took 0.997057727 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.098812635 seconds)
    (2/2) benchmarking "String"...
    done (took 0.154132728 seconds)
  done (took 0.92107509 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.134431201 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.201928122 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.147895274 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.147347579 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.134878744 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.146737375 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.132479137 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.148285337 seconds)
  done (took 1.727314347 seconds)
done (took 4.755917145 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.541647789 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.925352449 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.556636078 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.220966577 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.345888887 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.35931762 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.373506855 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.271975647 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.134371767 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.09663261 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.252699453 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.47285601 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.463993292 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.967766781 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096361625 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.149628246 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.197514293 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.800353383 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.122301866 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.158432089 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531883768 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.251962278 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.155805287 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.150900475 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.225878864 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.164589855 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169240516 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.14671747 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.726750517 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.177355514 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239042619 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.1216837 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168768249 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.2056119 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.277957204 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.149977032 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.782427221 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.239532904 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124149586 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.140897596 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.7657765 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.164607665 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.247324887 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.144409635 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112185635 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180752385 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.140054751 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.116607635 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.14995601 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.142445558 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211756187 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.530543724 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.147809998 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.239587171 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.147916785 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.758789648 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.140101405 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.327604649 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.166883023 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.149911452 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.130637912 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.126681752 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.214372303 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.13283421 seconds)
  done (took 22.941028465 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.245587445 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.24725316 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.119888989 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.204068409 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.182371934 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.119160404 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.144265762 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.117830487 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.169229411 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.221271365 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.182269617 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.253341364 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.133460128 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.133840484 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.222215269 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.290696393 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.146702943 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.162855486 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.128770705 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.151472754 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.181539426 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.136637138 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.151020741 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.137691253 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.212975268 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.245218753 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.165280515 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.167677607 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.147607318 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.141104815 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.185203649 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.20289717 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.116597718 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.143343996 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.217072646 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.163173054 seconds)
  done (took 6.985362595 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.275681147 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.144598975 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.308055654 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.226344775 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.167006782 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.231641817 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.218095681 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.327855868 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.3356086 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.222748438 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.167516413 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.136574769 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135666414 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.12059222 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.117441401 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.880629653 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.211859693 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.199362363 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.226840648 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153482716 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.121724907 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.258889066 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.143996524 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.125258597 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.156270221 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.151507604 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.715028915 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.264632186 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.153184912 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.5155752 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124082259 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155721338 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.16875917 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.23716759 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.162009638 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.176065685 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.151419115 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.126139923 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.249506379 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157353669 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.118759375 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.139710573 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172743056 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.160481441 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.150460195 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1596636 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174500054 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.126474463 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16771162 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.125905955 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.237470561 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.240184802 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.226842044 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.128654419 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.319312672 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.166037106 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.142039431 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.152815941 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.904109105 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.165641036 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.144002251 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.122523751 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.154017421 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.139284053 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.970613512 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.159781212 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.629028663 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.126869555 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.201432947 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152419731 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.155731954 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.125676596 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.144407469 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12744379 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.164796654 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.126002475 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139659869 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.126336177 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.138811786 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.131162908 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.163193448 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.125536565 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143102415 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.122540094 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.205719527 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.141506263 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.167607487 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.169231716 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.131930254 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.142392828 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170518961 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122921427 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.145319387 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.244698505 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.139646809 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.164487327 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153547598 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.169112217 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.146006766 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.355604997 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.126357199 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.181360284 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.140725507 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156110215 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.154401548 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123328671 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144232098 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.121478507 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.143361527 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.191818457 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.145982251 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.124667599 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.147387667 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.136047608 seconds)
  done (took 33.633161941 seconds)
done (took 64.229428548 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.500412936 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.111878473 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.13125894 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.111814428 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.13398708 seconds)
  done (took 1.738377974 seconds)
done (took 2.470510461 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.229295709 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.334505806 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.244337845 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.158109003 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213773273 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.208128003 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.193884432 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.205918713 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215538652 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.212734035 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.141064027 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.233875411 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.221134405 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.1927984 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.142577558 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.243647394 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.190359822 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212002868 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.238550377 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.148548988 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.143023146 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.165358598 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.147866988 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.148349801 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.147105648 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163925873 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.150520817 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163721169 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.140199044 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.150175592 seconds)
  done (took 2.410415459 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.16920762 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144727901 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.142063736 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.157563123 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.145845781 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.149241534 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.144381768 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161974438 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.152007319 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164815092 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.141111101 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.151515496 seconds)
  done (took 2.399453381 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.122900125 seconds)
done (took 9.895483287 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246459902 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.023399764 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.200195919 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.311011687 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.388896102 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.321193778 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.672647688 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.249683846 seconds)
  done (took 16.268094568 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.267528434 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.137721493 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.159594317 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.135762795 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.15591878 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.141924612 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.153631896 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.136866217 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.159000526 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.140027653 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.138632434 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.161272254 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.142012332 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.163508712 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.142027489 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.161501334 seconds)
  done (took 3.303004035 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.184489941 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.182393236 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.14205298 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.164655016 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.140247303 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.163938655 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.149812835 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.16224682 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.140421907 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.160065955 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.150008461 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.163876007 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.144432123 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.159375714 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.145226359 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.182830862 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.140923367 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.164820959 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.16361054 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.165738534 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.16424847 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.145135425 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.163763283 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.146906949 seconds)
  done (took 4.609101129 seconds)
done (took 24.925929548 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.200763589 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.150737325 seconds)
  done (took 1.108481044 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.214563389 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.233372205 seconds)
  done (took 1.20878472 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.156115872 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.153298545 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.167309334 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.169473576 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.139532549 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.157203161 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.16277901 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.156062583 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.137303494 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.157527085 seconds)
  done (took 2.322110235 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.139525005 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.157744082 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.152613681 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.224637225 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.165892324 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.142692517 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.162418839 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.143705006 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.16313995 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.140216294 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.162551188 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.158656838 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.162155886 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.159188191 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.162744019 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.144291323 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.16753995 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.143373679 seconds)
  done (took 3.618512522 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.139495532 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.140957799 seconds)
  done (took 1.049014543 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.140132066 seconds)
    (2/7) benchmarking "second"...
    done (took 0.139009856 seconds)
    (3/7) benchmarking "month"...
    done (took 0.162200584 seconds)
    (4/7) benchmarking "year"...
    done (took 0.159476495 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.141110402 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.137316205 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.158299879 seconds)
  done (took 1.805275517 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.598141914 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.277424524 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.409363998 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108489145 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.160278622 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.387422032 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.160201377 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10715343 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108975171 seconds)
  done (took 3.116694099 seconds)
done (took 14.992832469 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.135007532 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.329526052 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.652579214 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.173957736 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.134451245 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.21273215 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.389529493 seconds)
done (took 2.804877632 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356077264 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.215094462 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.124793173 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.142426841 seconds)
  done (took 1.605293662 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.129385377 seconds)
    (2/2) benchmarking "read"...
    done (took 0.145681305 seconds)
  done (took 1.051202111 seconds)
done (took 3.43249138 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.155532697 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.155079148 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.141170116 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.159279822 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.142136651 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.160031523 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.141829698 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.158423289 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.143500091 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.158793726 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.143271781 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.161345657 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.140336701 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.161188026 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141607043 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.284529269 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.145041069 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.158594539 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.142037825 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.162186685 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.143182942 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158015974 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.143537526 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160372628 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.143530682 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.162209035 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.140736402 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.159603257 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.144788524 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.161639549 seconds)
  done (took 5.442835643 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.140806942 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.133175734 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.15761306 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.14743034 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.155583612 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.13834364 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.15589699 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.142607381 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.160717085 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.139625716 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.159258032 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.139898516 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.158511777 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.141847018 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.160220864 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.143920047 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.167215049 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.138015735 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.156891808 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.13918404 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.158805879 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.136779125 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.137984237 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.159104869 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.137785678 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.15655692 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.137392611 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.156651834 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.140509767 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.157854641 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.139270922 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.156176844 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.13532035 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.162013829 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.138030821 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.152220405 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.140714472 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.148286035 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.136940319 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.130846248 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.149721414 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.134093658 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.153846938 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.139480237 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.153957287 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.135289271 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.152498164 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.136839329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.153491726 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.137828071 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.149385477 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.135774109 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.154609884 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.137259075 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.156564113 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.133767988 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.134654693 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.151403052 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.136474478 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.153702437 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.131411474 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.150762608 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.139816872 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.156096107 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.150256188 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.160945258 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.135767545 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.156493015 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.137305659 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.158926774 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.138764503 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.164008007 seconds)
  done (took 11.34978673 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.136621074 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133990363 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.157125358 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.13814997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.15770553 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.138426192 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.15370104 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134766859 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154157941 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135568636 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156794799 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.136308954 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15539951 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.139532688 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140652384 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.162424774 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.139195215 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.160488914 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.140314351 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.158840869 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.140268116 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.157200158 seconds)
  done (took 4.017722226 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.283337637 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.141320484 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.20404571 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.149451058 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.17361691 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.16698583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.14094844 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.159402952 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1400683 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.165319766 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14430613 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159850146 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.155797815 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.166188522 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.166412363 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.146460384 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.159736584 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.146839273 seconds)
  done (took 3.763491922 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.136727792 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.133763867 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155928138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.134714826 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.156399288 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.138672732 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.161385117 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.141782694 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.160805434 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.141048732 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.160541574 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138936103 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.14026197 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.161856127 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141168021 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.162134934 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.139891044 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161976393 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141622968 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.159550597 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.141343812 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.159886533 seconds)
  done (took 4.068623531 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151252614 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.159279822 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.159917263 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162292845 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.142557863 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.160849994 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.147655229 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.161609518 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.147793236 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.16063593 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.140188637 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.157904927 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.154959091 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.161796832 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.147107952 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.162600216 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.142608009 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.160324577 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.141933761 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.139539951 seconds)
  done (took 3.860974709 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.230642597 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.174444878 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.175184358 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163277537 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.17628366 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.153829618 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181290232 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.154961186 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.177852924 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.182950778 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.155494355 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.1760154 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.163176546 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.177755146 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.152571008 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180721445 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.164008076 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.182019376 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.172023901 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.154905732 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.184257091 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.154160945 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.182407344 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.154812144 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.174657196 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.17565404 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.156172304 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.180904011 seconds)
  done (took 5.616003474 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.150092271 seconds)
    (2/2) benchmarking "in"...
    done (took 0.164983061 seconds)
  done (took 1.118243318 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.13956677 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141628974 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.165335201 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.141931527 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.162770838 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.139691018 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.159223949 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138700599 seconds)
  done (took 1.991917408 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.249864944 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.256119581 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.143350003 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.168039246 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.254718145 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.234747519 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173763158 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.163559626 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.139009856 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.152023242 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.24791323 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.128980508 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.159072743 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133984706 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.158431809 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.142487533 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.160068959 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.145469337 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.1648563 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.140019132 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.164642236 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14187677 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.160945117 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.157565637 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.153589364 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.139807234 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.161767708 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.150888601 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.161939657 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.139544142 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.158115079 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.139423456 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.163376642 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.142123101 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.161649886 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.25754099 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.145407388 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.157790666 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.138138586 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.16627743 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.184409484 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.141535596 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.162826851 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.137865367 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.161408234 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.143877445 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.164088674 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.14024877 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.130104324 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.15634998 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.138715545 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.15547878 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.138379539 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160229803 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.138903208 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.165648928 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.140687514 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.156000983 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.13563757 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.156018025 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.136295335 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.155550717 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141535387 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.163737581 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.140813576 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.161066571 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.137489201 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.160438629 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.141355685 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.164513518 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.138325481 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.176347286 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.139588421 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.164571486 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.143748657 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.164069887 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136280319 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.16555534 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.137096833 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.161534578 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.146504873 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.185737237 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.140887609 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.155526551 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.134970306 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.168184725 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.141992148 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.164303506 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.133165816 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.168792763 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.141240587 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.162679207 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.133241735 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.161547988 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.138494148 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.168112649 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.136554237 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.167503564 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.139817151 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.166997424 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146714187 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.159384025 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.140720548 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.167782719 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.145861356 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.16000659 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.210918791 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.13773602 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.156733828 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.143080276 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.165765423 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.135704827 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.139356199 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.160934641 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.137222059 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.157177809 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.144892307 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.161980863 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.141218936 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.166852154 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.142426771 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.163700914 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.142019108 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.171935411 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.139222244 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.168159443 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.149220931 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.163060051 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.142041177 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.164463861 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.141436212 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.16126981 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.14406825 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.158687079 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.14469375 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159061567 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.140331951 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.163222363 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.144814923 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.161173778 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.135884947 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.159768432 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.140615786 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.161332457 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.143542067 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.16195621 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.13683877 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.154648856 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.141625342 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.157722292 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.142608289 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.17076145 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.137045849 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.165484522 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.138273171 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.170005837 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.138146548 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.166843214 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.143540111 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.169133658 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.146243527 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.153470144 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139274345 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.165276954 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.142807266 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.15859447 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.14334658 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.161812546 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.149101084 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.15525389 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.146832499 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.154004849 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.138950421 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.145045609 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.164999055 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.14411281 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.15817151 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.173511729 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175677228 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.14592093 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.162025911 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.13981359 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.166678877 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.139719513 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.166067976 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.147609064 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.167630325 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.13832618 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.161175942 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146767197 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.15885414 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.143371025 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.162217346 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.142599978 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.155959986 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.143551355 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.155314933 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.146120327 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.163970433 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.145787882 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.1681475 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.14437618 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161257098 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.150029693 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.159258101 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.14479027 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.157010749 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.147157121 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.17545646 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.147796449 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.167789423 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.14394533 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.160579707 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.144229653 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.170851685 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.144877013 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.162534147 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.143837006 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.155933097 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.13568569 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.168264624 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.145066772 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.157668304 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.143176656 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16303414 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143915158 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.159175828 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.136199163 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.166508255 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.148189794 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.157363238 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.143955108 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.158582736 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.140945717 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.169122345 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.136043208 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.159501218 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.145269102 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.166907468 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.143654371 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.161508666 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.145325394 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.168036313 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.147442073 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.144476822 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.160513987 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.149463699 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.161465854 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.142422161 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.159760609 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.144686206 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.157224393 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.142578955 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.163131848 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.138324783 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.159832127 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145684937 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.169644268 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.147252315 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.16169675 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.145964861 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.168514796 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.147244772 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.161015587 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.147206778 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.159013308 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.13531616 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.160351815 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.135506687 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.164047328 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.138364453 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.167963398 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.141391095 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162304229 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.146603908 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.165188464 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.140886561 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.168524364 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.15385909 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.158133168 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.136349951 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16078532 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141963653 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.160646407 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.140018015 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.166648077 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1454282 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.167536319 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.144786917 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.160570699 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.143101438 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.171828695 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.139892511 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.16980183 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.149741667 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.168282014 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.140085133 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.167226363 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.139616917 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.167516414 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.1377495 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.162864006 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.142562752 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.163725708 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.140085342 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.162143524 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.139669437 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.156024939 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.139677888 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.169313779 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.143684263 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.166841747 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.143481374 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.161618666 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.140322593 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.15922779 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.150161134 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.160645778 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.149502112 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.142681622 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.157068507 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.136733798 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.169668154 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.14247971 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.169624992 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.137295741 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.168387824 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.149347693 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.167989868 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.143037882 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.172730485 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.150819109 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.170060033 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.146833756 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.158042863 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.14086945 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.168361004 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.143353355 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.16565228 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.144178879 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.157949066 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.144727204 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.168939221 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.144644092 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.161781956 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.137239798 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.164914896 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.149620004 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.167353055 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.147596213 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.165852375 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.144375972 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.158331377 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147563667 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.169437329 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.145307026 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.168851779 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.145095685 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.147277458 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.161723638 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.148761515 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.167175868 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.138665399 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.158945631 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.139951456 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.171511265 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.137737417 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.169333893 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.148700125 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.162496502 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.14163065 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.168863722 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.140792764 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167688783 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.149469776 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.163266642 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.152801903 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.166507137 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.141620174 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.169249246 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.149061344 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.159029929 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.142086993 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.163370635 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150774481 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.16331155 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.148838969 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.164928096 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.148927388 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.168619068 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.148778765 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.170289951 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.150002594 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.158839053 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.151492169 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.166741456 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.146549921 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.160524952 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.143374447 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.137875913 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.165505893 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.148826537 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.164225423 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.150984493 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.170183443 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.162875042 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.143977876 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.148890512 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.165302236 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.149681884 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.163686388 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.145364924 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.160172393 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.145147369 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.166309626 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.150820785 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.162740527 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.138076707 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17160185 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.148887369 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.170474123 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.146156994 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.174929368 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.138666866 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.160348743 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.147353934 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.164071703 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.154352589 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.169588116 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.142464136 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164449893 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.147023584 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.168450332 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151301014 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.16108913 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.142186657 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.167089893 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.146346473 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.164554166 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.139972688 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.170332554 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.144433451 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167484427 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.144612384 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.160186152 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.143407831 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.17274557 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.143652625 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.163657752 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.143145717 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173694992 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.144578301 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.163318744 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.139289291 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171488218 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.149250823 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.173747164 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.142030631 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.165868229 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.143108632 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.169192116 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.152263357 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.163513251 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144866397 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.165280515 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151773979 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.170286459 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.138072725 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.163909112 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.157561308 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.171915577 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.147489006 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.169038186 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.144834549 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.174806167 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.153402887 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.168713564 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.141161875 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.139930154 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.165702217 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.139357526 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.169435792 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.150400271 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.166796281 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.143183012 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172644021 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149787763 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.170556605 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.147245121 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.162130394 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15192763 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.164655785 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.147908473 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.161793479 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.140586313 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.170067786 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151939643 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.167405436 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.14646206 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.169025335 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.149801661 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.161878896 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.143754873 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.171001075 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.150364931 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.172461735 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146613966 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.164637067 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.149875973 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1773398 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.149018251 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.166010916 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.153921529 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.17266658 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146854918 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.165983816 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.149479762 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.173204358 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.149932194 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.173292078 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.144461527 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.166834623 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.154392678 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.174135203 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154728824 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.166577189 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.140957589 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.171778548 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.14436312 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.140667679 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.171064421 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.152639103 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.175457508 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.145631438 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.166873246 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154695929 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.174746523 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167981277 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.144783565 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.165227715 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.151529604 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142526295 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.172462504 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.14361973 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.17541665 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.15319057 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.175401425 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.154621967 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.165085029 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151414786 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.171088725 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.154633002 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.170236173 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.140730047 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.164034197 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.14971415 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.175277876 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.15385483 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.171975011 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.151890544 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.173370789 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.147020023 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.168584707 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.145214207 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.175094892 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.153207541 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.1696743 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.14977994 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.167524376 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.147242956 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.170331786 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.153996469 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.175593 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.148504849 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.17851914 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.154344139 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.167853887 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.144773089 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.167990077 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.149588854 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.170090904 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.151978824 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.144010981 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.164588318 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151997401 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.175466237 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146832848 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.176399666 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.153592158 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.168577652 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.149464887 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.177513355 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.150663432 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.172412009 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.147601172 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.172490161 seconds)
  done (took 93.694392285 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196329506 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178505241 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.149253268 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172504199 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167512433 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.17578178 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149923534 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173758339 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.151353954 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.181563801 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.149859839 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171217653 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.165773664 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.194329949 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.190138635 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159859854 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171202288 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151760151 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.17028143 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.151767903 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.185347801 seconds)
  done (took 4.460682955 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.150002246 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.148648931 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.172413825 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149582988 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.171857399 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.150083261 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.172567755 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.150256817 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.172367031 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149807458 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.172093462 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150986589 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.14902335 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.173203939 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149092772 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.172642904 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.1498377 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.172300542 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.149916551 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.172153107 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.15048436 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.17251698 seconds)
  done (took 4.425480642 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.174363094 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.152258608 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.172525082 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.15041396 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.177136212 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.149101083 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.177429546 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.150246899 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.184497414 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.145717832 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.163968337 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145080321 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.171315501 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.151708887 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.169517018 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.151037572 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.182155427 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.153855459 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.178629419 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.15143937 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.162919671 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.151261135 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.150696189 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.165851677 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.155507345 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.179197997 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.154825554 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.176883457 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.142206002 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.176595642 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.150785236 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.167050922 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.142377254 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.164727931 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.142480549 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.176478168 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.154234697 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.172883996 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.153690703 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.142533488 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.175840587 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.153707116 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.166404051 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.151262881 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.174799672 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.145033876 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.176737558 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.150642341 seconds)
  done (took 8.637832716 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.17980415 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.212588487 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.153587129 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.205177767 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.190024164 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.161353829 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.177856137 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.180722702 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.178027108 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.155448538 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.191307708 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.164634972 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.179558797 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.156880773 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.180216493 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.154639357 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.180632398 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.153015478 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.182727776 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.153972932 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.181894919 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.179105528 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.166337283 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.187930532 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.157478825 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.178248295 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.154552405 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.18063142 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.164162217 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.184618868 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.158828507 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.182605484 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.186519389 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158583993 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.176186092 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.158502139 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.189279307 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.157335441 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.178846346 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.154756621 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.178403413 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158807415 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.180678283 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.168120262 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.180191769 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.157171803 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.180540626 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.153049351 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.188333097 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.155705275 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.184781459 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.165906293 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.181832969 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.178066219 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.159832685 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.189070411 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.157022202 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.177726022 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.159054584 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.187780024 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.155252355 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.180672906 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.166704858 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.181003045 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.161286571 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.190144012 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.15684746 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.181440531 seconds)
  done (took 12.747712053 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186912317 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.183173503 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167780065 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.190418208 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.160564273 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.182890715 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.158839193 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.183529064 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.159372292 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.43766648 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.181550461 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.293445277 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.163118159 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.187925014 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159987733 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.184462004 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160207384 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.18261156 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.159323822 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.184764836 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.160526069 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.192033848 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.158485308 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.191344933 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.193529918 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.156765885 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183223649 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.161047505 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.191364139 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.160678323 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.194830222 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.159310832 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.182473274 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.191597549 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.171169952 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.183828893 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.155671891 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.183032912 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.160070774 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.183476614 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.158075967 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.191590216 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159584888 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.180799109 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.161091645 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.183457966 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.168778586 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.194644026 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.18998673 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.165776668 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.184733757 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168101683 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.183944062 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.158746793 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.191773339 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.197508985 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168470027 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.191605231 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161240616 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.192760895 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.190270145 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.176950225 seconds)
  done (took 12.231555284 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.15677224 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.154041167 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.179470308 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.155350621 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.179170201 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.154674208 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.17864681 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.155779027 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177794188 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156029199 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.179593857 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157083034 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.176960911 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.157756933 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.154962164 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.179420302 seconds)
  done (took 3.590619729 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.174001317 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.195348864 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.257368133 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.159867187 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.179010124 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.163315182 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.179495102 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.15916647 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.154609745 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.186126182 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.159987943 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.181778493 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.196084781 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.158728076 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.178692835 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.159723942 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.177278829 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.160220514 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.155170291 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.260833727 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.186278088 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.157635688 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.181894708 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.158929917 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.182608487 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.160078387 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.189679917 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.156099878 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.183786639 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.155297053 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.182434093 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.162207917 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.180160271 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.160974939 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.182392678 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.157132901 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.180680378 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.157407796 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.182921166 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.156106932 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.18246203 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.157523104 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.181782405 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.158338641 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.178333082 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.156812748 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.178733692 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.161718889 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.180738836 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.158493339 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.181024556 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.161548266 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.184677814 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.165172541 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.187905529 seconds)
  done (took 10.526807145 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.168772998 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181356023 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.16948049 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.177961667 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.157979447 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.181095864 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.160562946 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.158480279 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.183336582 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154905872 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.184317503 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.158760342 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.182994988 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.15771398 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.183260735 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157715098 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.180247712 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157258196 seconds)
  done (took 4.002497734 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.156673834 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.154808723 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.180832353 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154689155 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.180550753 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.154755364 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.178472416 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.15486264 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179526879 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.156146253 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177837838 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.156541695 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155590387 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.180677934 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.154257955 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.180403946 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.155721338 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.179593718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155877713 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.179001883 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156478279 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.181002138 seconds)
  done (took 4.61468515 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.169483005 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.285057269 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.187532228 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.295021804 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.153464487 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.179345572 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.162429734 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.179352556 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.192316006 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.154417751 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.175877254 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.154579713 seconds)
  done (took 3.238283164 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185718938 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.216510284 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158212647 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182248245 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167502586 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186512405 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161835105 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185831452 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170069951 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197555708 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.184461725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171817939 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19357748 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170639157 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191208253 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166521175 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186877745 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161583188 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182831351 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200420808 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163801067 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195973524 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161994203 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184679979 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162159518 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194545549 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170724923 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196959753 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1852781 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172009024 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19074765 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162669429 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194930305 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17335291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.18398422 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170355881 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188028589 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201738364 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167509849 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196518566 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.16027974 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19129765 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16956884 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19142099 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194129086 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164534541 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191925314 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163495302 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18797572 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181593343 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192156139 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193313828 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169096433 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194432825 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170642021 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.206982257 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197993334 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171455811 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194744806 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17354239 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195996572 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16611889 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195390001 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198385562 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16823089 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196017524 seconds)
  done (took 12.979830397 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197829486 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.185019198 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164068559 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200135855 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169917418 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188919345 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162074241 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188376399 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163283473 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.185039872 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.229666496 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163635055 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197329353 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171287215 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188883237 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163094064 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187975091 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195041492 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161484013 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.208124441 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164971397 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196775303 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170765291 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19577301 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19872122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168255475 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187269694 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164673314 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188346507 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164038457 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19475228 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164481949 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196809385 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.161215613 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197553544 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188629573 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165338692 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193431581 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164672128 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192841701 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172158834 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.203824173 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163123328 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188744113 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199626224 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16435854 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188006241 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161913956 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187744615 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162188292 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.2010315 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176151311 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199757945 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197048521 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165535156 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188677415 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165467131 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189004622 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16525635 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193884921 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170569875 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190060901 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.210526492 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16490861 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.188678532 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172923736 seconds)
  done (took 12.989737382 seconds)
done (took 230.146213572 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.322257181 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.352933149 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.149122943 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.523832885 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.149191039 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.867071085 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.880841971 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.232924802 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.177943578 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.150034093 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.176930111 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.168554814 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.58421235 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.173027171 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.152971198 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.190580101 seconds)
  done (took 32.216821078 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.353971828 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.402920023 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.16609661 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.181358118 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.156306818 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.183036544 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.152365675 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.182939674 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.154634119 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.187858176 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.177048353 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.15492871 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.184511522 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.154316411 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.178455515 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.157677523 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.1847985 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.158586019 seconds)
  done (took 4.446623764 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.175131139 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.22976127 seconds)
  done (took 1.389541645 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.186090005 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.275511711 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.379786913 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.22859974 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.178358784 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.198863976 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.227461607 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.169869856 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.26962004 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.167326236 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.194255359 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.17725159 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.182889458 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.184990913 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.173652041 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.178239775 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.183954329 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.196441041 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.169933691 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.184065865 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.180268314 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.182587325 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.161416266 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.196423861 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.261415715 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.168655455 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.185065992 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.156389161 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.18371603 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.16969616 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.191278863 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.171388414 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.194079359 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.238475996 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.158248615 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.234322745 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.18595584 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.155816044 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.197675557 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.157008025 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.186113122 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.183536747 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.168792135 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.178243825 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.15695746 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.1844949 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.15668403 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.180625483 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.165597874 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.183814087 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.164830528 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.187760539 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.233890357 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.159957911 seconds)
  done (took 11.307410321 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.999494838 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.202991665 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.182118829 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.153524411 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.203721926 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170176948 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.017816023 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.182212137 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.313018437 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.09079269 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.200017544 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.167421919 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.327954623 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.316719047 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.368570263 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.416837574 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.848969202 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.195408368 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.186800081 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.224392432 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.18768511 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174245551 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.198326058 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516903511 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.158050965 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.181145033 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.163634775 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.189706317 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.238522929 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.157915543 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.187096278 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.26140922 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.357013765 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.274209241 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.157090507 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.182065541 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.156778596 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.24710789 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.35463099 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280611661 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.251659027 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.154749846 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.180928385 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.161989594 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.196258896 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.154598012 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.242629248 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.253600475 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.253927752 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1874517 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.166273169 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.189668253 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.160824361 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.238821711 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.181262785 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.423081804 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.452926311 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157582818 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.188731751 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.171028592 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.352241231 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.161197454 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.298203773 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.204800764 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.274342569 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.182050245 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.874291557 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.24890777 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.156756456 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.189399364 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.161809613 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188750469 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.185096373 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.22121172 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.494841069 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.188961948 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.164284858 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.181915522 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.291193804 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.157986291 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.182952316 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242577984 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.159304825 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.188746069 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166294541 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.189473536 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.252897663 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.337481114 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165236935 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.190893828 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163603625 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.194982826 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.158429923 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.293319004 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.318893764 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.238532568 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.294060928 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162304298 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.243859432 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.249076018 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188519225 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.25211537 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.162564527 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19618647 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161212679 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.313066348 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.195549308 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186589719 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.163242686 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.190497409 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.224849333 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.162415137 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.210600036 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.252737656 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.556396382 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.248733934 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.156061954 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.18774678 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165208299 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.24246561 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190253384 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.325665505 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16619774 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.247436284 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.190553701 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.154885897 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.189820298 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.247109217 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.165958255 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.19075184 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.187932209 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.169606135 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.343905883 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.283427103 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192638114 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310268087 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.257555727 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.163598457 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.258089174 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.19209426 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.250778817 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.167762255 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188807529 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.159196641 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.930890234 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.169283678 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.191039028 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.16403755 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.267765265 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.184665872 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.162552095 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182283026 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.158069333 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.869157942 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.189549733 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.156515085 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.186477554 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.164613112 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.19106452 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16382202 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.190884469 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.244468658 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310487668 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.194093886 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163448718 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.186913224 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.241842626 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.159883809 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.18511111 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159834851 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.185220271 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.166648985 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.19085346 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.161928343 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251748913 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.240409203 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.318507822 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.630782029 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158434463 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187091529 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306030327 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.185308062 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.389979969 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189431142 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.300833228 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.248717522 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156582621 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.448978812 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.247378175 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.26674237 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.164157746 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.255491847 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.156635841 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.192854063 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.244662956 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158543485 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193307613 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.240400263 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167353684 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.191586444 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.32589661 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.188035225 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311578309 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.157112926 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.253529307 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.187221085 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.164217112 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.417752845 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.160782667 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.198007861 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.243945477 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164646356 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.185630659 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.041010802 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.159595994 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.196642254 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164225772 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.326827595 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.246791928 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.167681169 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.19361261 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.169003405 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.244783851 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.293475868 seconds)
  done (took 61.677244573 seconds)
done (took 112.013754336 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32063386 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.227428292 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.424602668 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234350052 seconds)
  done (took 2.290347816 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.339261997 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.211289019 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.295986172 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.183946856 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.303064866 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.157090926 seconds)
  done (took 2.523266751 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.23015308 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.227900629 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227002331 seconds)
  done (took 1.724273526 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269961075 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.270831438 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.4134421 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32491108 seconds)
  done (took 2.379260869 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.337608924 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.176308034 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.217659383 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.289214082 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.305602619 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268775799 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.18253662 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.237693005 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.21633617 seconds)
  done (took 3.302138281 seconds)
done (took 13.256100794 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.465244009 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.353467365 seconds)
    (3/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.44252457 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.322443308 seconds)
    (5/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.234978275 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.210874441 seconds)
    (7/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.165662756 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.199270033 seconds)
    (9/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.415557663 seconds)
    (10/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.168779144 seconds)
    (11/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.471630366 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.469237114 seconds)
    (13/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.373348315 seconds)
    (14/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.19600188 seconds)
    (15/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.4710342 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.206638987 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.164298197 seconds)
    (18/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.252387471 seconds)
    (19/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.447605663 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.179167058 seconds)
    (21/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.199771912 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.186288005 seconds)
    (23/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.287565758 seconds)
    (24/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.157723549 seconds)
    (25/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.249119598 seconds)
    (26/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.253422939 seconds)
    (27/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.204579228 seconds)
    (28/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.290977156 seconds)
    (29/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.189629142 seconds)
    (30/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.243586492 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.251704634 seconds)
    (32/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.283643123 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.182881985 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.200179087 seconds)
    (35/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.193385416 seconds)
    (36/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.19883988 seconds)
    (37/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.19636282 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.191469809 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.170958263 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.208810283 seconds)
    (41/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.15059862 seconds)
    (42/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.195628089 seconds)
    (43/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.2346811 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.207108181 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.320797079 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.127514191 seconds)
    (47/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.130297575 seconds)
    (48/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.219859383 seconds)
    (49/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.360145728 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.284632285 seconds)
    (51/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.154490735 seconds)
    (52/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.136607246 seconds)
    (53/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.169626808 seconds)
    (54/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.161423879 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.163595525 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.188437161 seconds)
    (57/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.162138286 seconds)
    (58/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.305441774 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.164356026 seconds)
    (60/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.204246503 seconds)
    (61/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.216114773 seconds)
    (62/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.197261328 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.208126816 seconds)
    (64/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.131194966 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.26919331 seconds)
    (66/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.136722693 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.240566346 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.212598334 seconds)
    (69/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.131412521 seconds)
    (70/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.15503424 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.165659334 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.190093936 seconds)
    (73/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.172801653 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.167044636 seconds)
    (75/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158491175 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.177137331 seconds)
    (77/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.156435536 seconds)
    (78/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.300045837 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.211658899 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.167338319 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.211879318 seconds)
    (82/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.225623873 seconds)
    (83/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.139266453 seconds)
    (84/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.164564712 seconds)
    (85/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.131503664 seconds)
    (86/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.268783062 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.163270133 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.170542986 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.198872985 seconds)
    (90/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.192311466 seconds)
    (91/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.218267491 seconds)
    (92/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.16554235 seconds)
    (93/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.224744851 seconds)
    (94/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.130376566 seconds)
    (95/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.162171531 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.213718379 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.163945779 seconds)
    (98/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.210706194 seconds)
    (99/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.245126562 seconds)
    (100/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.16382621 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.137855659 seconds)
    (102/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.200566636 seconds)
    (103/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.238428015 seconds)
    (104/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.226827239 seconds)
    (105/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.131363772 seconds)
    (106/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.213915401 seconds)
    (107/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.249402595 seconds)
    (108/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.158738971 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.165309429 seconds)
    (110/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.204014491 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.16819136 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.190961714 seconds)
    (113/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.205818212 seconds)
    (114/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.136609271 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.194052889 seconds)
    (116/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.133632775 seconds)
    (117/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.13587482 seconds)
    (118/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.1669815 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.17199771 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.190517593 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.164577144 seconds)
    (122/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.136683303 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.247109845 seconds)
    (124/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.229118033 seconds)
    (125/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.161949715 seconds)
    (126/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.158636863 seconds)
    (127/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.172540097 seconds)
    (128/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.258208324 seconds)
    (129/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.131309226 seconds)
    (130/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146775787 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.131576369 seconds)
    (132/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.193327028 seconds)
    (133/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.164447867 seconds)
    (134/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.164606756 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.184549865 seconds)
    (136/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.212458372 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.183934493 seconds)
    (138/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.201852554 seconds)
    (139/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.139008529 seconds)
    (140/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.171054503 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.200712604 seconds)
    (142/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.132182242 seconds)
    (143/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.189295441 seconds)
    (144/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.132946585 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.142011145 seconds)
    (146/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.138330859 seconds)
    (147/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.191244431 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.164100966 seconds)
    (149/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.164081829 seconds)
    (150/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.163633099 seconds)
    (151/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.216461185 seconds)
    (152/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.172635431 seconds)
    (153/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.198301683 seconds)
    (154/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.17120571 seconds)
    (155/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.137026154 seconds)
    (156/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.157295142 seconds)
    (157/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.13426421 seconds)
    (158/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.200608122 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.196013055 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.162333632 seconds)
    (161/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.157587847 seconds)
    (162/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.131906579 seconds)
    (163/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.134150788 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.130255461 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.201895786 seconds)
    (166/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.282348544 seconds)
    (167/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.139195494 seconds)
    (168/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.133065734 seconds)
    (169/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.130526585 seconds)
    (170/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.219259865 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.220479364 seconds)
    (172/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.207173971 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.165244197 seconds)
    (174/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.165462312 seconds)
    (175/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.133244248 seconds)
    (176/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.133891467 seconds)
    (177/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.165136572 seconds)
    (178/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.131498426 seconds)
    (179/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.172596948 seconds)
    (180/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.165364045 seconds)
    (181/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.135356109 seconds)
    (182/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.174390124 seconds)
    (183/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.164218508 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.185096373 seconds)
    (185/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.201184802 seconds)
    (186/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.139946218 seconds)
    (187/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138313259 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.192170387 seconds)
    (189/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.133338115 seconds)
    (190/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.130966724 seconds)
    (191/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138102967 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.167444617 seconds)
  done (took 39.086540894 seconds)
done (took 40.127020343 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.315932704 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.157465275 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171914948 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.201359754 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.299867392 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.184671039 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.221162202 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.173491056 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.213666067 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.172170707 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.192030076 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186886685 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.20175317 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.312934627 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.204158644 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.16736437 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.191061867 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.186141896 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.215335973 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.192084622 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.299420687 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16445981 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.214123877 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.164528046 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.300771139 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.196130738 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.172340281 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.205182238 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.185847237 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.203583221 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.173620263 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.192524133 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.189190469 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.21718991 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1635576 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.203364688 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.163548801 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.164494591 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.176089291 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.202520656 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.186932082 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.201781665 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.174465901 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.193578108 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.175224237 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.200981843 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.164640629 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.20511959 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.163740724 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.202315323 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167602808 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.216167782 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.174144421 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.190669847 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.164089511 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.192656343 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.191192539 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192077638 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.189385955 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.191475536 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.168042249 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164386198 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.205813393 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164561639 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.202828447 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.164476432 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.204780231 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.176166885 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.201841309 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167363042 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.193244057 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.17296585 seconds)
done (took 15.131270884 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.170398275 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.234667761 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.318448177 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.320113403 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.192849943 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.210189368 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.207139818 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.189895587 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.204735533 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.183543102 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.229307721 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.196737518 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.320165434 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.211933235 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.210307191 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.178606302 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.17525364 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.202683875 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.318071942 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.21717217 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.190142894 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.21061107 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.19889296 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.212416468 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.168694357 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.221683497 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.172298446 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.206686339 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.16984604 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.216042556 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.217002805 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.17090658 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.198531112 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.188523345 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.212981832 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.180655724 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.208951082 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.178816733 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.197321392 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.170244624 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.204442968 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.186076595 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.197171093 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.181793998 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.206953762 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.184775243 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.206207298 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.183120493 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.199269684 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.1766138 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.198402185 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.195118458 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.211912912 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.184210087 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.21125368 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.182240982 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.217745637 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.18273043 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.202867488 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.182812354 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.198561144 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.1701187 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.20071023 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.189478774 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.202765729 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.210176238 seconds)
  done (took 14.543161459 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.189838107 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.229663353 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.181811318 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.21012253 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.175733939 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.194002394 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.164120661 seconds)
  done (took 2.453806172 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.167849417 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.336048041 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.322657231 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.32516181 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.31422683 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.36944705 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.192557308 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.196983849 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.202727735 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.208353311 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.337126181 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.391127601 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.211334556 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.211497146 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.330497475 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.166480668 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.32778023 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.198229328 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.181063737 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.324931753 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213728366 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.228578159 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.180276416 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.196361004 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.330468979 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.167900122 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.374506772 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.217146188 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.175468682 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.21272754 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.180859102 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.272748162 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.328498338 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.212839496 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.173294733 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.355759416 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.318515993 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.181212988 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.409346258 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.17188778 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.314622202 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.213741566 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.182781484 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.212835446 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.181858112 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.311728049 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.218288653 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.18163015 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.21274088 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.340295788 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.207823704 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.333708218 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.179113629 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.213291788 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.177220511 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.215104379 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189032069 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.211919197 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.341213013 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.212711337 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.32693508 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.329142414 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.321967759 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.330061665 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.221746285 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.333489406 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.311092074 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.181470982 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.206874841 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.183197179 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.328584033 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.213515699 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.180553896 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.348035389 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186671922 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.330927837 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.330842839 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.212085699 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.180416099 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.202858268 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.179131578 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.199467963 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.322485422 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180614169 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.211445044 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185548735 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.21338307 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.181420906 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.204207811 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.218598887 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.182927242 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.20906213 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.188192996 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.212117896 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185571643 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.330537773 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.210879889 seconds)
  done (took 24.867516254 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.17140357 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.168893056 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.203547253 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.169221589 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.198649074 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168773907 seconds)
  done (took 2.228835385 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.208077857 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.214364131 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.193215422 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.213520169 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.231870618 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.318668456 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.327713741 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.210886804 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.233372484 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.196466953 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.323774832 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.325584769 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.324048191 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.217935186 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.32924103 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.186156215 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.332182814 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.212844245 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.191853727 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.212379731 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.182384925 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.21855356 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.181096493 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.31192123 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.216400633 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.185605166 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.208567583 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.224549365 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.194008331 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.2099422 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.187932068 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.213333692 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.175906517 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.209740499 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.331129259 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.17548279 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.211513349 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.186434462 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.219024151 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.184740252 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.325103633 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.215695585 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.188546323 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.219959326 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.208346536 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.17806587 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.215213611 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.177470962 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.328105131 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.216812417 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.187554856 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.216631249 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.184814284 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.21878662 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.176637755 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209114092 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.186316361 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.328006586 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.22204758 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.175942415 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.216914106 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.184854023 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.211731045 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.217621249 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.186858748 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.214944303 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.178183902 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.216012106 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.183548062 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.214748398 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.188329047 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.216329395 seconds)
  done (took 17.194284134 seconds)
done (took 62.392443831 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.686079633 seconds)
  done (took 2.841859988 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.323369543 seconds)
  done (took 2.478624621 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.265867958 seconds)
  done (took 20.450805232 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.505802449 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.422556737 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.108776333 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.244768765 seconds)
  done (took 3.436903883 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.174891164 seconds)
  done (took 2.344209064 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.476220405 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.349591523 seconds)
  done (took 1.988359972 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.849535824 seconds)
  done (took 2.026958106 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.001981817 seconds)
  done (took 3.167111963 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363965347 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.285652317 seconds)
  done (took 1.828584487 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.727071229 seconds)
  done (took 1.91268324 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.551258648 seconds)
  done (took 17.733247154 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.321982006 seconds)
  done (took 1.505726043 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.358250235 seconds)
  done (took 1.546997562 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.921457191 seconds)
  done (took 5.106470733 seconds)
done (took 69.537777257 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.185801002 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.215521541 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.190065091 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.214363293 seconds)
  done (took 1.974837164 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.190102247 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.211761985 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189933999 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.211491909 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.19106913 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.212884124 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.184359268 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.214803922 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.184425617 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.184335592 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.216091515 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181857343 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.218142964 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.183184049 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.214000049 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.185866722 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.219921891 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.183375065 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.217466272 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.18346956 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.215699357 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.185023738 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.218609783 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.187798323 seconds)
  done (took 5.964649904 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.182014138 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.174506619 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.208662847 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.174422321 seconds)
  done (took 1.93251998 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196394737 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.227370324 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.198433055 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.222648914 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.201665729 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.226027137 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.184730544 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.211313045 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.185172779 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.224424209 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.200131944 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.229309327 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.197553963 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.219951504 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.195730337 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.209175413 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.186210062 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.228034096 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.1933792 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.226414895 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.186383059 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.223331543 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.182464684 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.225636584 seconds)
  done (took 6.173471221 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.260939468 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.226502337 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.21266182 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.260414331 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.242013597 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.182165972 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.240110911 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.190150368 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.220396881 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.194151085 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.214335008 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.229891664 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.222410615 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.185909885 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.215476703 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.189165117 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.224436432 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.189017053 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.25659059 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.218180818 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.191080444 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.225152514 seconds)
  done (took 5.984767965 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.189285942 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.20432291 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.175177933 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.202223551 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.191463873 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.206112803 seconds)
  done (took 2.363484701 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175487539 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168036871 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.201668383 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168594135 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.204255793 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.170372504 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.20020437 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169837659 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.200224554 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170146078 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.199122389 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.170575951 seconds)
  done (took 3.390360743 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272799146 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220165776 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.352628571 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.471126112 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262041073 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257036178 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.383351962 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227865568 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.27799834 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234014046 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278290906 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231217671 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253272082 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285467097 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210599616 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.248906722 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239939171 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.310123934 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244818562 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315144335 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255019022 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246104899 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.291964782 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248685814 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236477139 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230569613 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.219654957 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194548133 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264337804 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263680598 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274151203 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247814824 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20952406 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285680184 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328162611 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276019877 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.364224878 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23285503 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.233960199 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.289064203 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.329783138 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241675146 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291577861 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251047846 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196357581 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292076038 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247791287 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.284139485 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.205560498 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242786251 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280496004 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246894595 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.269197919 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236712504 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.401722314 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201914363 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.241169635 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27639213 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285938596 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302974212 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248753071 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.22363598 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267747106 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29222061 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315316634 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.208660124 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.263601677 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222165333 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232174985 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307613908 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281965675 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260156546 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.291549365 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197496344 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272406567 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263836135 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220488793 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30813674 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273491482 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.217410958 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218359122 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232812287 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191791638 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.288156825 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218870221 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317525853 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200694725 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.275628277 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274941527 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221400361 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260682521 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258565701 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228738865 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247174728 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.157887187 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243120162 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.256974648 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225715085 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227286864 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249569655 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208172701 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.225773683 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218468005 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.22202125 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269370707 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.194451963 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259742877 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269526593 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.201183195 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280972881 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244590042 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.232335481 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268008174 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296841519 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197691899 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233167779 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323037797 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271516511 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.203753005 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270798612 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.299992757 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.239403698 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203914758 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26614872 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293783797 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210593121 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.305887641 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240482327 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202673608 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.229514311 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273927013 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257474501 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.228849214 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227672737 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.233207868 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285503066 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.228989804 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206166022 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283515034 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23369124 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191511155 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235892568 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234160573 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.209956169 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.251709383 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.205842307 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25413965 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269656637 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23396369 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258124375 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235140796 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271495768 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199830858 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.270741062 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247589795 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.18752678 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.2744298 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300639348 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197101251 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279887268 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.260536972 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276602213 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274067464 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198832617 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.282822208 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195693181 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.221341903 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259646496 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23886557 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263642604 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.29052179 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274087299 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.264543347 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.231704325 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251219237 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270489285 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.285847872 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225409879 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.240582759 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275467292 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268056015 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.189723428 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.222297822 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.196102451 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236944936 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198261594 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236970638 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281505141 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231246655 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274612784 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266877233 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239137602 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.292817054 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.19377094 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259500876 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.276434175 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208125 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.291929442 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293484947 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281553681 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208782905 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263911563 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.220653129 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196924483 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.234719513 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228370032 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239928136 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202791989 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241434473 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.297674725 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270912104 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217541281 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289913962 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267206186 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.305327794 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.221417961 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.230328661 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268455647 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27072025 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.259458832 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233697875 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.22724908 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296627246 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244634322 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294956153 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238413279 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282656475 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29431962 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.268563481 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199457626 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245151217 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261093257 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207456618 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263325106 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.243445902 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20085138 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250814576 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.205618676 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241665927 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288342812 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245907249 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244503438 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.256557555 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27044291 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194025162 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243321515 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277436677 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21419316 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.195892369 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234663919 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292518552 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251469687 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255133701 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271840993 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201997544 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.421730514 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283629644 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242458766 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239513628 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206880638 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275672905 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.259823683 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25956953 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252495446 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24374161 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314681357 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273220429 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.207960384 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231767322 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215408538 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252549923 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.229893131 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.221825555 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.266219958 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.244628385 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290770286 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206146885 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275195051 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280004881 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.215270042 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.250873592 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207615019 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328745156 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271902523 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274566619 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.268179424 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.231906166 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285475618 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22609139 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196317772 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.234581786 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253696507 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232595989 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284509503 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.264300998 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279591909 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247165719 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271054091 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242840518 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.196455429 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.270626733 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249123091 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281949891 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204849094 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.239186701 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286066266 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.186855396 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232705779 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227986045 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396230694 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249558271 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268607481 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.167327493 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.387702305 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200772319 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234828744 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.257816305 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23867644 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.234884618 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.257339149 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277810048 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241341025 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229028984 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237075329 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.276157953 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2809865 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269520447 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243528874 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.248056335 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264883893 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225019257 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274628568 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248572601 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.215662969 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261508814 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302138701 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.281520925 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.203153418 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274885165 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27428907 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242447591 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274838442 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242239953 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251195002 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231862655 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271401203 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208035533 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227780502 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261810877 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.266631602 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201794446 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276332766 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276621839 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203182332 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230714744 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217456004 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270933754 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242818098 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.201003144 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288819548 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.232382414 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253126253 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315530697 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23256456 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269303311 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213298633 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23352858 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210460352 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248064785 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201226077 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.28105676 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281399192 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.201865894 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277013928 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270386758 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265612827 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223396844 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253842475 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.336468834 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.231834928 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298584058 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219608024 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301584929 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252337186 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28107904 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24208742 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256051556 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269949621 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216561967 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.327438846 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270163964 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.271438079 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201945373 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245661826 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208554453 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.237914682 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254130571 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24168255 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249141389 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.205191666 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.2743946 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248088951 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.216387572 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245363674 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307209457 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220801403 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289770368 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.290716229 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242144828 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281798614 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244702067 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23451411 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.26698884 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240741088 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248074423 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255971028 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.207721457 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.241729343 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321120934 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.198310204 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265244693 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279435674 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241476308 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278504689 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.237802028 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251162176 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247197636 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282729529 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197851067 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.255684609 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.274341241 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205639069 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.230218312 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.24486389 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263768598 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.271443387 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213170963 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.285900323 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303111311 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.195845226 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239795578 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391815398 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231295264 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29732035 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.228220363 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207723971 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25143756 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262856121 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.236642244 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27988608 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.233747601 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202330827 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.251615865 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.223367371 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.230853937 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242076873 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291315397 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26099981 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28882821 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.204822764 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.360548293 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210791261 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27949001 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.209650752 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.200509227 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245889089 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20555917 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247023452 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279263655 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324857372 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.268270358 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.220777726 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.24058227 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.19765202 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235402421 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23268783 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25505038 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277987655 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217892652 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.197859309 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212571724 seconds)
  done (took 122.450246155 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.277567908 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.232940306 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.248506881 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.300650662 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274363101 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.370573521 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.308456962 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.328308439 seconds)
  done (took 3.659307095 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.193554082 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.240828879 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.248717383 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.188981015 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.215217452 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.597678658 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.247439496 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.226837505 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.233178255 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.22870995 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.214982367 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.652007843 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.223672438 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.222945879 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.225079949 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.182200753 seconds)
  done (took 5.645537327 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.603434557 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.773748324 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.656594599 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.428973405 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.385052247 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.299376059 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.989335795 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.299761164 seconds)
  done (took 14.757241756 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.247262589 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.277411394 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.535166099 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.420976788 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.290568165 seconds)
  done (took 3.09470052 seconds)
done (took 178.562327728 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.196533652 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.195873162 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.229864147 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.199470408 seconds)
  done (took 2.121815002 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.258481613 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.153729047 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.19116111 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152811192 seconds)
  done (took 2.081175476 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.462774492 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.153473706 seconds)
  done (took 1.968722908 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.219109497 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.791005825 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.210215838 seconds)
  done (took 2.556954764 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.210501629 seconds)
  done (took 1.541481008 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.19343207 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.188717225 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.387399892 seconds)
  done (took 2.102700001 seconds)
done (took 13.696101299 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.219102862 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.036418458 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.655976643 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.204568123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.824130569 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.472304543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.534384785 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253580221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.273748498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.217233001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.215202227 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.800104957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.520238712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.958829332 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.500862365 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.954975909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.800733669 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184353541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.222660787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184946983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.503511864 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.18202629 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216310049 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183991554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.799728374 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.490515449 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.214946118 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.968442356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.215613731 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193474324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.505433966 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183640392 seconds)
  done (took 24.005218542 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.186121154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.274178581 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239072301 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218928957 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191256444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.21822363 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195558178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.23074722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.317570691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184604969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.238520345 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.182507915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222543873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.184913249 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240794308 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183854245 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.2182105 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184582341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22339398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185996907 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237534955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183348106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219625974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184168531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.215494303 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202337742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.21612937 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.196570457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.218408849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193091524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.22121633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185698055 seconds)
  done (took 8.133270789 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.230020591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.284302563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238765349 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.256468787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.272391342 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.185799116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.307606785 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254173523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.291397809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.217930996 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.206136618 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.217501192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.224022691 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.219708176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.209435781 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.216765973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.186329281 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.218831459 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22320492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187012958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237463856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183928767 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.21891059 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186616119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.218755332 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.203758244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217084169 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197482515 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.21668838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194150876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222262971 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185770761 seconds)
  done (took 8.477470983 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.204127843 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.199151512 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.241441108 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.24114533 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.196730465 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.197439284 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.23304409 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.193730851 seconds)
  done (took 3.057237446 seconds)
done (took 45.000420935 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.211822048 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.233024604 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.207736612 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.199513499 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.385719441 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.191771594 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.235748135 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.191471276 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.198625467 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.241482105 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.183499173 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.226288483 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.203180725 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.229179702 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.355186508 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.199613932 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.393400516 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.357206877 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.192792254 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.234652046 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.194596115 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.359847157 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.234776294 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.193369143 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.338465108 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.223070406 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.345864093 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.195690597 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.22981882 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.185527504 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.356063086 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.230592173 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.193784978 seconds)
  done (took 9.481546851 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.306546454 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.229661048 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.193582368 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229283138 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.195195492 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.227249778 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.342351147 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.192920482 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.228052673 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.192830108 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.228824 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.286959816 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.235282992 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.189067339 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.231226261 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174267482 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.341926512 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.228717073 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.186333681 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157571783 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.225795822 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.19296979 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.352955009 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.224362819 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.194243206 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.228348032 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.196501944 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.198189728 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.230845975 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.19581708 seconds)
  done (took 8.201695062 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.203645171 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.208524282 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.248904557 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.29603569 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.224979237 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.241258612 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.211035775 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.24551502 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.215903712 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.224527854 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.203255945 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.259199232 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.205442187 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.233469563 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.188142221 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.23935858 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.204389469 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.223561599 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.197094477 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.241521216 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.207807711 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.239919546 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.210216747 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.234610561 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187829123 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.231982293 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.199171417 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.23464157 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.199223728 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.238718206 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.190312051 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.225787441 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.191176336 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.259823893 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.195817988 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.241060753 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.209604937 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.237643139 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.202755951 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.257029263 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.190499434 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.227339105 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.216227496 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.279845503 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.190423657 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.235645609 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.190561244 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.239706181 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.187308317 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242242118 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.23110341 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.227599334 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.209929419 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.223025219 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.186767815 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.2325603 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.189150939 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.228978978 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.204267317 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.22540513 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.21059354 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.232960142 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201295849 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.227136356 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.201201424 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.223574451 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.1893884 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.228220852 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.216564551 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.231984179 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.22673833 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.225333054 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.201508935 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.237401418 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.202457519 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.239059799 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.188632088 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.235365056 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201410249 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.228783562 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.202894795 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.227487169 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.194067137 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.239673565 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.211919617 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.238232739 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.202849119 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.235062014 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.192535238 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.226246857 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206942447 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.226292813 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.195561321 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.238789723 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.191386838 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.227946026 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.2012515 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.200082776 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.224262946 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.215404556 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.230034908 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.18955525 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.250780424 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.192761594 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.229148273 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.199256903 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.267018453 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.194784057 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.233554141 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.200321493 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.224998514 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.1977836 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.226716959 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.189338532 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.239751717 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.205988485 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.233524109 seconds)
  done (took 26.995317911 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.45868682 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.445585993 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.295523334 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.531426029 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.203130859 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.402365552 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.44785765 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.448925873 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.229113772 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.22445459 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.2839917 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.447813999 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.192668705 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.254555555 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.451765689 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.532674232 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.220792533 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.267347335 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.261517683 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.20379484 seconds)
  done (took 8.191753156 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.20554625 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.260748172 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.213663972 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.246221883 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.203461418 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.241627374 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192482229 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.245980721 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.203219836 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.234136827 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.193888762 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.231827804 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.204772478 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.206560834 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.241516467 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.21340982 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.237979774 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.197593213 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.248967484 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.195250876 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.206538136 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.221033415 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.236158453 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.212584784 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.243540536 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.200986172 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.225196235 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.195394541 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.233543455 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.201408713 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.229835721 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.199628109 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.23423237 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.172220923 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.237027558 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206721958 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.231800566 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.195907385 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.197290871 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.228987988 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.204596339 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.238429761 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.199045702 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.201330351 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.211335114 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.17817608 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.244613438 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.202660199 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.209327107 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.213336906 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.239481851 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.206051761 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.233767506 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.212909407 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.233411735 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.211824981 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.237167171 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.206980231 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.235078986 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.193614565 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.224764476 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.195620965 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.237807475 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.209391711 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.240454041 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.20184962 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.233676922 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.192774724 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.229597214 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.196864559 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.19442207 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.239188796 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.246765528 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.201601474 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.198582305 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.238494993 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.200711347 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.198105429 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.20204804 seconds)
  done (took 18.533368874 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.224310159 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235185075 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.211494563 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.259905188 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.204875005 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.233266605 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203480624 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.211782169 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.242521343 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.210016441 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.242543413 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.239993159 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.216374093 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.243115203 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.202737373 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.243006042 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.204075113 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.266495272 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.204350707 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.25473358 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.20767634 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.233441557 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.204760885 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.239185025 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.220985923 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.242029661 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.219144209 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.242965324 seconds)
  done (took 7.779178902 seconds)
done (took 80.535656456 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.593477075 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.826547287 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.504132963 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.50921671 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.512071542 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.563692771 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.50133086 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.508699605 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.102159988 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.475389015 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.50988977 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.511371034 seconds)
done (took 32.571634215 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.929354564 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.330088065 seconds)
    (2/2) benchmarking "String"...
    done (took 2.341598118 seconds)
  done (took 6.079556486 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.3075074 seconds)
    (2/2) benchmarking "String"...
    done (took 2.323087245 seconds)
  done (took 6.023434893 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.502164905 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.49997601 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.826179503 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.497501463 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.493955621 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.492272027 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.509843046 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.499057457 seconds)
  done (took 18.214481046 seconds)
done (took 37.142403165 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.570511236 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.945927342 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.795618773 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.487189048 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.513590171 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.496676428 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.496606797 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.567712277 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.506599058 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.487372661 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.040106986 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.769351675 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.502614544 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.90664148 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.478913205 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.497873367 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.507595693 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.855288512 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.500698448 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.542384266 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.476415053 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.500990664 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.525711894 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.515926502 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.513237124 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.504065287 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.532998016 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.509678641 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.827243185 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.51736174 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.48389219 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.513461035 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.540578868 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.496192009 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.4950735 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.494813621 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.829596627 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.520457525 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.508018723 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.500416149 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.809885811 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.524500427 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.495943374 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.495815425 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.486384686 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.550342679 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.48876788 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.690263895 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.526280122 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.509173897 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.593067875 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.938371423 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.509000272 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.504548937 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.500889254 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.861577021 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.51072605 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.638502983 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.529302225 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.507643116 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.498942149 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.496713094 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.570817071 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.512366203 seconds)
  done (took 164.422454982 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.50405062 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.502203457 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.503591134 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.50188526 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.503649452 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.504642874 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.503375324 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.502599807 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.503075845 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.50405055 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.504454862 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.497707285 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.504650067 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.506385833 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.512228126 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.528470345 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.503980918 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.505222906 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.506842455 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.504337458 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.50530064 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.503908074 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.498467787 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.497741927 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.517000241 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.542931193 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.529262346 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.516298057 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.506809211 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.507009446 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.520284528 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.509324126 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.314914837 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.462707025 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.514652318 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.51148725 seconds)
  done (took 91.46199695 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.505329833 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.505261668 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.507067554 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.545402875 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.504283471 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.181768087 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.181768087 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.584606534 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.955421217 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.218753377 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.832135497 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.500071133 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.605820545 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.51551388 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.508160011 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.607329815 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.526620459 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.507727414 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.507776164 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.183898734 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.520351505 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.500283451 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.701173243 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.501375559 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.546252565 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.913536002 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.490019297 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.508467941 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.546039968 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.856514924 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.541051554 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.501815978 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.949836499 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.286063053 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.622265303 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.503771254 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.549129327 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.509364144 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.80070266 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.503077661 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.508018652 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.513653167 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.218054684 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.501035781 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.185395992 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.51217379 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.603900818 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.508284119 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.509427002 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.511739586 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.228618947 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.4083469 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.502906969 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.510260837 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.515116063 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.509685834 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.511036145 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.55068588 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.192092864 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.517745308 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.510455764 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.512748025 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.550275493 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.510028475 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.097514356 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.512532146 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.449727931 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.565883413 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.65971839 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.188830507 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.511017916 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.511057447 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.611084272 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.627170746 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.503582963 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.512861307 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.511083358 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.511146913 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.628986549 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.506523909 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.374873299 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.507282595 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.70288596 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.504962747 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.17743639 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.60786005 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.505021274 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.9754063 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.513340838 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.511250768 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.399131132 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.611990184 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.508148139 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.511277587 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.513362629 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.37918111 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.183776792 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.901264889 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.512660653 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.765003986 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.51469946 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.503828664 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.187858456 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.28294492 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.516703765 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.629591096 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.701445903 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.508510544 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.514861422 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.235852688 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.514516267 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.573251179 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.517061003 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.920204239 seconds)
  done (took 419.036710755 seconds)
done (took 676.315938518 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.497517456 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.490941481 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.499021558 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.492577722 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.496647444 seconds)
  done (took 13.880527684 seconds)
done (took 15.28548805 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.516853924 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.518505741 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.516802591 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.404868524 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.510424615 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.51591819 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.517498839 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.517010159 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.516499759 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.518360121 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.369995514 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.517230369 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.510964907 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.511937936 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.36638479 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.518243276 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.486817772 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.510461561 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.514320292 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.912953526 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.528131266 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.649739188 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.910579481 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.589741824 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.902815574 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.948413552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.527265234 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.744437893 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.569720563 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.569886994 seconds)
  done (took 22.259986623 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.510674787 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.945212446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.524693259 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.647956769 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.879846313 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.590538294 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.910797805 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.964397986 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.527040345 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.796128894 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.568345109 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.566801337 seconds)
  done (took 22.328377862 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.352826222 seconds)
done (took 98.220974751 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.577676952 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.661592511 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.579594584 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.556043754 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.558551335 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.555079315 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.557065881 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.55458882 seconds)
  done (took 14.007258256 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.553656649 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.552492604 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.555225493 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.555275011 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.55726423 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.554639385 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.553677601 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.5555967 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.55472501 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.555546694 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.5546727 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.55559656 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.555163545 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.553614744 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.556373754 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.557062599 seconds)
  done (took 26.290320369 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.559302758 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.556553595 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.554208814 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.556992757 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.555058992 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.557455037 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.559115165 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.557559589 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.558034649 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.557482624 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.556323887 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.556912161 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.557549672 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.557067138 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.557037875 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.560347304 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.556541862 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.556818782 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.563122936 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.55731724 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.557759545 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.556334014 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.557563151 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.557317659 seconds)
  done (took 38.789412258 seconds)
done (took 80.495423407 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.539528386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.516604591 seconds)
  done (took 6.466936123 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.660095184 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.67344346 seconds)
  done (took 4.747885259 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.558321628 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.561389965 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.56029597 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.556993665 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.558620129 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.558576898 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.56013324 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.55917872 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.55641063 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.557740409 seconds)
  done (took 16.99882101 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.558865133 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.561593063 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.557297405 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.558048548 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.557841259 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.557899856 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.560492783 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.560093571 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.557740618 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.56015503 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.559986854 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.558461729 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.559443627 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.557341545 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.56134317 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.557890148 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.560424129 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.559511443 seconds)
  done (took 29.476639174 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.581920368 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.587051398 seconds)
  done (took 4.581243607 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.739722279 seconds)
    (2/7) benchmarking "second"...
    done (took 1.64108697 seconds)
    (3/7) benchmarking "month"...
    done (took 1.727149381 seconds)
    (4/7) benchmarking "year"...
    done (took 1.713579849 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.640885688 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.590255786 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.641867307 seconds)
  done (took 13.107535113 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.561463577 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.91419719 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.088645072 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.772842272 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.54979268 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.582789474 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.51214264 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.575900329 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.583136584 seconds)
  done (took 17.554016681 seconds)
done (took 94.34609988 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.526972459 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.554225856 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.545324304 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.539200691 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.921591705 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.543794641 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.528271298 seconds)
done (took 18.577817752 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.51283393 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.509021643 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.507330506 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.550193778 seconds)
  done (took 11.49335764 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.524260313 seconds)
    (2/2) benchmarking "read"...
    done (took 1.927021166 seconds)
  done (took 5.865809262 seconds)
done (took 18.775635016 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.563543521 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.563880574 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.564241864 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.56202566 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.562461819 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.561988085 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.562504841 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.561341914 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.564026683 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.5644194 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.562121343 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.564101762 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.563676568 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.563710441 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.564323997 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.565031838 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.564529959 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.563694099 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.563032841 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.565862879 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.564029267 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.564137101 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.562954898 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.563467184 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.563779375 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.564272804 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.562863406 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.564423521 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.563600441 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.563187889 seconds)
  done (took 48.32110096 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.574233078 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.570271471 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.566076733 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.566291286 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.566731286 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.564535825 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.565327895 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.56736321 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.565451235 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.567551572 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.564113496 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.564890899 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.566192531 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.563494003 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.564642194 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.565305965 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.565703223 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.567162067 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.566346809 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.568436182 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.566112353 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.565614594 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.567712696 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.566053965 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.568014969 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.566842264 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.566250569 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.565390403 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.565397667 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.569147655 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.566023794 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.567830449 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.568486328 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.566043419 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.564802759 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.567932836 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.5734357 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.572894919 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.56678234 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.568390855 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.567761654 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.567343794 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.566837934 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.565156225 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.56751288 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.566933826 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.568169598 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.567932766 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.569304938 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.568511401 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.568646055 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.567786169 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.568774074 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.568934011 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.568232804 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.567247972 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.568421655 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.56768916 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.569620201 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.568717782 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.569033255 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.571111941 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.568613369 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.571537484 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.569033744 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.56867462 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.569741516 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.569373313 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.569272531 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.571796385 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.568857185 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.570400887 seconds)
  done (took 114.296094919 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.568812696 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.5696341 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.568346924 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.569051554 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.56802775 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.572286602 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.57076504 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.569224341 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.572250424 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.571054881 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.570503274 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.571317484 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.572285554 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.569732366 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.570574582 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.570453827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.574688164 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.570637579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.571458563 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.572913427 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.568392112 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.572197973 seconds)
  done (took 35.976982968 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.57094062 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.572660881 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.574625516 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.572288417 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.575748354 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.572512957 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.572268443 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.572299173 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.57205885 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.571463452 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.572644538 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.572479363 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.573486685 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.572545154 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.571141623 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.572723319 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.57168911 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.573349307 seconds)
  done (took 29.732002094 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.571962119 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.569306055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.575014672 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.57382339 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.571971967 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.571445084 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.572204887 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.572839814 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.571694627 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.574875409 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.574098075 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.573415726 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.57270062 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.572558773 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.573239307 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.575097015 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.575085491 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.580488482 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.576433358 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.571706849 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.572355046 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.574994767 seconds)
  done (took 36.040064244 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.573771986 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.574792088 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.573398964 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.573918723 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.572552837 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.574120983 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.574072583 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.575043935 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.575137802 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.575563136 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.573832957 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.574858367 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.575324348 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.574120075 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.572658716 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.575607694 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.574408589 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.574572646 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.575262818 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.575055809 seconds)
  done (took 32.91333486 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.574850056 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.574796278 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.575900609 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.574058056 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.575868621 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.577509123 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.576402418 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.575919047 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.573359154 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.576355065 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.576108317 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.576808755 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.575126418 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.57710132 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.578119606 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.577227803 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.577220748 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.577588602 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.57570191 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.575467942 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.584334083 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.577343111 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.576011657 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.578205371 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.577872786 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.577441866 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.577904984 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.578197479 seconds)
  done (took 45.575929874 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.604290113 seconds)
    (2/2) benchmarking "in"...
    done (took 1.603768538 seconds)
  done (took 4.638048945 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.579104228 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.580208978 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.57631344 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.579857955 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.579552959 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.578609472 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.578868235 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.577376565 seconds)
  done (took 14.060925764 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.57264824 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.580273232 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.580256889 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.580473816 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.581684794 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.572832132 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.587293817 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.584380738 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.574865281 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.574546456 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.579925422 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.578773739 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.578081403 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.576475123 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.575725237 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.581256318 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.583480623 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.584454629 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.582644413 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.581918553 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.581362966 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.57992647 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.58096515 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.586727125 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.577040768 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.59309644 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.589949882 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.585183912 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.575940209 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.588782484 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.579492127 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.58468748 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.584515043 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.584283379 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.582314344 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.585926116 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.59311013 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.584085169 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.593094695 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.587389779 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.584824299 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.582203366 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.579934013 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.583827595 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.586011462 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.586782159 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.584501563 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.584182318 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.577168717 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.58582715 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.588629532 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.577182895 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.584714997 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.588887595 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.586747449 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.596928492 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.59343112 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.581775238 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.584670719 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.597028923 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.606956583 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.595643134 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.589974186 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.590303907 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.59319359 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.594001863 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.6001326 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.594969933 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.586063423 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.588435443 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.594366924 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.606148799 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.605586017 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.591783913 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.586724541 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.5855899 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.582118508 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.590010085 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.59643653 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.59589966 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.593153431 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.58803623 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.591615735 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.590234903 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.582274813 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.590881145 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.588072477 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.58761851 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.580520331 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.601399382 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.599997877 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.589819209 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.581289073 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.583374255 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.58469663 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.58976152 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.580673702 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.585367594 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.590706821 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.588650903 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.587982173 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.589383957 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.594632949 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.595906784 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.587668655 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.599106911 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.602120353 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.583369645 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.601400988 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.601795382 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.589273189 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.583621912 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.594634485 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.595014003 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.589902389 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.596421234 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.600227585 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.593024154 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.596467121 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.590952802 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.59545994 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.603832932 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.598488258 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.588474484 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.592653507 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.601341274 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.59242785 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.595863832 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.599330753 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.59021465 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.591980586 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.59352792 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.594571418 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.586692484 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.596010149 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.588188344 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.594994377 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.590457767 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.592307514 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.595094391 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.592880631 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.591358231 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.6021309 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.602539471 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.599773616 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.596838327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.607580475 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.592974846 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.600102639 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.59772168 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.596297825 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.592099945 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.590320389 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.597243756 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.586423386 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.596562594 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.589930256 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.59807354 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.593244365 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.593883691 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.592249196 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.585525017 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.593568079 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.598981197 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.601472157 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.596275756 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.597697235 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.592021374 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.594227241 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.585754795 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.594965393 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.586000077 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.593814339 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.599264614 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.595162485 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.595743146 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.600389966 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.602410963 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.594204403 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.594441584 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.592495457 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.601323813 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.602563147 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.605068354 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.60429549 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.598097496 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.5946546 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.59322879 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.592938739 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.59850921 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.592651411 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.604686671 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.612822413 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.610306171 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.591882599 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.601317738 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.591006161 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.600824868 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.604158741 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.602397205 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.598096448 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.598489095 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.589900433 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.602000366 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.597975413 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.601960626 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.588777665 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.60046316 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.599453673 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.598530232 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.598750022 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.593714606 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.598355908 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.602131807 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.598729839 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.598840956 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.592367298 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.60141342 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.590128745 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.596689425 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.601939465 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.597950689 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.60940019 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.606164304 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.601362715 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.608219592 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.601465521 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.597301584 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.603321344 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.602142214 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.599026384 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.612470552 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.601785953 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.595827864 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.615437759 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.602917383 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.59188672 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.606754393 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.608600646 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.601678467 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.595843229 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.607999313 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.602876525 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.598913382 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.600963432 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.59864093 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.604941942 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.612052273 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.610901637 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.596135654 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.604513954 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.596970048 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.605702513 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.605900373 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.609992025 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.607395885 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.611733726 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.609216926 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.60250008 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.598579819 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.606211516 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.601775478 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.601804391 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.599255115 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.610379854 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.612792171 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.60366643 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.607012456 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.600563522 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.604432658 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.596914734 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.602767433 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.597280352 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.62233738 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.624103665 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.614246127 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.60901732 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.607404475 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.612121346 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.60617485 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.599651045 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.600287788 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.603214487 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.601321509 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.598465279 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.606819904 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.598778029 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.607804456 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.609015085 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.604678221 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.607937364 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.601987236 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.598060271 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.607951332 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.605480627 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.603905566 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.597168676 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.609626475 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.609975613 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.6124144 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.606521263 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.602631033 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.621331177 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.611716057 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.605170253 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.602112951 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.607250475 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.600422092 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.608373942 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.610643365 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.603423941 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.615461925 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.603821966 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.608819041 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.604925948 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.619669024 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.615355207 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.606951554 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.614349283 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.605814328 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.599065217 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.60338455 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.609066837 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.616488801 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.617514141 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.60133848 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.609684863 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.606895821 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.608077815 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.608602254 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.609280901 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.608027319 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.607124063 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.624001976 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.611481181 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.605956666 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.616718438 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.61943708 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.607950913 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.609944742 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.603257788 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.617775696 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.617312998 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.609673967 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.60791739 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.605712151 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.610293669 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.610000196 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.610232488 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.61037692 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.608758069 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.621983424 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.613781962 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.611676736 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.607376259 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.624148993 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.618353912 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.624890428 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.620215811 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.608872539 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.61541115 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.612709689 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.608389377 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.608271345 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.608479333 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.614404667 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.6038249 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.614983652 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.612646552 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.613595416 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.620600217 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.618356357 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.604002506 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.623408885 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.621588681 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.605700487 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.613496451 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.610273136 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.604851078 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.617022178 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.613515099 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.602320099 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.608157295 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.613989251 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.616165366 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.606519586 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.616215442 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.607978011 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.617289461 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.6111648 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.611619955 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.612782464 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.613493378 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.606948272 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.613226235 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.619647512 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.618976966 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.613157371 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.614411651 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.610681638 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.625471787 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.628678898 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.61363313 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.62086317 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.616443892 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.609007962 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.616190718 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.620065442 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.610930412 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.617762776 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.606497725 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.616624782 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.611312165 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.622782338 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.617820604 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.616927684 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.606743568 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.609033523 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.614845715 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.62072251 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.615950534 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.624818491 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.627034556 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.612471809 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.61365506 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.615273982 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.616301835 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.624104713 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.610623879 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.615241994 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.615915753 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.618650109 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.615629334 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.615518426 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.60676445 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.614264426 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.631216791 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.625854517 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.621018357 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.615220274 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.622992211 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.611521758 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.616570026 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.618286794 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.611861188 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.613501339 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.623052345 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.613825753 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.613746274 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.612799435 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.619592268 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.629217165 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.620415976 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.6093777 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.631236137 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.631782924 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.626700225 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.610793034 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.616268032 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.614259816 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.615767061 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.61805115 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.610999276 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.632851146 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.622998358 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.622264256 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.624581799 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.618722744 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.611662977 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.62052011 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.619108687 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.622241697 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.626948301 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.622036364 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.625498676 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.618533055 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.618740484 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.610842901 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.613586057 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.618264306 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.618321087 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.621378947 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.624928701 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.621652446 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.623505615 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.629739578 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.621687227 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.620005729 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.622670313 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.612724076 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.622753913 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.612446596 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.63739991 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.623013233 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.61801176 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.623051507 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.622650199 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.61791922 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.624520478 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.626260225 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.621595036 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.614614191 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.623621133 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.630814645 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.629757737 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.62128124 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.615588407 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.624358935 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.625384415 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.620660351 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.622252174 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.618654439 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.640767935 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.630528156 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.617879411 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.618158636 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.631742346 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.628177927 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.622960294 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.622787297 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.629233997 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.625280421 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.628348968 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.623895329 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.634746779 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.627617939 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.618705075 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.627250853 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.620436788 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.622512752 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.628753419 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.631101274 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.623889253 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.624949583 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.640116805 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.632435102 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.633445706 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.648201981 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.635882398 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.628413292 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.628919571 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.616720744 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.625510408 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.627928593 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.630705204 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.623508479 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.623335132 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.624194041 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.617050674 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.634320817 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.642510825 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.634903643 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.660417012 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.618925423 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.621730669 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.625484009 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.631953127 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.625863386 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.625337482 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.625067475 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.626391526 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.620941112 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.646648571 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.651493252 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.630567756 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.628317889 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.625843831 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.633335915 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.632929369 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.62932521 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.632708321 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.626653921 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.62647778 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.636442386 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.633110537 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.627045381 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.623308383 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.630126708 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.625510479 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.638799599 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.651510223 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.648381334 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.641037593 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.630608404 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.630109038 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.628830245 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.625354942 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.631399705 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.627842479 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.622694199 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.62538253 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.631830556 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.629279464 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.626589387 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.625134173 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.631682981 seconds)
  done (took 959.374557502 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.628505902 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.627895279 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.630981426 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.627567863 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.626794231 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.626738009 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.627856168 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.627189603 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.628568269 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.629138943 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.627058302 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.631520181 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.626955635 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.630524524 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.630014962 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.633459325 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.630550854 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.629580968 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.633857699 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.632032188 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.632144074 seconds)
  done (took 35.688961426 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.633025261 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.63253316 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.630663368 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.63485189 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.634009604 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.631350607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.635530607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.63837238 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.631576963 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.63388347 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.635570836 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.633555007 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.635879046 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.634474189 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.630100657 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.633498715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.632090435 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.630384701 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.632183464 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.632756652 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.632794017 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.632620391 seconds)
  done (took 37.403142119 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.628755863 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.630570829 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.627843247 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.638466805 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.632470092 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.632911838 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.633664937 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.635248449 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.635258855 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.625776435 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.628267324 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.628237012 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.631843407 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.639367129 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.637188919 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.638528754 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.632208956 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.631934899 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.632980702 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.632509414 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.64331812 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.640597314 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.633102156 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.626535679 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.637909053 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.638908132 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.633491382 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.635511751 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.62824728 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.639730583 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.633679883 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.629404619 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.644349187 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.635898601 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.632398715 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.636698773 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.641548272 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.63260342 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.634065128 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.643174038 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.644626876 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.636094367 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.647398527 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.644943537 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.637308976 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.638105726 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.640276323 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.635441071 seconds)
  done (took 79.973448162 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.636338182 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.635582849 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.633442632 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.634589566 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.634962938 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.63686276 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.63630885 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.637666354 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.63534036 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.636395243 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.635861795 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.636803815 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.638415541 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.637377351 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.636202062 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.636960747 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.635775471 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.635905027 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.636433307 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.637200094 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.635491986 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.637233897 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.639713542 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.6373601 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.637384545 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.636205274 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.636671116 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.635595281 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.637287326 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.637107763 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.637194646 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.639274101 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.637468634 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.637428615 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.638298977 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.638346678 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.639162355 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.637120405 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.639510653 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.638356036 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.638767402 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.638493694 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.645528806 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.637546926 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.638129751 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.637954798 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.640106748 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.638539859 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.641981009 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.641262831 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.637399351 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.640429694 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.638955135 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.640235326 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.640879472 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.639371459 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.64066911 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.640241752 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.640935973 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.640518812 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.640670856 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.640199986 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.639796723 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.640246081 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.639895897 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.640456793 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.640648018 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.640661497 seconds)
  done (took 112.876844957 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.641428984 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.64264953 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.643955771 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.643330203 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.642279091 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.643762311 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.642309892 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.642514038 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.6421348 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.642665803 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.641311441 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.642974501 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.644379708 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.641334628 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.643085898 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.644340946 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.641521104 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.644425314 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.642314361 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.642988888 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.642810724 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.64403099 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.643965549 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.642293968 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.643910444 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.643697568 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.644013111 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.644666267 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.644731009 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.643615784 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.644719276 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.646879676 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.645665416 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.645360629 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.646565321 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.645815644 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.645893727 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.646142223 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.644658095 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.646089911 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.646978153 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.647116439 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.646893365 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.645766826 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.645385492 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.645884369 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.646742509 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.64404454 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.645842603 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.64571654 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.646132655 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.647843416 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.646368787 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.653765329 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.645589429 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.64711162 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.646344344 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.647325194 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.645316 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.646908381 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.648626686 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.644546419 seconds)
  done (took 103.460094684 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.644902051 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.645916705 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.64506066 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.646751029 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.643282361 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.645278496 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.643200997 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.646459651 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.646490381 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.646011619 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.643557536 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.646049752 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.645752717 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.645121632 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.646475435 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.645605003 seconds)
  done (took 27.811311062 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.645491302 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.646469429 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.645868445 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.649164744 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.646447918 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.647455588 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.646303626 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.64608195 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.645724921 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.647908718 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.647797111 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.647721753 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.647214845 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.648898019 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.648574166 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.648498946 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.648748629 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.646973403 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.649369029 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.651110801 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.649432655 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.649097556 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.647467879 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.647580394 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.646907055 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.647915422 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.650804966 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.649083099 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.649093925 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.655118364 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.651311944 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.650627429 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.649974763 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.650426077 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.652197182 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.649371334 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.649893607 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.650171017 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.648534915 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.647028089 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.649273976 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.649225994 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.648763506 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.651353499 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.649407652 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.651396732 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.649414636 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.649783957 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.651308453 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.650427265 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.649363163 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.654782846 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.651763119 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.651620084 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.650997309 seconds)
  done (took 92.190552377 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.651306776 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.65186376 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.651880941 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.650137982 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.650515754 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.651656262 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.651004712 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.650287302 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.651261519 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.651445271 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.652685792 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.65244903 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.650582661 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.653230135 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.650185474 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.651389747 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.65281898 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.650787157 seconds)
  done (took 31.214538805 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.653391678 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.653771963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.652114281 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.652402725 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.652503017 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.654742617 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.652073773 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.654461716 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.652394903 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.653927849 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.652769951 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.653630535 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.65250176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.653146116 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.654884326 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.656344288 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.654766015 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.653726777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.654418135 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.655587348 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.654896129 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.656414827 seconds)
  done (took 37.874320401 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.64458986 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.646210248 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.64314233 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.668859287 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.654362123 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.646155841 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.643224742 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.648000909 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.671004952 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.678417556 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.678078965 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.65393665 seconds)
  done (took 21.366876263 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.653194236 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.655691761 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.656451774 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.658084663 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.655458561 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.655731291 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.654845284 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.654910098 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.656112066 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.656003811 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.655455348 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.654238224 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.656768504 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.6541475 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.652376326 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.653990357 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.655097412 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.654767901 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.656218504 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.656020224 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.65761533 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.654886561 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.655033018 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.657602898 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.656721291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.656143634 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.658778816 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.656938637 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.656572249 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.659446009 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.657899094 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.657079367 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.662897845 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.656904275 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.659096593 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.656438992 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.657431996 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.658880644 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.659220771 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.657661494 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.658473889 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.655769983 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.656358186 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.657912364 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.658510695 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.659135146 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.658715679 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.660106428 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.656748808 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.660356111 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.660875591 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.65777359 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.659620333 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.656927951 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.659008175 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.658317304 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.662821368 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.65726291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.659610765 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.660239336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.660690022 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.65948512 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.660173685 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.662011279 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.657739158 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.660251629 seconds)
  done (took 110.887022507 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.657699838 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.659503629 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.660223483 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.661772423 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.660288085 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.658638295 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.662755019 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.661005635 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.662654238 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.660231165 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.661237298 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.658964733 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.659281184 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.659838797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.660902339 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.660942149 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.660663133 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.660837876 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.663659603 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.661432435 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.667686093 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.661122061 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.662795527 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.661688892 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.662719401 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.661394442 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.661499762 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.661620867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.662015121 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.661173463 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.661044327 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.663154232 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.66247761 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.661778219 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.665892779 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.662775902 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.662239312 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.66229686 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.664585211 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.663028029 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.664332315 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.664492251 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.66282528 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.66365688 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.666369026 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.663460695 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.663511819 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.663376258 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.663226239 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.664824626 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.664226925 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.664656169 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.664935953 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.665726906 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.663939527 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.664481915 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.663530467 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.664812474 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.664917515 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.663961737 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.664763026 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.663708772 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.665138842 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.663972143 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.664864855 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.66438728 seconds)
  done (took 111.235691497 seconds)
done (took 2124.329018849 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.630890702 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.632160067 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.655303583 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.937258014 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.6465656 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.310035166 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.283922906 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.642650647 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.657341692 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.654830897 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.652826173 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.630118956 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.986722893 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.645700546 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.654102522 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.630199972 seconds)
  done (took 60.749367152 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.69759255 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.676284184 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.819030548 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.660667603 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.699054328 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.933127879 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.73814666 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.664024943 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.887840905 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.669341611 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.641793625 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.687567532 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.661846874 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.649608236 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.678099987 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.933771187 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.04114385 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.637875529 seconds)
  done (took 35.878099933 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.289067206 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.650751468 seconds)
  done (took 6.43991949 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.690163393 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.665974703 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.673401764 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.667202442 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.63437236 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.63432389 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.662946873 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.63496636 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.639679041 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.828523516 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.667977471 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.683835284 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.662562398 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.665588969 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.671171871 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.726391813 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.850107476 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.676577867 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.670142201 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.679045778 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.665273147 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.906573944 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.726045749 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.672047751 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.830452392 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.654455081 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.678756984 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.687800453 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.884417076 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.676435251 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.666782278 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.666024011 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.668009668 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.640130704 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.312309268 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.638332012 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.696103534 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.679821226 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.674632577 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.879684351 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.667878715 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.680594089 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.64644247 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.30837022 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.85858516 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.973840668 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.637517313 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.671814761 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.668179103 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.886086422 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.669404398 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.672735548 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.778162153 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.658702828 seconds)
  done (took 104.882038843 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.693113977 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.637842563 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911276148 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.666067801 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.635885611 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.637882792 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.636842646 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.067061461 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.642768679 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.638096088 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.058711656 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.448442012 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.640849301 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.686971577 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.680618324 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.664429254 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.649252325 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.6506715 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.628622676 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.633689312 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.354028191 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.639558494 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.62960262 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.827703719 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.713952033 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.349609123 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.629019445 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.626979381 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.633908544 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.637549719 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.400805368 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.635818353 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.699180042 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.62858594 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.046207413 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.17752921 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.13922371 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.631808347 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.65399343 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.643598882 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.629146137 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.348855256 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.158967631 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.62921954 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.646899022 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.338705152 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.630012587 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.644309029 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.647484153 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.003654235 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.641330856 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.643601536 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.629115406 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.629666664 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.639488164 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.712560445 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.711369442 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.351645415 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.630843839 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.641266463 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.642625295 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.642852279 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.643408844 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.639718082 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.640563371 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.165998134 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.828905826 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.652089487 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.172533812 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.385837752 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.631140804 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.478177567 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.636855846 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.665789483 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.755389146 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.642610069 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.631820569 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332538027 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.643157765 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.630870937 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.152533503 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.633383407 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.062064178 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.649688413 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.632389566 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.371539496 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.647348521 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.713177144 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.643972743 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.63218102 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.645864044 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.655699792 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.044536599 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.692751362 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.645037054 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.646434858 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.683598242 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.645189238 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.63578937 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.655261469 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.477221929 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.640568818 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.644569118 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.649690299 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.644071009 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.634880455 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.646346928 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.644416933 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024946888 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.647975068 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.652052401 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.648006216 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.635593744 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.637377211 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.847814725 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.650833322 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.102597125 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.638566958 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.641193618 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.636349427 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.647736699 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.647649816 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.646991003 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.638074157 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.641695708 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.095156654 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.669563637 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.636511738 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.648176768 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.645987315 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.635592487 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.638399129 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.688249183 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.650220185 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.641357047 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.67054365 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.681272668 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.647405861 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.653688085 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.651355456 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.637760919 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.650311328 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.077857457 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.058629732 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.854948454 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.650972935 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.640728126 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.642736343 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.688027088 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.91806081 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.675783562 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.64741955 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.042198593 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.868350159 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.649535042 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.638160761 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.645743708 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032216108 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.650448077 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.070207321 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.437261889 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.637603916 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.659172371 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.64040965 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.51850588 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.653229646 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.653957392 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.06117405 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.662704384 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.65020915 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.651189024 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.650718572 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.647649467 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.658753323 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.645674495 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.652041436 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.651390585 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.719802777 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937669379 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.664005737 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.655870345 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.355524261 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.65360644 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.641349574 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.643211124 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.644753708 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.651482497 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.711134007 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.656442555 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.688771247 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.653751291 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.654573462 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.434724416 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.657957762 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.651655284 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937411943 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.587175436 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.651862434 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.653907874 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.640481237 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.691261857 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.378397561 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.652192363 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.128276648 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.648041068 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.730532702 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.652948954 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.681484775 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.394290434 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.675783772 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.646508051 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.578235752 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.651631118 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.438213058 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.654604751 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.655245894 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.494674568 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.651593055 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.654746739 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.652610224 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.664894118 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.050903401 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.655237374 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.691793768 seconds)
  done (took 575.598789218 seconds)
done (took 785.04736128 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.653345583 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.656994859 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.653992942 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.65442044 seconds)
  done (took 12.139560345 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.693101127 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.688495025 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.691721832 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.685016439 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.689964904 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.682824959 seconds)
  done (took 11.652179373 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.655141133 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.65638291 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.657134542 seconds)
  done (took 9.489891207 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.993649891 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.666587629 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.175557869 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.661990467 seconds)
  done (took 11.019767877 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.692068523 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.693445514 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.691881977 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.691848314 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.690957558 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.69356606 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.692849768 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.692394683 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.692887762 seconds)
  done (took 16.752909501 seconds)
done (took 62.574912566 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.02550869 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.902373619 seconds)
    (3/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.481671797 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.800009205 seconds)
    (5/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.641707231 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.832260024 seconds)
    (7/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.794755953 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.723151317 seconds)
    (9/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.645164165 seconds)
    (10/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.725320936 seconds)
    (11/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.640807605 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.662171286 seconds)
    (13/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.77840136 seconds)
    (14/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.725832594 seconds)
    (15/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.641418228 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.861774392 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.907029588 seconds)
    (18/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.642396215 seconds)
    (19/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.916214485 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.84381289 seconds)
    (21/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.965035917 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.818507647 seconds)
    (23/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.308001388 seconds)
    (24/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.643570317 seconds)
    (25/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.64789482 seconds)
    (26/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.986208861 seconds)
    (27/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.055773503 seconds)
    (28/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.645673657 seconds)
    (29/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.764239852 seconds)
    (30/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.815254719 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.643590362 seconds)
    (32/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.659970936 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.804484704 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.866754425 seconds)
    (35/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.88846354 seconds)
    (36/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.728912105 seconds)
    (37/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.650395068 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.836105625 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.793639192 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.661591394 seconds)
    (41/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.416701175 seconds)
    (42/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.874227023 seconds)
    (43/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.645207188 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.903672108 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.6605546 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.987773445 seconds)
    (47/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.994366672 seconds)
    (48/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.865228253 seconds)
    (49/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.150451884 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.645998769 seconds)
    (51/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.650271868 seconds)
    (52/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.645402813 seconds)
    (53/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.737766234 seconds)
    (54/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.645964546 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.922635134 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.848709671 seconds)
    (57/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.788237317 seconds)
    (58/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.645564775 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.829974259 seconds)
    (60/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.629160314 seconds)
    (61/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.646236229 seconds)
    (62/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.858082651 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.027013421 seconds)
    (64/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.960437008 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.662114226 seconds)
    (66/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.180029947 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.108081062 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.821274409 seconds)
    (69/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.648355633 seconds)
    (70/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.692106657 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.020504563 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.92124187 seconds)
    (73/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.724598778 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.87843063 seconds)
    (75/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.648712312 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.668767935 seconds)
    (77/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.781425417 seconds)
    (78/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.984712232 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.827540918 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.865729433 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.822304149 seconds)
    (82/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.842678318 seconds)
    (83/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.500462803 seconds)
    (84/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.650836605 seconds)
    (85/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.649598877 seconds)
    (86/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.190600774 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.866310374 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.728151394 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.726510962 seconds)
    (90/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.662750829 seconds)
    (91/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.817748193 seconds)
    (92/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.67033252 seconds)
    (93/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.474874423 seconds)
    (94/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.648238928 seconds)
    (95/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.872716147 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.825228194 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.84610969 seconds)
    (98/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.987060226 seconds)
    (99/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.21855391 seconds)
    (100/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.639383751 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.638510875 seconds)
    (102/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.623872701 seconds)
    (103/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.649814408 seconds)
    (104/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.952631546 seconds)
    (105/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.965233149 seconds)
    (106/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.941788477 seconds)
    (107/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.668534385 seconds)
    (108/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.636819528 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.90918091 seconds)
    (110/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.6664513 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.832477719 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.87512155 seconds)
    (113/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.915231329 seconds)
    (114/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.622091189 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.668095922 seconds)
    (116/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.603288449 seconds)
    (117/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.650669474 seconds)
    (118/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.651690344 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.723599 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.047992346 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.651867322 seconds)
    (122/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.652863608 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.652133627 seconds)
    (124/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.640416215 seconds)
    (125/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.978093164 seconds)
    (126/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.777678921 seconds)
    (127/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.734170036 seconds)
    (128/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.648406616 seconds)
    (129/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.832245916 seconds)
    (130/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.651270598 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.107979024 seconds)
    (132/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.680054077 seconds)
    (133/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.657356847 seconds)
    (134/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.63411716 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.889900943 seconds)
    (136/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.427515049 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.83838266 seconds)
    (138/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.924071141 seconds)
    (139/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.647460407 seconds)
    (140/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.735339249 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.801732259 seconds)
    (142/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.654052586 seconds)
    (143/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.864090328 seconds)
    (144/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.902145867 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.660240315 seconds)
    (146/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.553436509 seconds)
    (147/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.871066285 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.694817197 seconds)
    (149/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.50213634 seconds)
    (150/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.833462342 seconds)
    (151/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.832803529 seconds)
    (152/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.728536918 seconds)
    (153/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.730475782 seconds)
    (154/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.730831833 seconds)
    (155/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.664210581 seconds)
    (156/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.653004408 seconds)
    (157/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.640400012 seconds)
    (158/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.624157373 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.030999264 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.801161028 seconds)
    (161/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.655668853 seconds)
    (162/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.644416514 seconds)
    (163/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.63530523 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.65713559 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.748820502 seconds)
    (166/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.83218271 seconds)
    (167/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.652648218 seconds)
    (168/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.657902237 seconds)
    (169/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.655242332 seconds)
    (170/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.827225445 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.862769071 seconds)
    (172/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.803651219 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.682035543 seconds)
    (174/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.640787072 seconds)
    (175/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.659085349 seconds)
    (176/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.646201797 seconds)
    (177/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.663749559 seconds)
    (178/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.837159809 seconds)
    (179/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.733828792 seconds)
    (180/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.657217373 seconds)
    (181/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.656373621 seconds)
    (182/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.829331509 seconds)
    (183/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.577584482 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.970383245 seconds)
    (185/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.808938763 seconds)
    (186/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.653448808 seconds)
    (187/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.644380616 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.905943905 seconds)
    (189/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.847896789 seconds)
    (190/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.657274364 seconds)
    (191/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.65673484 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.640663314 seconds)
  done (took 428.747402386 seconds)
done (took 430.27427197 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.738266927 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.858364671 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.704872317 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.70607219 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.714233633 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.683649995 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.722088053 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.707215631 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.72803469 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.727703293 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.684275633 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.70094158 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.73059549 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.71472315 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.747742503 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.703856685 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.70622186 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.71583181 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.730500576 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.728646499 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.708240971 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.714217289 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.740457149 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.703314437 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.722437539 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.720855355 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.717103201 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.67440692 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.701221224 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.729450582 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.691004212 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.708355371 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.731051483 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.715867919 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.707826254 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.718686224 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.715190249 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.856326702 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.73782092 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.717436484 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.715943696 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.72929295 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.720109449 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.718949945 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.71464814 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.741956642 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.72381879 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.731077674 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.679802229 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.684183303 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.723646422 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.724943863 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.715897043 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.675791524 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.671618228 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.730509305 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.718712903 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.734883466 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.712999328 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.718746497 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.749876782 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.736542685 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.730560779 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.722923913 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.714037379 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.73033561 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.715941252 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.730402449 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.71331529 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.718444573 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.714948807 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.716771945 seconds)
done (took 133.41177597 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.88528632 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.677590845 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.922687655 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.714198991 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.940244007 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.890234785 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.711961556 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.712294839 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.712127429 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.566555565 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.716215449 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.715103436 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.681731734 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.71376842 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.887136626 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.716221176 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.714692071 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.473110721 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.715885449 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.90004106 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.685617773 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.715556567 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.715918554 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.595769615 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.681354312 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.68621743 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.899903193 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.717177583 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.479491421 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.686379741 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.682414573 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.497770981 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.899576196 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.735317948 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.725161629 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.724000517 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.942638655 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.722357082 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.888491616 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.889604537 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.928664113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.756762994 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.687886777 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.683967912 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.721569692 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.718281075 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.719195856 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.745024978 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.681695766 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.717975938 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.476664735 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.72852302 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.718730085 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.717189176 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.718427951 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.744965404 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.718286383 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.720027945 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.901584971 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.716272439 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.894801916 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.584873887 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.574041154 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.721155603 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.682967855 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.719657576 seconds)
  done (took 134.776923102 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.834576381 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.845998922 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.897088519 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.716358903 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.805046437 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.897225967 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.712613455 seconds)
  done (took 14.249442684 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.723534536 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.720400478 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.803988272 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.804742279 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.721243882 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.946034548 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.719414529 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.731403832 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.718196148 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.807872077 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.719596256 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.72185206 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.729386817 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.687422891 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.803445396 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.733193865 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.887811712 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.715720274 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.72026352 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.925172119 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.720888599 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.728727515 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.817699234 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.733573732 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.72139432 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.730299921 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.534767794 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.722099857 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.722113964 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.724309844 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.722412885 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.835436056 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.722230459 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.686768408 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.719966345 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.885337444 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.722829977 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.718497653 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.720911088 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.693158188 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.724732803 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.721935171 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.723665628 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.721963386 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.722744631 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.747385474 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.723936822 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.722990263 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.723415527 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.725208911 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.807586705 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.727206441 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.723559051 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.721268187 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.80998289 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.733466176 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.725462784 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.72184738 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.724660727 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.724050244 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.92972144 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.807564426 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.722792263 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.809163931 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.722813565 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.723645095 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.725330994 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.724001495 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.867488387 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.723592505 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.810296547 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.725260873 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.961678856 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.748414026 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.72561846 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.724877235 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.723919431 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.723840301 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.689471895 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.733821039 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.730226798 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.72490126 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.731468575 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.722469107 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.727044479 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.935957359 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.887278404 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.725506784 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.739574355 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.733948849 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.724286378 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.810727886 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.727051952 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.726869667 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.807354343 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.887384073 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.827855344 seconds)
  done (took 176.642583744 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.740665066 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.740084336 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.725814435 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.751418109 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.72181239 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.721634992 seconds)
  done (took 11.950690238 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.724247476 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.730567413 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.72859796 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.725412987 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.728860702 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.729384861 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.728651178 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.722330822 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.733097065 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.728334448 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.725114626 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.729740842 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.729782607 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.731439173 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.729646976 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.723794486 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.728701743 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.726984207 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.729830937 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.731724404 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.696527471 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.728407922 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.731286221 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.72576394 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.734591808 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.730308233 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.752694249 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.72229178 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.727872658 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.733948709 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.73423017 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.730177699 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.727425115 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.729073649 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.733007738 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.724352587 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.728230105 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.729865648 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.729370334 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.730093471 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.731133687 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.729903712 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.725888327 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.72555267 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.719365989 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.727058238 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.730043604 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.755277819 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.729785889 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.732663141 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.728286257 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.729911744 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.728404149 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.734365662 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.72680667 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.730442956 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.737302977 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.731601833 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.732863306 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.725380791 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.733080094 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.7337857 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.729453305 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.737880145 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.731736836 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.734383472 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.728131978 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.739069752 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.735471319 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.732116564 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.734099916 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.731753877 seconds)
  done (took 127.111496934 seconds)
done (took 466.271059831 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.17000444 seconds)
  done (took 4.723857831 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.907897506 seconds)
  done (took 4.467878353 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.70113525 seconds)
  done (took 28.264905545 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.732438392 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.704050145 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.716865043 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.688521145 seconds)
  done (took 12.397410314 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.371349527 seconds)
  done (took 4.928815459 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.711677861 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.688658592 seconds)
  done (took 6.960171891 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.209038105 seconds)
  done (took 4.766028418 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.544782336 seconds)
  done (took 5.106434764 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.739876349 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.717973983 seconds)
  done (took 7.022553496 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.68153974 seconds)
  done (took 4.237753209 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.440934354 seconds)
  done (took 19.996252247 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.704596374 seconds)
  done (took 4.263838369 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.737901656 seconds)
  done (took 4.296614395 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.110732517 seconds)
  done (took 7.668013509 seconds)
done (took 120.657272342 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.698944119 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.702840354 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.700500322 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.696162061 seconds)
  done (took 12.353211327 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.851650548 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.852100396 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.855925534 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.84384355 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.844559982 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.856372937 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.770176081 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.769710659 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.83219137 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.826291528 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.860208481 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.844434687 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.856784652 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.769570279 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.829786106 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.858865503 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.830263542 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.858130492 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.774274787 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.845987538 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.739569676 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.845759437 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.830905104 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.737110704 seconds)
  done (took 45.345371644 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.312513065 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.859555394 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.938440356 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.819140898 seconds)
  done (took 9.488202655 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.902782609 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.90070972 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.91648498 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.950430428 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.001263778 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.91578559 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.772135828 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.768805307 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.754877139 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.90643468 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.978274333 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.897630348 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.120322424 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.739056273 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.120013376 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.735533478 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.740752228 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.902567918 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.95206241 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.981414955 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.737791307 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.900745968 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.906731436 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.90312525 seconds)
  done (took 46.966212953 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.754244726 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.763257744 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.739076456 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.763978925 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.741352305 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.741359079 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.741783784 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.753224764 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.740069809 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.73983151 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.741093682 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.75764048 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.739725352 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.742233702 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.756330885 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.741524673 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.743722997 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.756338429 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.758789648 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.741850273 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.737077041 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.755480568 seconds)
  done (took 40.010937146 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.702690545 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.705978114 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.142605006 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.046649438 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.708334628 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.693685838 seconds)
  done (took 16.56265982 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.839724242 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.044964377 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.727810149 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.211331902 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.334749831 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.737868272 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.734637694 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.097201258 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.495359571 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.466662136 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.801024138 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.840645238 seconds)
  done (took 25.894766227 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873349956 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716242548 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.705006481 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.797913618 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70231445 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.702293986 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.7868458 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323523683 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.727580302 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070090407 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.734750139 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874003251 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052778709 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715542808 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.718210256 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.713481092 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032442463 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422856566 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706114235 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72983869 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776893696 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.729371661 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.714085918 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012416243 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716709157 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71193327 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.065713943 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.717147131 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15029935 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086702994 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102996337 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.711101041 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075869285 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301250808 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883035545 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016248505 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713662122 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.712693563 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.712613734 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.70345838 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.716222852 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.721017736 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098365302 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720841596 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.715582408 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718750478 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336784587 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.737870856 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.721298008 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.723183444 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114235477 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881496314 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.745551582 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.719252008 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.744653703 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705092805 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.744181994 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925823878 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.433969222 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721299056 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719305926 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.720494555 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.726904378 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.740755511 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.57011342 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.73401443 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.749280757 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.748374636 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720510199 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.706087764 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773933194 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722329355 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.756881514 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721638974 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700503046 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.710574858 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723467838 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454976712 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710792204 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.723071698 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036999259 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720527101 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721552301 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.721017317 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.722263425 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.713336033 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738899828 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.697259058 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770315764 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345274633 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.005727544 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774200197 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783374268 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.027656171 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.69697208 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.722826275 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.719958942 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720578993 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759688854 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351232443 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709842362 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.735057509 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061571797 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.025454634 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729819274 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.714385468 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35583694 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71126007 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.772829283 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.742183416 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022665382 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.554390191 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124866507 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73750398 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791587813 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.725440644 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.742916121 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.710826426 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.751091043 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.723938638 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141464497 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.722091196 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712647886 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874625817 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.731313319 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.729069109 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.726073406 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.727326289 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.726566625 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.024182754 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.728501578 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112165032 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.726876371 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72546006 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.721093653 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724486124 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.729876264 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.038294744 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73139636 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083638779 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.727474772 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723966435 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712148102 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.017528137 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.734340379 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.756780733 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155502037 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.745576934 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.74394635 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11620549 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793817985 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924998494 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791014067 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.744750362 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.061646666 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.754158123 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.757580765 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.729623997 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.731190607 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739117104 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.760445585 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724275761 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571598665 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725479826 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.721902695 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.729224435 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.767747979 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877744858 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758675876 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029427765 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.73094756 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719060433 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.758162333 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.739186247 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036152782 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108256294 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.735239027 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97742164 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.357884965 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.555628198 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.778822084 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.729165001 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.72729493 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.73065276 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.730335401 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729222131 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.731078512 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029582952 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132431016 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.733721446 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.575598754 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.736736425 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.739727168 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.758259483 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110825057 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.762008004 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732823776 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.729805445 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.744303099 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.734949884 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109307127 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034713563 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.776717835 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.731596106 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.337930892 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759833077 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.732849618 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.729141185 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790061712 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.740318583 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43874448 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148864252 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.737950335 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120973903 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.740366146 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.780271849 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.733135408 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.730366061 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.735205504 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.741547791 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806881099 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.030971466 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.740207606 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739071987 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.445563643 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726029127 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.495236092 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.751935495 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.725805565 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.732051122 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370057603 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721339564 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.73307283 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119846385 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367074752 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720768333 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348770329 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.734009751 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.753921989 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128808069 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042384301 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.745159284 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.735715275 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128414514 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037259767 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789774105 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.740236101 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.734912101 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.695764595 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443904913 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.720858917 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991987598 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370550752 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.737666361 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.734910354 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.792873661 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.721528904 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.306336651 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.720701146 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736459224 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.735501491 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.750761811 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44950786 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.73065241 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.737087028 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.610173962 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.745183727 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.373625864 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722368466 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.036920826 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12373871 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.115719604 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.743246959 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.753818276 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.070695233 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133954534 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742657568 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.748972198 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.512133422 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.689233666 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.769362012 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739979574 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.762234848 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729250835 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176673444 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.741409505 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.738762241 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.749123474 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.740992832 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73964266 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.739459047 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.750533919 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.739659491 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41717414 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.726370441 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.740841905 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.74387162 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.739247707 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.067786553 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.780489474 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.585292446 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052607598 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.747905862 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805215104 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.764686626 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.737710919 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.714691232 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.739733803 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.739970635 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.749485182 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.028276431 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.744932299 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.702809415 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.806825784 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023019548 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.733493903 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.755004739 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076058345 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.736764081 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.751784427 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740593549 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788302968 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.757630073 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.744705384 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.717797634 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801112557 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887552531 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041653621 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.134892713 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.132678464 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.306670981 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.747904046 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.745538103 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.787849139 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903514337 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742426603 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.742655822 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.73830038 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586979462 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.748015932 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.577850507 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147653972 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.742944407 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.746584185 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.747512167 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058667237 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.74305727 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108432364 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.746144255 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.723782543 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781760236 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.767397446 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.748002871 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038912351 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090866514 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.745343036 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.752217374 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.741933804 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.747581588 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146470582 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.044921844 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.453332718 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.488064299 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73117622 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.745661861 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384533397 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090184932 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.745441861 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.74905915 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.74479541 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.764098913 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.744881315 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.762124219 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.742637315 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05579222 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131674845 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34157528 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112065438 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.77830477 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.702414323 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.744477562 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.080061578 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662269273 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.048036066 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.598341241 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.718104167 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08790203 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901551797 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048094244 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.751295329 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067709239 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.74799449 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.746889252 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.7497591 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.749946834 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.741325066 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128629206 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591758072 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084918131 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.778550541 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.750848205 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809196407 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.052662144 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055056652 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.751165075 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040996624 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15146989 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.759173006 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.749514097 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.60585337 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152146442 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.750928662 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.763556455 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09424725 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.751196504 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815495113 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.707580761 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.746989544 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.504644271 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.037063163 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797924932 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.758272822 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.723516447 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603496716 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.751055354 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.451071047 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.736726926 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.752680561 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121242792 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.779656268 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.76831572 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126399453 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.782465913 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.769352723 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057560951 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.598975679 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.746870186 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.77237699 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.749298566 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.750920142 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.753497355 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.798014817 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734221998 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.74043061 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.310611705 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.738301637 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.751520637 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.778355194 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.752937088 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.753430167 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.752572097 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.753567615 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.76740457 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.735545142 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.713004636 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.760911915 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957129325 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46707392 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.743718108 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.455986686 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.177227076 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09132537 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.756660745 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.730473827 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.781606726 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.752916205 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.75236872 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739267263 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.762823191 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.520919245 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.742469556 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.145805901 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782171392 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.052166969 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047384238 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.754704073 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061721466 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.7594266 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.80515106 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.734266068 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.756928238 seconds)
  done (took 1175.782468667 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.768807402 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.819774847 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.743429384 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.762510372 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.800905758 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.8752495 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.808994146 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.832982951 seconds)
  done (took 24.008679177 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.747367805 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.782046516 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.766962824 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.780102903 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.75034856 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.416193009 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.760708327 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.7648833 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.806394933 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.7626921 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.747718198 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.579236578 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.784897437 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.751045017 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.769032641 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.765624665 seconds)
  done (took 39.340805211 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.456938903 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.775879042 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.645172546 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.759568448 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.811877055 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.76678459 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.410658017 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.766076608 seconds)
  done (took 31.99157365 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.798030532 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.789602714 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.79294001 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.794879013 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.797775122 seconds)
  done (took 10.572260341 seconds)
done (took 1479.87667388 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.785190701 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.788746809 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.784199234 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.786945323 seconds)
  done (took 8.743044629 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.734065345 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.719762408 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.721226212 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.762627916 seconds)
  done (took 11.538133167 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.298637139 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.518802706 seconds)
  done (took 6.419188362 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.758449312 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.606259357 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.594615768 seconds)
  done (took 9.56271206 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.147693083 seconds)
  done (took 3.748756808 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.273427717 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.359678141 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.754493152 seconds)
  done (took 8.990887668 seconds)
done (took 50.601733155 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.752445195 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.501519991 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.912086517 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.757447158 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.901207828 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.913678548 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.99854786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.757212562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.735342602 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.763464404 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.741861937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.904376527 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.99228617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.517882057 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.991319985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.521520928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.920875273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.763932341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.73547991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.735846298 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.982400765 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.760282785 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.74262167 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.771659441 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.900998305 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.899762742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.755001806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.504945636 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.768746431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.739026101 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.908061423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.749979938 seconds)
  done (took 94.898302783 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.771576889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.738615225 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.740544171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.738847098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.739176609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.740892959 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.740585028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.747613506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.739508076 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.748109449 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.742070273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.751642371 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.741467054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.73931685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.739628133 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.740325568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.740660737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.738777606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.760647216 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.764569293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.755576948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.759080048 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.757079514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.756417139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.765669433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.75828267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.752066447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.756236809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.760757566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.754408784 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.751158789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.756199583 seconds)
  done (took 89.589504646 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.755791921 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.7386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.753508739 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.751301405 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.751731906 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.759464803 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.755333482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.752388345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.757789661 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.756292473 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.749223627 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.74357228 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.755753088 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.749187169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.757616594 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.75025651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.75424738 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.755554669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.753293209 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.752920605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.745219067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.761649928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.774081677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.769770373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.765185014 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.762480341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.753704504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.761669623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.759943775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.758356212 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.755191494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.760056848 seconds)
  done (took 89.78795104 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.083416753 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.795057388 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.796992969 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.766961288 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.797387782 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.798120417 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.770530037 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.090497193 seconds)
  done (took 18.501247819 seconds)
done (took 294.376505009 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.772390679 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.785483545 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.827454525 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.776505449 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.819252434 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.829276614 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.09886369 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.826617197 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 2.074541951 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.774457353 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.811525683 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.755832149 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.791363274 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.999116648 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.778466172 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.769583269 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.770055047 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.765739344 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.778444661 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.120544449 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.83370525 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.749116001 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.785098021 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.778627576 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.759629839 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.884427622 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.887875825 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.021527598 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.985492708 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.881858999 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.765068449 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.800260914 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.775056241 seconds)
  done (took 80.440392597 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.788721317 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.798834335 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.800358691 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.800878868 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.796760678 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.800941656 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.792203045 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.801535447 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.800488317 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.801224583 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.80704306 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.803270374 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.803137745 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.803075238 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.798047363 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.78134503 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.792640671 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.800500888 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.796041173 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.781638573 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.799083668 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.800254907 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.799329859 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.801228774 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.803686978 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.802785675 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.803419206 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.807673099 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.802869136 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.799254082 seconds)
  done (took 55.578847353 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.800709015 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.763266544 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.765360316 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.837968013 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.778712642 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.800123047 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.207748066 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.803465999 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.804296203 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.786329742 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.780286097 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.806313848 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.869522025 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.752534314 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.799019624 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.787715183 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.803449028 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.798378411 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.766430285 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.820028301 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.217120627 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.800048526 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.210962092 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.813941075 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.785272694 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.78298197 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.79276827 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.75233757 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.803510139 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.755322378 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.770759256 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.180570029 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.778714389 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.758949305 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.770884063 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.788985526 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.799450126 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.771711403 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.800913371 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.792179509 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.19629675 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.785346936 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.770533529 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.761972734 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.794470373 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.797386665 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.771410806 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.764897966 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.111841667 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.798594569 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.764634525 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.798946501 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.794272721 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.789338923 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.103801747 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.789632746 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.786718619 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.763865224 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.797473687 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.201473526 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.793415629 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.801841002 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.77009751 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.79295768 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.77105664 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.788316377 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.818647469 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.796555694 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.787504403 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.803887142 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.766126195 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.80180706 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.801303783 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.770550291 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.757462454 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.759730899 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.786281551 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.768254538 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.756516035 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.214842125 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.796118766 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.767185339 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.213746176 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.79227114 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.807008978 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.809952927 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.805222927 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.925803205 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.204316205 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.763679934 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.773201606 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.773865447 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.207453406 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.803812412 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.800926849 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.767052291 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.793891668 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.809832381 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.78952512 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.768044666 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.806879143 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.821437419 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.768234634 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.805773974 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.208298904 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.801916989 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.782213436 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.797262417 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.923850233 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.808862636 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.82559549 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.801620584 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.227732242 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.791798036 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.807435289 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.776013625 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.794358487 seconds)
  done (took 254.849126491 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.791529425 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.762686512 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.789621012 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.761136245 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.774789308 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.806833327 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.774119461 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.782068446 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.80471979 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.773961689 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.780461608 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.803168336 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.801760056 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.77078852 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.781079144 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.779877595 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.778170953 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.765241027 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.78096244 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.78076395 seconds)
  done (took 53.26377279 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.81264049 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.577439212 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.53441775 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.797187478 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.817151468 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.808606667 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.889237032 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.815872885 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.816694567 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.238175609 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 2.032320171 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.81945204 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.814326598 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.813964472 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.54338153 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.779231633 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.231481112 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.562996873 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.800133732 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.576523872 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.783110688 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.815218891 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.802100463 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.576480431 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.239113926 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.204075812 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.879077849 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.578600114 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.801065834 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.813973201 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.579290495 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.805009631 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.811165093 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.565033584 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.804303397 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.839813149 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.817649647 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.896983059 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.899094082 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.247329706 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.573722608 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.215531807 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.824259356 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.068849538 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.815892161 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.799435878 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.58911004 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.804704426 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.798193891 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.821766022 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.8225062 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.560207063 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.79735356 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.560884384 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.820777837 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.818621837 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.584308661 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.542999847 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.544799098 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 2.044790193 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.81124597 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.213078353 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.821298853 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.602873313 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.807401276 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.815900751 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.817719907 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 2.05062627 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.590778338 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.215588798 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.250898875 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.246866448 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.818379697 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.898973466 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.814928142 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.250140189 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.900391244 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.286522609 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.248879903 seconds)
  done (took 165.337132052 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.185169636 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.922327972 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.375870563 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.575628298 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.495698929 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.020867598 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.956098118 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.138585011 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.777844235 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.960740958 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.721061317 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.922850595 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.681158338 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.89515217 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.943196408 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.999435194 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.392384744 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.780606109 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.646511124 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.693246257 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.793402638 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.996075129 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.691758847 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.271783793 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.769216603 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.657382269 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.780701443 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.547031225 seconds)
  done (took 68.217728248 seconds)
done (took 679.295074901 seconds)
SAVING RESULT...
DONE!
