cset: moving following pidspec: 6029
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.137934021 seconds)
loading group "string"... done (took 0.627427622 seconds)
loading group "linalg"... done (took 9.59463253 seconds)
loading group "parallel"... done (took 0.168993697 seconds)
loading group "find"... done (took 2.414567104 seconds)
loading group "tuple"... done (took 2.263326294 seconds)
loading group "dates"... done (took 1.39981453 seconds)
loading group "micro"... done (took 0.628818302 seconds)
loading group "io"... done (took 0.667147686 seconds)
loading group "scalar"... done (took 53.257754846 seconds)
loading group "sparse"... done (took 13.401084244 seconds)
loading group "broadcast"... done (took 1.331387671 seconds)
loading group "union"... done (took 10.269284872 seconds)
loading group "simd"... done (took 3.561896802 seconds)
loading group "random"... done (took 13.315784571 seconds)
loading group "problem"... done (took 2.165252159 seconds)
loading group "array"... done (took 23.40733064 seconds)
loading group "misc"... done (took 1.523299087 seconds)
loading group "sort"... done (took 3.722452206 seconds)
loading group "collection"... done (took 20.374709731 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.898950697 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.177609527 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.240207013 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.561621069 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.306941547 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.204834987 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200417316 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.197744908 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.650985227 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.231156351 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.196082826 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.400739438 seconds)
done (took 7.064753975 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.299500027 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.091543205 seconds)
    (2/2) benchmarking "String"...
    done (took 0.236395005 seconds)
  done (took 0.986993178 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.09609993 seconds)
    (2/2) benchmarking "String"...
    done (took 0.1540529 seconds)
  done (took 0.911214967 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.134152115 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.20200397 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.150599877 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.149554982 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.136002001 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.150432887 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.135226414 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.149583966 seconds)
  done (took 1.733353802 seconds)
done (took 4.723809711 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.51975548 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.925701725 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.540390158 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.214094613 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.345452379 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.361937506 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.372658912 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.271477749 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.135289272 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111738441 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.238470689 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.498646162 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.446908437 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.975225132 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.095742622 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.153417624 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.200431354 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.818944783 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.123024094 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.154131193 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.525517596 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.250190405 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.159146285 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.148223109 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.227882261 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.167153519 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17019322 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.148197756 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.72197051 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.178385882 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.23528816 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.125118355 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.170647399 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.203357494 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.276442277 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.151896271 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.728802734 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.24236881 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.12254624 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.141521977 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.724337781 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.158396609 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.248111859 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.146970715 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.11105672 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177668543 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.138231894 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.135397735 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.135983005 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.144056797 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203925513 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.514198069 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.152047198 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.235836206 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.150139763 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.745132534 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.139699468 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.317696964 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.180867134 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.147483908 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.119744207 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.145455089 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.199055271 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.141092244 seconds)
  done (took 22.797254596 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.248333604 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.249065681 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.121033129 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.204023291 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.183879738 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.123075777 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.147525044 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.120855801 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.171741602 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.237733374 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.165933811 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.254431028 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.136184148 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.131901689 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.228119092 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.293233868 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.169839265 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.147248613 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.148805585 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.13617423 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.184564881 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.137133919 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.153325852 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.152730665 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.210826321 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.249141948 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.15030822 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.167241519 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.147687356 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.139337761 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.186534545 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.209284365 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.120045433 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.147110397 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.233694452 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.149391274 seconds)
  done (took 7.043481996 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.275464219 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.143676022 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.30583952 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.229222655 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.168924065 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.232358179 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.21867271 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.325803511 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.419687169 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.167555106 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.21889229 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155641929 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.154533199 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.120919427 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.142170593 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.121782665 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.137651722 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.869393517 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.193120787 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.199650877 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.226524406 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156245777 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.139246199 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.414861136 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.126670717 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.14277465 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.136340103 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.109130987 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.26422075 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134949982 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.513531854 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.144167146 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156321555 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156090869 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.25109422 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.167951525 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.177386314 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.153061713 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.126834285 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.248297426 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158428457 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.119603548 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.138111766 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173503069 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.158494596 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.150185718 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163149309 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175747978 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.130165924 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166701506 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.191171377 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.240094847 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.225811886 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.12737772 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317812761 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.166260249 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.140854923 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.150636055 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.90133033 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.164976775 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.250111484 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.124509757 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.138205843 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.137422294 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.139903405 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.501709261 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162671524 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.723023367 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.124266849 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.202735837 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153223814 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.15849746 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129444743 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143701234 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.149055407 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.145951032 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122750945 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.145680956 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.122481218 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.148264734 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.142232123 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144286435 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.12201796 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.207313235 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.141728498 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.163506406 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168532395 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.132912852 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.146452842 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.169311824 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.125331092 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.146892143 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.244572233 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.137960701 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.160262768 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156466196 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.185443065 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.133098909 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.366762351 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.128590794 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.180699375 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.142389057 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156295085 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.155690818 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123009078 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144872263 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.143579501 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.122249833 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.13969472 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.191383905 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.130875861 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.139752967 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.12945913 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.152801553 seconds)
  done (took 32.991250145 seconds)
done (took 63.493475324 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.48169666 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106522066 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.127255358 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10698225 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.126733784 seconds)
  done (took 1.686717704 seconds)
done (took 2.408006982 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.229306534 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.331337735 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.24414641 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.146467438 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212520461 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209799095 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.195271829 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.207546505 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216642144 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.230541468 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.125667377 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.232634262 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.222315701 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.211310879 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.124580926 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.245269388 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.20883319 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.194667353 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.237672681 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.14955994 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.158156564 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.14779121 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.163590566 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.12952974 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162728305 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.146257985 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.166192153 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.145729774 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.155385821 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.130771727 seconds)
  done (took 2.387230736 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.187600323 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.14615874 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.157638063 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.137880871 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.159850635 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.130285353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.141707126 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16155525 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.166584592 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.144658619 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.157130177 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.131183372 seconds)
  done (took 2.367071469 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.121099129 seconds)
done (took 9.838032476 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247012906 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.580674191 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.197811747 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.309750702 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.3735306 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.315490678 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.668905312 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.249306564 seconds)
  done (took 15.78602705 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.159644813 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.157988945 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.246128017 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.139759812 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.154789517 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.136706351 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.156174678 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.134734313 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.156108748 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.136552421 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.155182653 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.141189392 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.152782627 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.136968884 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.155592063 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.137374383 seconds)
  done (took 3.252151269 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.17972027 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.178679705 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.141848206 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.162380775 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.139640942 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.162098476 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.145946353 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.160331003 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.137558973 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.156074246 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.146773692 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.158890806 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.158681352 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.138617138 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.159409587 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.162654273 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.155444348 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.143691317 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.17757754 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.144044784 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.160079295 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.141154891 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.158820686 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.142505483 seconds)
  done (took 4.520699874 seconds)
done (took 24.292994801 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.195445385 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.148059191 seconds)
  done (took 1.09083669 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.209824378 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.227518527 seconds)
  done (took 1.188922488 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.157017383 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.152523446 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.165927105 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.16456555 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.136404357 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.152791287 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.177088301 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.136848059 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.15126756 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.137529151 seconds)
  done (took 2.287783943 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.139491621 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.156553916 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.151464722 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.221012952 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.161713441 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.138293354 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.157122843 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.138960408 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.158805739 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.13622703 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.156494901 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.153286881 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.157869796 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.153980754 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.157525409 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.15741911 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.146556696 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.156057415 seconds)
  done (took 3.557131671 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.136118427 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.136947932 seconds)
  done (took 1.028388247 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.139433932 seconds)
    (2/7) benchmarking "second"...
    done (took 0.150615452 seconds)
    (3/7) benchmarking "month"...
    done (took 0.138999799 seconds)
    (4/7) benchmarking "year"...
    done (took 0.153349389 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.136569811 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.150913255 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.135772852 seconds)
  done (took 1.763732525 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.577028406 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266173652 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.393773468 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102514502 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153660392 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.371393178 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154947916 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104788815 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102537061 seconds)
  done (took 3.013040764 seconds)
done (took 14.684293024 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.137933043 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.328623563 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.643434266 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.174699031 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.135402903 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.213694423 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.388706134 seconds)
done (took 2.787982327 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349734209 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.206665597 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.11934702 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.138601564 seconds)
  done (took 1.575026126 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.128556851 seconds)
    (2/2) benchmarking "read"...
    done (took 0.159717587 seconds)
  done (took 1.056361986 seconds)
done (took 3.397782287 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.155966761 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.153654316 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.139452231 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.155802145 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.140035266 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.155055402 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.139831679 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.153095796 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.139485125 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.153499687 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.13982672 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.157288716 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.136679043 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.15651285 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136589436 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.273557133 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.138649195 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15401337 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13647776 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.156409205 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.137761723 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154668342 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.138461951 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155721618 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.138142078 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156665663 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.136628757 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.154371516 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155195853 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.140354231 seconds)
  done (took 5.303016187 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.141900936 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.131282337 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.153230728 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.141689108 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.149600938 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.134850878 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.149724137 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.134960668 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.154455535 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.134126413 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.154252297 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.135479589 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.153076868 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.136636789 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.154644874 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.138301875 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.160929892 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.135359252 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.154530126 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.136514636 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.156376241 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.135302821 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.154402595 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.135630446 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.152497535 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.132838471 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.152502912 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.137223316 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.152472392 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.136178351 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.136480833 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.15556259 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.135198129 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.163195194 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.136928027 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.153772976 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.139706662 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.152149515 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.135475887 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.15224017 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.132344134 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.154012881 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.13786844 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.159298609 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.135442782 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.15448417 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.135662713 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.155017688 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.135838503 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.155558399 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.132804807 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.153906722 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.138272612 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.155664627 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.139120275 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.151380563 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.137534947 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.150254163 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.137980605 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.152388094 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.133956281 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.132771843 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.159493397 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.135903386 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.169514294 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.158917206 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.138346434 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.155035567 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.138296846 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.140338097 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.157001599 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.163234724 seconds)
  done (took 11.254449606 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.136958548 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1352371 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154507148 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.134899138 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.15426005 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13831703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.154912297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136039506 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154085097 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136951564 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154416773 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.136594186 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155061827 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137120789 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155152621 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.136374046 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.154332964 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.137110941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.154181129 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.137606396 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135560814 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.155418577 seconds)
  done (took 3.964315574 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.279975408 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.143572238 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.203515335 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.167453208 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.156198564 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.167479189 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.14104964 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.160928705 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141337526 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163984541 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.145632206 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160176793 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.171549678 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.146429514 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.164106484 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.147226194 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.16001553 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.146838714 seconds)
  done (took 3.751829545 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.138768764 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.135425601 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15570332 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136034408 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.155774349 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137465875 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.156329656 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137414122 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.155990297 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.136932358 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.155318983 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138244046 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.155652894 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138236364 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154860196 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.137905665 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.155363263 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.137735252 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136153068 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156312964 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.137116529 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156549796 seconds)
  done (took 3.993815904 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153647053 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.15840499 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157682342 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161756184 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138878136 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.157902831 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.144094929 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.158144831 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.147029521 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.158081624 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.140327901 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.157842418 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.154232951 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158454437 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.144437222 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.159119256 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.140001114 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158647409 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140062993 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.157105453 seconds)
  done (took 3.836294336 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.25041711 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.156383085 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174406047 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163195054 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.176565679 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.155142144 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.183171268 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.155019992 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.17550039 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.184960253 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.155844609 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.174560536 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161983797 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.179375534 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.153663116 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182618613 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.181498988 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.163024851 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.175581057 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.15454577 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.185211821 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174511647 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.163060261 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.174477425 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.156971149 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.175388784 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1547921 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.180518486 seconds)
  done (took 5.615207702 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.151436087 seconds)
    (2/2) benchmarking "in"...
    done (took 0.166917664 seconds)
  done (took 1.115177705 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.141664663 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140352555 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.161926666 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139235723 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.161417174 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.140348504 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.16035426 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139236281 seconds)
  done (took 1.979349609 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.251105395 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.255950146 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.143426409 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.17154451 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.254279682 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.234988402 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175474828 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.166319893 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.140446072 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.153629103 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.247483427 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.152452208 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.139067615 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.156306748 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.139428764 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.164179537 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.140899761 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.167664617 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.146699801 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.161624813 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.144552111 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.163135131 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.141241075 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.178289641 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.134405429 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.162394114 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.142147406 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.171384364 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.135389075 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.160569022 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.13760018 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.160852438 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.143046124 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.164905398 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.140555095 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.252821815 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167798573 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.135178083 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.162958152 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.164903861 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.166525506 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.160228196 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.141543558 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.158134844 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.143713387 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.164266978 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.144532834 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.15969873 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.132857816 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.154455465 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.141242682 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.154249224 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.140903043 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.15927179 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.140615787 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.16548962 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.14193418 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.155970463 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.136962109 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.155193059 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.138540243 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.156020609 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141941932 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.163104121 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.140592738 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.161967384 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.139163088 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.160571327 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.140679133 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.16130061 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.140186611 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.174681291 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.14027943 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.165536902 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.144770434 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.162093587 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137555201 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.167075855 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.138710516 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.161242501 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.143499323 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.182235395 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.160487098 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137082656 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.155159466 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.148906715 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.162812045 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.146149451 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.132959017 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169995151 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.163063962 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.143239305 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.152936557 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.141444942 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.155463415 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.145958086 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.153803497 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142872289 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.139620828 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.165748521 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145992168 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.15939946 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.162084508 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.147280671 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.166437716 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.140682625 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.210516714 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137533481 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.158221727 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.142008142 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.166649614 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.136564224 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.160708076 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.140441672 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1582688 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.136678763 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.165680426 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.140607825 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.162644705 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.144686137 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.163555156 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.142179881 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.163538255 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.141466383 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.168417157 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.145068936 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.169189741 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.141987819 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.163417709 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.141662288 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.162521016 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.140359609 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.167032833 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.137738325 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.166644375 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.138004072 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.161671746 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.142293305 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.165522235 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.14058792 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.157464437 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.138869684 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.162390692 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.160122597 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.145027521 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.161182857 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.138252777 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.15307617 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.142307832 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.156174189 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.142957355 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.169053621 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.137856148 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.163193099 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.138749138 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168430287 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.139686898 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.165783791 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.145950473 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.166471798 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.147071356 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.15369671 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139550776 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.163674236 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.143450225 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.157064805 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.144349222 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.160745372 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.149833788 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.154152145 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.146152385 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.153319916 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.139509919 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.164718782 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.145322669 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.163991874 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.138553932 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.193476559 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.154053249 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.16728482 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.141649437 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.161191937 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.147113191 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.160477321 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.146790734 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.167027804 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.147328232 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.158349745 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.14129199 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167574941 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.13878357 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.162937619 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.14111159 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.16172727 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.135411773 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.163321747 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.135117531 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.165769195 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.144060079 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.165594451 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.147385851 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.163302191 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.14153846 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.170475799 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.138747811 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.166107157 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.135196871 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.166474941 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.153302665 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.167740604 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.148400296 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.163041054 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.140817907 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.163851493 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.150693674 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.163866579 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.142878155 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.164240718 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.136279621 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.155714983 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.148608004 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.165173798 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.138501063 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.161429676 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1437078 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164166407 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.140198484 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.155366475 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.146889839 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.166672591 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.137847278 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.163217752 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.138933799 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.161065384 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.149174487 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.156201498 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.138787481 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.165503448 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.146508855 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.162626407 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.14156905 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.165392261 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.148716747 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.166159328 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.14463606 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.159656337 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150219382 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.162021302 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.142400301 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.159518818 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.144696194 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.155606799 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.143436466 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.162788159 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.139440078 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.15927633 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145491686 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168646585 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.147770886 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.162359683 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.146707413 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.168373785 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.148003248 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.162040158 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.147226683 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.159535302 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.136037202 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.16085174 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.135184369 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.165085588 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.138727418 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.167427436 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.140745202 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162044769 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.145662378 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.166622027 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.139678167 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.168347385 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.172402231 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.138885608 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.156233764 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141250643 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.162048121 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.139901659 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.158444171 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.146095464 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.163232489 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.147835349 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.164617302 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.139888529 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.163856661 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.151639186 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.159866209 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.150106798 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.16732442 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.14922582 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.15862492 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.147775636 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.158742882 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.146988803 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.156861567 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.143032854 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162108882 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142643419 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.159361746 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.141874257 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.158607181 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.137224922 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.159530691 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.149642632 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.161170495 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.14764147 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.162499924 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.141255532 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.161043803 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140558237 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.169966865 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.141555361 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.169288218 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.144176365 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.156803669 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.137291132 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.167889017 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.143286448 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.168828243 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.137691951 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.166925836 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.149788461 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.166644585 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.144594365 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.171524885 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.152292621 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.169793868 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148154595 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.157509555 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.141351215 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167156172 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.144224485 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.165956719 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.145401172 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.158377473 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14589467 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.16935303 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.145158613 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.162353606 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.138832738 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.165276394 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.149518175 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.167472903 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.146244854 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.165735531 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.144698987 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.159509809 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147811254 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.16930051 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.14376947 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.169783392 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.144699476 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.168040223 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.140934472 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.171040536 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.145099038 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.158769072 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.137865367 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.161384559 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.150140951 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.159004647 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.149429058 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.169011925 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.141499069 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.162922045 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.149016855 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.161729505 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.147596073 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.169196167 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.142974117 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.173615584 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.146346403 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.161817923 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.149499947 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.169182688 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.138557214 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.162633251 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143409298 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170549272 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.142925787 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.169061024 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.143895044 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.169450389 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.147305883 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.169927126 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.149118823 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.169992218 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.139146954 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.171492968 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.147936549 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.166942458 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.142117374 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.163411492 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.139548402 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.163556273 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.150622157 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.16192066 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.152144417 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.169218865 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.142171012 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.16332035 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.150142068 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.163880477 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.151011801 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.161713162 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.145869039 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.158728704 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.146614036 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.164528185 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.151146036 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.162578146 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.139627742 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.171812351 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.149029985 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.170797348 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.146789127 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.172853196 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.138158909 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.1597076 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.147524696 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.162347321 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153624634 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.168503201 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.143187692 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164273823 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.146678918 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.167510827 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151374417 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.161320165 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.142023088 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.167095411 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.146623534 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.164435016 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.139751431 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.169886617 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.143909152 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169000611 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.143316479 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.162846197 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.143824783 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.172947831 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.142870961 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.164037131 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.142382421 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173236206 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.143729799 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.163651677 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.139055881 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171533265 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.146606632 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.172746129 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.141279488 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.167209951 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.162164965 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.148212423 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.170960707 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.144086549 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.16486028 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.144482968 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.17054592 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151533795 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.158276901 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.14381326 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.175321178 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.150785445 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.166208217 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.149292588 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.164706908 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.152718094 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172955094 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.148469928 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.159627002 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.140912821 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.163858896 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.140490491 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.16762816 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151029192 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.164072191 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.143310193 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.169913366 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.151322664 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.16773383 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.148343515 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.159888559 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.153133998 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.162995867 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.148928645 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.160005822 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.140647564 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.168351646 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153189802 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.163934324 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.147228429 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.146947736 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.170027068 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.140585196 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.164936477 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.169098319 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.151220487 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.150361649 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.166831621 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.143397355 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.169750008 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.174911279 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.149377655 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.166093118 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.153608221 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.172643183 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147454156 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.165547378 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.15008403 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.173571164 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.148754322 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.172955932 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.143651228 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.165910903 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.152624366 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.172901457 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155158627 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.16578428 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.140037291 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.169803926 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.144239711 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.161069993 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.149078804 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.174368123 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.152061795 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.166306413 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.143266263 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.175259088 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.150617268 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167582764 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.143720581 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.165626439 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.150003782 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.165254395 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.149693966 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.164947093 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.15308951 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.174760212 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.151913312 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.177063438 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.14057437 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.173642332 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.147733242 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.176659196 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.147457718 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.163171867 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.141869228 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.170024135 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.153937452 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.173696809 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.150674468 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.171391069 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.151492169 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.168605239 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146918613 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.165761023 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.153189871 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.172035913 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.148149216 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.169448992 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.145125089 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168344243 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.148697261 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.173425824 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.153660602 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.168818186 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.156702958 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.175707958 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.145426455 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.165640477 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.147048797 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.171007151 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.147825432 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172293698 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.143659121 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.162742413 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151741084 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.17476992 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145815889 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.175413926 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.153242531 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.16720562 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.150020125 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176553108 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.150983097 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.169821036 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.147914759 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.170778282 seconds)
  done (took 93.74235013 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.19613381 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177314169 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.149675388 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171460281 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166562801 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173636117 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149484372 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.17298345 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.150776576 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183441693 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.149554213 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171390021 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.16400256 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.192718432 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18871492 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159483689 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171526212 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151771185 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.171263957 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15203337 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.186384106 seconds)
  done (took 4.439651509 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.151657204 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.149688308 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.172295374 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149709471 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.171789164 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.150478423 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.172905647 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.15081897 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.171296853 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15015429 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.171951126 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.151027655 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.170566383 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.151124455 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.170598859 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.151360099 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.170943805 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151963458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.150549731 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.172168262 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.150433515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.173418212 seconds)
  done (took 4.416549618 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.175286326 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.173007895 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.150500912 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.171150955 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.15491125 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.172385119 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.155292863 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.150791033 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.182393446 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.145884613 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.166368922 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.146312251 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.173231387 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.150668322 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.168950186 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.15114408 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.183688163 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.154379688 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.179223419 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.150882455 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.165807607 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.151053845 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.17391625 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.142450517 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.178130474 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.155346291 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.177266187 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.154155636 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.164690705 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.154487243 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.173389088 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.146628771 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.164882001 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.143204943 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.164708165 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.155025579 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.175960086 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.152381948 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.173183196 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.143913133 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.174904085 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.158357359 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.142989132 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.175528396 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.151480506 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.168856878 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.154570354 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.175651666 seconds)
  done (took 8.662810055 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.18076363 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.212443566 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.154258303 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.205895177 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.18889532 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.161953625 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.178794874 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.180547191 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.178233559 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.154384506 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.189663923 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.188391275 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.157704342 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.179819166 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.157980006 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.178361647 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.158106628 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.17646441 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.159512463 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.177175812 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.159992412 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.180189953 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.164593486 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.187815714 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.179451661 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.156667758 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.17647293 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.159478799 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.185328805 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.160838121 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.180896956 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.1600024 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.188244399 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.157405491 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179066137 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.156991961 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.188955592 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.177846359 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.158236812 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.174938308 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.157257498 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.180677934 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.158674368 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.18962551 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.156920234 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.180447946 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.156686755 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.176175825 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.164890103 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.180527985 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.181949884 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.168015779 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.180445782 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.157371339 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.180929223 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.165762141 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.17959288 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.155146405 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.181145871 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.164171645 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.17685601 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.158127301 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.18750443 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.180063121 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.162788858 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.188601148 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.158569676 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.181239877 seconds)
  done (took 12.746778344 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187406723 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.183545268 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168977284 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.190317917 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.159816552 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.183043109 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.160848177 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.182187344 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.181840163 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.399742244 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.182108563 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.290936788 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162404311 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.188712894 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159761657 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.184569281 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159446952 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183456011 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.159286038 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182838195 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.181723388 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.168964014 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.181914404 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1674391 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.192231568 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.156817149 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.182248315 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.180798969 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168867214 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.181399744 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.170065831 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.182571262 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.158851415 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.190708749 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.191673047 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.161191028 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.176464061 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.160838749 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.181461832 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.159560863 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.179641559 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.16725856 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.182782252 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.156102183 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182782601 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.159265435 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.189490158 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.1928072 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.165315366 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.187404278 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.159031117 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.19152212 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.160429479 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.183057217 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.19002619 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.173340339 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.189954323 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.167166509 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.183608545 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.189940495 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.168575627 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.197682122 seconds)
  done (took 12.179668379 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.156876444 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.155229796 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.177844124 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.155103802 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.179057267 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.155609662 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.178907388 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.155455732 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.178518232 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155718266 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.178115527 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.156478488 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177938969 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.156449783 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.178720213 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.156767491 seconds)
  done (took 3.571543699 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.173883844 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.194422978 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.255884006 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.159299447 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.179876645 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.163817061 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.180087006 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.159284222 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.177506581 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.162498178 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.182989052 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.160062254 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.195447549 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.158162291 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.179380562 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.159494095 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.177990162 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.160561549 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.179251635 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.257965276 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.160586482 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.182113243 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.157981543 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.183524595 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.158271873 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.184358849 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.164880394 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.179467235 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.159529644 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.180181362 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.161589194 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.187687415 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.15598904 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.184449503 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.157908558 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.181473845 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.156473738 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.180525191 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.159179949 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.180936835 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.15899019 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.181883534 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.156871974 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.183373808 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.155843491 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.182777363 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.156408298 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.184534709 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.157730951 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.182833027 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.157087713 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.186332494 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.161990502 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.18802824 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.163324121 seconds)
  done (took 10.515758184 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.168878109 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181731071 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.169304281 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.178228321 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.159645581 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.181670239 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.160206127 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.182901122 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.160061625 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.178292086 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.160113587 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.182631255 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.160396724 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.181759985 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.160151022 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.181538727 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.156950546 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.181910633 seconds)
  done (took 4.013407432 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158208526 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.155987922 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.180143648 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.155667141 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.180090499 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.156199542 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.182743979 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.156136476 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.181104804 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.157210425 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.179029191 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.156953828 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.179276709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.157694215 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.178505171 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158971124 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.178815337 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.15828584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.156868412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1810277 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15632784 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.180231997 seconds)
  done (took 4.610871187 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.169823342 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.282985567 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.188733567 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.292302953 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.155799351 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.177854391 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.185797161 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.156702189 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.193048851 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.154865015 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.175719133 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.155080963 seconds)
  done (took 3.221082374 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186400659 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.217696888 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.159563098 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182315572 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167592402 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18687984 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162074382 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186053198 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169570586 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196033797 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186016043 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171253482 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19517035 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169807837 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190567181 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188966628 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164180095 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185341097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16013412 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202571919 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163513391 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194373111 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163356876 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185976722 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184803249 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171587393 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194551695 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174023736 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187231212 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169779202 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192238482 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186653624 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171964676 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197650134 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.160223936 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193830864 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163428464 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200382535 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191138762 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172228535 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.182912017 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168310789 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194958382 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167925334 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1948576 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186275224 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169082465 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186806856 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164431734 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.207185355 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189833497 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.173023748 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192109625 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171480745 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195642267 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.205540104 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174942708 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195809606 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167713017 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19766096 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19505141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16873724 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196442648 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17439173 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191538464 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194824845 seconds)
  done (took 12.995740101 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198638667 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.184786487 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164832134 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199250198 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17091978 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188874228 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186323485 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165977601 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186220468 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162151625 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.229980642 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163860083 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196336071 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194390153 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165685455 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18680497 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165004922 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195304794 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161576273 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.208101184 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.185884741 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173349419 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195130121 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172526897 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198704738 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191506127 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166025931 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186684913 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165993385 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.186656069 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170861113 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188472431 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171884288 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.185809732 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171548002 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18874139 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186806926 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171627202 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188271497 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170353088 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196156439 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179657204 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188737828 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186923421 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17733093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188654856 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165306007 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.184950824 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164789322 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186484678 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174992575 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199595353 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198755372 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173010688 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18858725 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166433315 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190888101 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164819702 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189078025 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169624783 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196998794 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188097523 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.184924284 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189668673 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164549766 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196337397 seconds)
  done (took 12.992464125 seconds)
done (took 229.687467735 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.321023644 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.350322273 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.150492392 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.724656885 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.151086322 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.865786843 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.961623751 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.255818355 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.152619408 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.174261476 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.153356094 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.194105479 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.521866433 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.174108035 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.151688493 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.191325098 seconds)
  done (took 32.44035565 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.350525789 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.398508288 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.191075416 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.15595803 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.180844646 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.158068844 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.177057711 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.159308736 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.178493578 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.16376 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.179062784 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.154025663 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.185339281 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.153804964 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.179179769 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.157186888 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.186333821 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.157300101 seconds)
  done (took 4.426850649 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.176306149 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.220607662 seconds)
  done (took 1.361682796 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.187136856 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.27461048 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.376360709 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.228686623 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.177301108 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.197579315 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.227478578 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.169346395 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.269916866 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.191070736 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.169537061 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.177640537 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.182984233 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.186287097 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.172477799 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.178856892 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.184875116 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.196088343 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.193382972 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.160360964 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.204464129 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.159253841 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.185676614 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.171724072 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.260776318 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.190781104 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.161446508 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.179351299 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.159735257 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.19317673 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.166106109 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.197034693 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.16867557 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.236209996 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.18551151 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.234552732 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.160832184 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.181688747 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.170623303 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.183332741 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.183246347 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.163496839 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.190039948 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.157700571 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.178248016 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.162681023 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.178932321 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.159441434 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.188407897 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.160069517 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.189672374 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.163396407 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.232187138 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.185059496 seconds)
  done (took 11.299612891 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.001969105 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.204199291 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.183027814 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.144673565 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.205044929 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171105837 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.012521844 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.182399313 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.31402024 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.082437019 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.200018732 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.16624656 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.328701366 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.338359717 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.341424842 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.416861739 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.840102292 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.194476546 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.212663496 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.201259043 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187313274 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198157881 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.17413639 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517781556 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.180835915 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.159366006 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.185778862 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.167935671 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.237649424 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.180869509 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.163770337 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.258401993 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.355604089 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.274066136 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.184311078 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.1565917 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.181949954 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.248422303 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.3300815 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279461516 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.25083972 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.179979242 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.157454939 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.187988011 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.172652891 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.179668797 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.242656416 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.253204615 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.255539968 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.162471987 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.191296324 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.169457443 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.186305325 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.240962835 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.156745212 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.447054685 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.42627851 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.183101426 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163389143 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.195322184 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327627557 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.185020596 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.299085799 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.20393578 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277488919 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.156959066 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.895577922 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.247621852 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.158569606 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.18810311 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.16284459 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188766882 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161633822 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243897984 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.493549215 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.188636138 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.164254128 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.181240086 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.29080339 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.159367892 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.181931445 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.240734943 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.16011673 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.18871478 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168466115 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.190375117 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.252475123 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.336352619 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.166024324 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189637314 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163970781 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.193561067 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.182104792 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.270439908 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.315896525 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.239108898 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.29192141 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163437753 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.244685515 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.247611026 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.187930672 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.252343332 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.163433283 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194849848 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18313083 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.288536133 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.218827827 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161521308 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.187692304 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165724496 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.224173898 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.186826132 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.167329449 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.268443005 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555831926 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.248833179 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.180183318 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.165620432 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189398596 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.2403138 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.167589259 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.323179156 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191548451 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.248271725 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.164436623 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.182955528 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.164320476 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.243638594 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19226998 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189641854 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164584338 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.192801892 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.340647927 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.283073217 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.190736964 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.313115795 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.255600869 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1667571 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.256716654 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189006367 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.246537845 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.170334579 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.186689802 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161454191 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.900852336 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.172342586 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.189132501 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.165810471 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.267929672 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.159881016 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.188458742 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160260743 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1824533 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.86667746 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.187549968 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.159721079 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.18612723 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.166561055 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.190977219 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16562581 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.190710076 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.243234423 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309535731 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.193483543 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.165531665 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.185641624 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.241099933 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.161084451 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.186017579 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160704933 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.185988177 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.166474801 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.190103923 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.16408574 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251161897 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.240519622 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.31867551 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.630313045 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.159282196 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187119815 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.304967761 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.185839624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.389090819 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191003409 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.300061552 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.246825033 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182265007 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.426571703 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.247774665 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.26846724 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.163960236 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.254800279 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.183177274 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.166332954 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.241898638 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.186516945 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.167498814 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.241201901 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.195910388 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.166780077 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.350192298 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161562654 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.310276258 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.182138315 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.252829358 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.162051124 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.19071664 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.393005005 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.184375611 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.174191006 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.24372869 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.189758698 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.161756324 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.038013423 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.186833954 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.169381455 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.191047479 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.301499443 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.245951528 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.192604311 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.167475277 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.195804299 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.246716919 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.291352064 seconds)
  done (took 61.662415383 seconds)
done (took 112.146131715 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316958253 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.251298995 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.394299373 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233944205 seconds)
  done (took 2.243174708 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.335748002 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.199830789 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.30362206 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.185364564 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.303184155 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.157688 seconds)
  done (took 2.488744064 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.229710147 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.22771541 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227026006 seconds)
  done (took 1.693986295 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267445393 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.268665659 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.409463801 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.322465168 seconds)
  done (took 2.339041647 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.333682796 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.176519793 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.215962658 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.28501725 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.302576256 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268578986 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.208269571 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20980608 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.216381636 seconds)
  done (took 3.260714718 seconds)
done (took 13.030638045 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.316500513 seconds)
    (2/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.295088782 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.35563447 seconds)
    (4/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.437778436 seconds)
    (5/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.172903621 seconds)
    (6/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.2219204 seconds)
    (7/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.171101228 seconds)
    (8/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.335089679 seconds)
    (9/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.279578849 seconds)
    (10/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.239808847 seconds)
    (11/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.244401401 seconds)
    (12/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.212722931 seconds)
    (13/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.305014346 seconds)
    (14/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.215111503 seconds)
    (15/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.401573273 seconds)
    (16/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.391171251 seconds)
    (17/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.299238891 seconds)
    (18/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.334801234 seconds)
    (19/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.380429313 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.244205984 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.22864814 seconds)
    (22/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.261377162 seconds)
    (23/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.274026746 seconds)
    (24/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.200733068 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.190139193 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.306857527 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.227881632 seconds)
    (28/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.343221369 seconds)
    (29/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.312313598 seconds)
    (30/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.189405929 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.197683658 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.133464737 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.382589015 seconds)
    (34/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.371381374 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.127353974 seconds)
    (36/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.247095179 seconds)
    (37/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.171134122 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.191769778 seconds)
    (39/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163663899 seconds)
    (40/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.294603944 seconds)
    (41/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.29743957 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.232277442 seconds)
    (43/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.240680886 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.26203828 seconds)
    (45/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.187894284 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.318353473 seconds)
    (47/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.222036895 seconds)
    (48/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.168115722 seconds)
    (49/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.200823722 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.180377547 seconds)
    (51/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.259495778 seconds)
    (52/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.136031894 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.128145067 seconds)
    (54/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.131742591 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.209196225 seconds)
    (56/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.131185746 seconds)
    (57/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.204014491 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.165241823 seconds)
    (59/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.196369175 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.168947951 seconds)
    (61/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.194971511 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.162672921 seconds)
    (63/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.195641219 seconds)
    (64/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.244579985 seconds)
    (65/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.188356983 seconds)
    (66/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.206652606 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.20955528 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.182898467 seconds)
    (69/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.125641047 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.191801555 seconds)
    (71/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178492601 seconds)
    (72/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.199539341 seconds)
    (73/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.135264128 seconds)
    (74/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.220219903 seconds)
    (75/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.159185955 seconds)
    (76/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.363647849 seconds)
    (77/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.216687751 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.194710794 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.190295218 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.196259106 seconds)
    (81/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.133613569 seconds)
    (82/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.194740197 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.16922124 seconds)
    (84/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.196167753 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.185340049 seconds)
    (86/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.128714273 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.153963154 seconds)
    (88/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.165736229 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.198740497 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.166557144 seconds)
    (91/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.213289902 seconds)
    (92/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.180538461 seconds)
    (93/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.129843816 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.188866685 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.172374294 seconds)
    (96/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.15117062 seconds)
    (97/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.127984292 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.236521837 seconds)
    (99/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.154434862 seconds)
    (100/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.172401811 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.213245832 seconds)
    (102/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.248702436 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.200850122 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.129912261 seconds)
    (105/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.128214209 seconds)
    (106/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.200038916 seconds)
    (107/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.127360819 seconds)
    (108/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.13727891 seconds)
    (109/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.160649339 seconds)
    (110/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.130419867 seconds)
    (111/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.133952369 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.1922836 seconds)
    (113/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.133453004 seconds)
    (114/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.128910457 seconds)
    (115/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.157676335 seconds)
    (116/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184984906 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.18875864 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.173750587 seconds)
    (119/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.127273657 seconds)
    (120/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.219794011 seconds)
    (121/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.239286225 seconds)
    (122/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.159568965 seconds)
    (123/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.187911465 seconds)
    (124/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.135665506 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.206112593 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.131077563 seconds)
    (127/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.178795572 seconds)
    (128/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.15450177 seconds)
    (129/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.131682178 seconds)
    (130/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.127827777 seconds)
    (131/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.189821974 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.185442716 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.209621908 seconds)
    (134/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.19482694 seconds)
    (135/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.198924947 seconds)
    (136/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.131302311 seconds)
    (137/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.12824026 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.19856247 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.175094961 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.191536228 seconds)
    (141/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.131596064 seconds)
    (142/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.127996235 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.13350301 seconds)
    (144/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.153650195 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.164633994 seconds)
    (146/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.130512896 seconds)
    (147/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.158829486 seconds)
    (148/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.134883284 seconds)
    (149/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.134598751 seconds)
    (150/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.127274844 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.192234291 seconds)
    (152/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.216008544 seconds)
    (153/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.177605546 seconds)
    (154/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.134122294 seconds)
    (155/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.199761645 seconds)
    (156/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.19498094 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.127565663 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.191874818 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.127542825 seconds)
    (160/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.133907811 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.199689779 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.186928519 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.192997448 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.165705779 seconds)
    (165/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.160592559 seconds)
    (166/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.131473143 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.163302122 seconds)
    (168/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.199896788 seconds)
    (169/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.127909073 seconds)
    (170/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.127596463 seconds)
    (171/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.193032298 seconds)
    (172/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.128664826 seconds)
    (173/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.128008387 seconds)
    (174/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.215895331 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.166113302 seconds)
    (176/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.15761292 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.136048795 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.186329072 seconds)
    (179/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.203628059 seconds)
    (180/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.128401105 seconds)
    (181/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.160041371 seconds)
    (182/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.16679223 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.191224945 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.168634433 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.189641155 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.132634254 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.166683906 seconds)
    (188/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.159447581 seconds)
    (189/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.136299176 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.173487215 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.193553384 seconds)
    (192/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.135793176 seconds)
  done (took 38.393272008 seconds)
done (took 39.405427675 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.31153815 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.153950583 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.173122504 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.201847805 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.29567461 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179556004 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.216663446 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.199872205 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.184268474 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.198210959 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.165209975 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.211235382 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.17495933 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.307101204 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.203615348 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.16583317 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.191223199 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.18438483 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.214605642 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.189529339 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.293746712 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194524737 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.183048556 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.193033835 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.298830738 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1664755 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.200258566 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.17466872 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.214605502 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.1733791 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.201117964 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.16467995 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.216080341 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.188756335 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190507187 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.174117253 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192028819 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.134780267 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.199138731 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.176758511 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.212298645 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.175798473 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.200385189 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.167085214 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.201069005 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.175001583 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190242348 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.178550569 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.189221758 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.175888429 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.193006527 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.190633529 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.201135982 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.164754401 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.190203167 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.167049734 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.210770866 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166130344 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.215040265 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.165527823 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.193276953 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16574028 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.203492428 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166155137 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.200225532 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.16673063 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.201138427 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.177277921 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.200465157 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168841862 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.191971898 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.175695946 seconds)
done (took 15.063168089 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.171494294 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.234950897 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.314569611 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.316238887 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.219992571 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.182651649 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.207772092 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.189395383 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.205186288 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.183871008 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.22995047 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.197229969 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.342725566 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.182736855 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.21006086 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.178851095 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.204496117 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.175778778 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.312253814 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.219180666 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.187345542 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.210692575 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.217724824 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.183833992 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.195839568 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.2033899 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.201184313 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.17870422 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.196251702 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.179172296 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.218032685 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.169631208 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.19930677 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.187226323 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.215003807 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.179318474 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.20767124 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.203336053 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.171555615 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.196444184 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.177747813 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.213357927 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.171021957 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.209704251 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.178799483 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.211919756 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.1775774 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.209073584 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.170985919 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.204552199 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.171002751 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.221381085 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.208189323 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.187568545 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.209268511 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.184665662 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.208195679 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.189284196 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.200352014 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.183647236 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.197614655 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.172109945 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.199023214 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.191520654 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.202834662 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.182708011 seconds)
  done (took 14.485816528 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.190371625 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.228424649 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.182236721 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.210724632 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.176093063 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.193031949 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.165338204 seconds)
  done (took 2.438028956 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.168137373 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.332266903 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.321467555 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.348257973 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.314747357 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.33170098 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188872761 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.197130515 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.20183244 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.208857356 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.331860287 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.418209606 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.177669032 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.211221553 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.328170224 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.165187835 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.35392266 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.169206014 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.209594181 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.326162566 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1836985 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.229961994 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.178804651 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.197306934 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.325716 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.196037079 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.374324207 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.18536603 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.206201012 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.181130226 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.212054829 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.272426473 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.327419011 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.208555711 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.177338892 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.321291974 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.314935301 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.21308415 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.370296949 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.201831881 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.314066823 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.183696056 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.212732988 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.181686651 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.211629984 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.311328976 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.215152639 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.184231737 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.209817813 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.338297698 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.178846207 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.325882921 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.209503876 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.181672265 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.18254996 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211289229 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.190924768 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.210314733 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.337065418 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18493469 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.320554241 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.351610495 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.319833548 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.325677239 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191780184 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.357442871 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.306163304 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.1828889 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.206730619 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.1853793 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.324126203 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.212286493 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.179688213 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.31351829 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.216033198 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.328307671 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.327003315 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.20944968 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.182361109 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.202404021 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.180438728 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.199009943 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.317570482 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.182958252 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.210935763 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.214327464 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.184108538 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.209700409 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.175610948 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.21944285 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.182824436 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.209894917 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.188617351 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.21236241 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184461446 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.356623353 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.18047302 seconds)
  done (took 24.737959765 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.172545405 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.169512967 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.203336682 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.195888039 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.17227945 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.169871811 seconds)
  done (took 2.21232281 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.206603089 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.212345928 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.193434445 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.211736562 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.231398769 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.317154996 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.352736895 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.179463185 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.232038655 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.195938184 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.320261955 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.320097339 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.319126196 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.218487421 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.324274896 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.185748272 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.326011988 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.214470709 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.220118145 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.184342925 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.211836156 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.189060425 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.209630987 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.309990747 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.185594761 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.215425369 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.178226295 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.227022585 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.191313993 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.206560904 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.186702164 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.215308525 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.205668542 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.180124582 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.326206915 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.206198707 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.181442067 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.217200316 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.186823827 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.216146969 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.32526294 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.182084607 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.221430951 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.187034678 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.208607603 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.203573373 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.189024805 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.20572658 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.326413436 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.18866191 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.217786912 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.186907428 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.216568391 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.187814107 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.207144428 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178746962 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.215571408 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.328599817 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.218287674 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.179377698 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.215799649 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.187207326 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.208449831 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.189639199 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.214752239 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.187586913 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.206505799 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.186097129 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.211084873 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.186192112 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.215843649 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.185195827 seconds)
  done (took 17.11420747 seconds)
done (took 62.067958504 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.698091427 seconds)
  done (took 2.82603081 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.23513018 seconds)
  done (took 2.365167317 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.737550565 seconds)
  done (took 18.900874895 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.495214789 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.415631835 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.089001122 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.245235236 seconds)
  done (took 3.376905401 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.14286733 seconds)
  done (took 2.292571981 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.472469928 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.345797675 seconds)
  done (took 1.956441738 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.819730218 seconds)
  done (took 1.973223271 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.930372082 seconds)
  done (took 3.069436205 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362426115 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.285222932 seconds)
  done (took 1.796941147 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.716495792 seconds)
  done (took 1.872065086 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.662197546 seconds)
  done (took 16.820929393 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.32128485 seconds)
  done (took 1.478847694 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.358198413 seconds)
  done (took 1.518599747 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.662824232 seconds)
  done (took 4.816707139 seconds)
done (took 66.208729897 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.186907916 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.214679674 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.190084927 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.213643159 seconds)
  done (took 1.944256738 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.191269714 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.210802086 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189974647 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.210841756 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.191496629 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.211327781 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.185273979 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.214286747 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.185448023 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.213213566 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.186194767 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.210742651 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.188667917 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.211303267 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.183904182 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.21425909 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.189636964 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.212313522 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.186706493 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.212832302 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.187075605 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.214049566 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.188289237 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.217342372 seconds)
  done (took 5.955787394 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.18449916 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.175111863 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.207779285 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.174601882 seconds)
  done (took 1.897122741 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.197184712 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.225789816 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.198408681 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.221947428 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200202344 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.225152794 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.18434523 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.211234124 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.184920582 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.223932387 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.200174827 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.229239137 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.196420998 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.218929376 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.223749962 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.182035439 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.215225134 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.199389741 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.220480481 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.196816369 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.216637325 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.195245708 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.212025496 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.195879797 seconds)
  done (took 6.135168307 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.260847696 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.225951149 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.210113102 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.258050623 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.241760632 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.184168532 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.239264435 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.191092317 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.218706582 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.192539778 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.213852543 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.230996693 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.219756856 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.186750983 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.214456042 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.217147516 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.194661136 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.217163859 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.226472444 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.218692615 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.189954184 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.228628655 seconds)
  done (took 5.944287887 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.189255561 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.203204472 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.177351464 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.201637443 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.189678659 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.207045533 seconds)
  done (took 2.332047532 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.176784701 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.170182954 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.200108617 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.170381932 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.205375208 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.171114707 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.199704516 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.171380592 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.20020416 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.172027113 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.19959703 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.170958751 seconds)
  done (took 3.369243812 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272987997 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221497021 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.348121574 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.464476872 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260639708 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257065721 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.3782657 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226950229 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.275619616 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234319602 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27871994 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229583664 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250646538 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285831878 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210865642 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.242349673 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269600903 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306451609 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211197737 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312034303 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254232679 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27415686 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.288930387 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216990442 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236699722 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258542654 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.189231466 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223791098 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234743678 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261110579 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272020835 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24746443 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208575476 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281647618 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32177346 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273475349 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.390538001 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202168865 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.257501111 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.288436749 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.327315575 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208310219 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286842622 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249443522 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224873708 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260339181 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246400188 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.283297967 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.228817924 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21393789 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279140246 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278564753 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.265121563 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204830726 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400200612 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232484522 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.237231983 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246734937 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285946627 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302356396 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278973255 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.19048351 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267528573 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288249644 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312638569 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.241077026 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.260956718 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193679587 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261310743 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306391197 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280433007 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226053537 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.28756932 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230353525 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271330593 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262704985 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224981683 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305750194 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271847279 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.188210247 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248490678 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231231849 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195347117 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.289013638 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189357878 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.3141917 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230912045 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.269994809 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244338404 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250618253 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260090197 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256384488 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231472173 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245395172 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.155891542 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241394244 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.255543879 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226761867 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228307455 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246354303 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208596149 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.222991764 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2202301 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.222499524 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267408586 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.191329847 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257583104 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269031208 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.201633741 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279020747 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244222537 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.232369842 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266178751 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294014623 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227870737 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201786135 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318243752 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271519793 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.233610992 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.241369171 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296871411 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.237291698 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203537544 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263610338 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290829372 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242017508 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300938479 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208143577 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233311653 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.192958896 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273716301 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258775575 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.258666762 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197252388 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.264688199 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285710774 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.195946705 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238239653 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28121537 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202141767 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223247314 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204517558 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235344453 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.239860949 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.220426633 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.237482853 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251327212 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237521475 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.266670853 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254903085 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203509468 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271202714 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229303949 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.2656467 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2174977 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.218806945 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.240299552 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296949912 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.228381416 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280635966 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.227148299 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278695357 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271696352 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22826995 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279808207 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197892833 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.217886088 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231045792 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.269547895 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261621188 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.291263086 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271682733 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.26219235 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.233648916 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248011566 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267688509 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.283550094 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225416235 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.23854472 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270873132 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236282002 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.220426634 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.190952285 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.22762287 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234975202 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200311087 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235450542 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277541369 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231694058 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271545634 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266132307 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238982974 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.291293607 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.194775816 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2588744 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.275065077 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208039793 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.289705346 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291587918 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283900418 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209207539 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261748369 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.221404901 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196213359 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233611411 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.257232082 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209177298 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234092618 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21033841 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.294347766 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268210084 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247054741 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284762818 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263935169 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27194785 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.221640895 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.258780184 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234542396 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27021013 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.28451537 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203468332 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.260560998 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292231645 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211282733 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29095334 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269381253 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281216138 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290857797 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.235731513 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230497259 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242310073 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229364922 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238367673 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.257762388 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21246801 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230309595 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217453211 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.236959812 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23821451 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285044488 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213454518 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274326086 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.253632463 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266705215 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197208807 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241015704 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243525032 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244787833 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.160210736 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26440143 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290247523 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249184551 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220525459 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269412822 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22998155 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.386544616 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278569852 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272210174 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235330275 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208646994 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273640035 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.257430012 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227796006 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.283678741 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241582188 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310175827 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270062834 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.209730581 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231117588 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216002817 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249655072 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.223886152 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.22170885 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.265846166 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.24296707 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286674094 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206531221 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273099813 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279316735 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.215171287 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.249684684 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20848126 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.357345092 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240286911 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27294246 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.266848389 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.262611887 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253691828 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225022889 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196576953 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.235040224 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.285455922 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200977792 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283409783 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.262890134 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277987096 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276177998 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230313086 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241044549 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.22705946 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239782028 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249826252 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280273002 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235001601 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.20824799 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287338704 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.182169883 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232074135 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258651676 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386132482 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216992957 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269316999 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.162996636 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.385540507 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229488819 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202685341 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.258622343 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269608307 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.202464364 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.285411294 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276629521 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210675813 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259898134 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20456498 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.303755945 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249969427 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268227754 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276113254 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.244769324 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231538312 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257859257 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27179839 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216508118 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.247586931 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260060235 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297440827 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.244719388 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.233278338 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271000174 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241447673 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274163495 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273531851 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209168987 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282937028 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230149378 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266691805 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209199229 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225105721 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230064871 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.264573658 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231646566 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27218161 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243173241 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233092561 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226816343 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218553001 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271654098 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24004086 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.201589532 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286590146 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.230288782 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253608158 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313392436 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231845474 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.267353062 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21363876 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231140776 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210240702 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246385242 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20207884 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.277638519 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279251084 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.201765253 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274724321 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267134808 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265912237 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22387379 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243633635 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.368803533 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.199142363 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295477379 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251407319 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297441665 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220087833 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279619706 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272619793 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219995294 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26734936 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24929015 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.291967715 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266717716 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.270415253 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233537938 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214940043 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240912479 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.205013431 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254551923 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272547508 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213061172 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.23953486 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.27204898 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21652069 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.248963293 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21223907 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.304545361 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253850228 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290653861 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.288815568 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209564149 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278842722 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276693426 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199382198 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.265344707 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273783978 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246871198 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223760647 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.239040663 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.207384193 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317171688 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.229846756 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261865283 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248335001 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274733959 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277444778 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.206904244 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281853439 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244043394 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277271572 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199411043 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.252979726 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243101934 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237643209 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.22826548 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245455515 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262894883 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.269950808 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213384817 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.281105299 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300698574 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.194934425 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236852746 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38790673 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232158223 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296580173 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.221662685 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208475254 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249948335 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260413004 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.237627215 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275951223 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.231859442 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202639526 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.247680868 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.21815351 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.226812642 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272426053 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253712989 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26041454 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289430661 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.205534447 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.359885779 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246145826 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245371286 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.206313526 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.200766801 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244465236 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205794885 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245320581 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.280834036 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321570501 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.267407958 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.218670685 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239403698 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.198384865 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234258142 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.263862884 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223164761 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276005419 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252235637 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.162986159 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244887216 seconds)
  done (took 121.936387305 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241380974 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.23261289 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.246684442 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.301447971 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2734222 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.370765654 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.308212587 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.325766007 seconds)
  done (took 3.598059711 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.195116501 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.241067737 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.248807338 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.221879752 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.186858189 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.594556193 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.243987452 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.227453994 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.235502503 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.230396966 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.214195954 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.649742051 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.226859715 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.222895733 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.224060895 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.18582782 seconds)
  done (took 5.63959111 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.376798893 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.737552869 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.192170736 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.420114108 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.380519129 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.299316554 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.931621892 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.291057752 seconds)
  done (took 13.933366387 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.245955648 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.276258524 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.533258664 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.419306394 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.291830966 seconds)
  done (took 3.075808873 seconds)
done (took 176.90342229 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.19923588 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.228664553 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.200465507 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.233483182 seconds)
  done (took 2.153240646 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.256166794 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.152751478 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.187710811 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.151971002 seconds)
  done (took 2.051843534 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.456203125 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.153295122 seconds)
  done (took 1.941485018 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.219676329 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.719964738 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.210335127 seconds)
  done (took 2.471167527 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.210443731 seconds)
  done (took 1.526368612 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.193681543 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.191734438 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.390039403 seconds)
  done (took 2.090574647 seconds)
done (took 13.545639708 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.217209256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.03595548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.656810479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.208140434 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.824790499 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.47332688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.509645256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254964964 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.307986371 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186865941 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.24879756 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.766245345 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.492930979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.952090067 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.479294469 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.951438797 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.818533627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186244354 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223940907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186725771 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.486593372 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184149395 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217828399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186148043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.805289415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.492164053 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217231604 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.963595301 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216444982 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.195075016 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.508396564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18577111 seconds)
  done (took 23.941922294 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.188871225 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.273906549 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.241485387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.221822761 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193939536 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.220748393 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196994255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.23120035 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.318245218 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186971612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.240125717 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.18567857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.22417725 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.187356786 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.243865369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.186138893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.220801541 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186867339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224626679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188489821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239753393 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185735351 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.220216691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.18713951 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.219176056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.233189779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.187179809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.229342433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.18718351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.227168064 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.192615415 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.218355561 seconds)
  done (took 8.216055687 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.229127112 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.285187802 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242368181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.258801556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.271357552 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.18948017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.306033889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.255827853 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.291996769 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.219543141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.207598746 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.219134081 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.25865021 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.188902932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.242505139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.187374316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.22078904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188627688 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.226103264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188923535 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239990644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.18680979 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219928107 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187807123 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.219020728 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.205990859 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.218761129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.228680407 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.18810311 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.227818496 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.193630908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.218890614 seconds)
  done (took 8.534093965 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.201696669 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.232635868 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.21237533 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.242253082 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.197773474 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.23223435 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.202767405 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.228914305 seconds)
  done (took 3.077860879 seconds)
done (took 45.087483612 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.21165806 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.234453348 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.210289241 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.233035011 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.354462673 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.194483879 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.237825285 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.195989728 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.235012078 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.210287984 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.218362125 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.196979937 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.238052338 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.199563645 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.354405612 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.236265799 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.361844268 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.35592047 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.195867575 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.235786897 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.19535061 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.358685067 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.2340871 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.195752197 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.336366866 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.226040197 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.345742081 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.197386204 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.232677983 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.187321865 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.391377004 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.199564414 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.197173817 seconds)
  done (took 9.527417977 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.305618124 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.231219487 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.196619067 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.230666972 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.197488312 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.229306185 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.34177747 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.195983023 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.229286769 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.195907035 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.228237893 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.324135911 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.202582465 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.225077574 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.199090471 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.173305279 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.343078684 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.231418883 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.188919834 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.156217352 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.226781911 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.196224394 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.352430431 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.227353422 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.196748623 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.229927143 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.197370489 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.235207145 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.198813061 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.229980153 seconds)
  done (took 8.264441519 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.202449348 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.241102378 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.217466132 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.295757442 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.226894915 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.242458835 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.213054957 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.241578207 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.218127459 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.22478026 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.206837406 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.260188115 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.207456549 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.235911703 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.191137364 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.239390288 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.206061749 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.224773975 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.200238871 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.242692244 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.242432784 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.208585882 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.245281331 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.201350395 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.22199073 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.200357252 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.233704859 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.202689183 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.231723183 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.20691025 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.225720184 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.194506298 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.226177854 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.226265225 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.227496667 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.205232244 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.244147248 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.20484644 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.238277508 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.223791727 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.22764466 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.193551639 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.250585078 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.248445001 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.226618692 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.202131081 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.225580013 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.20658011 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.22267266 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.209843026 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.266812631 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.224741149 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.214158588 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.223147371 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.190764342 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.232598782 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.192706139 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.227548909 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.207415482 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.225344507 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.213470023 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.231528535 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204772548 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.22664607 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.204212072 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.223918349 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.192357772 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.228739563 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.219370634 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232098649 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.229793816 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.225222495 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.20419098 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.237551647 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.203777589 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.236614028 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.191936488 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.236332917 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.203228147 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.22854673 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.204983748 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.227538292 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.194878133 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.241788289 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.213097629 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.241323774 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.204029995 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.235235989 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.194388825 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.226707321 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.210246708 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.226913842 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.197081976 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.238879609 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.193694114 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.229002655 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.204395336 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.235033589 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.191577854 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.25156132 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.196794648 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.224329784 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.218252475 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.230198617 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.196302546 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.234871418 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.234118528 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.225567581 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.201979805 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.235778446 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.193470971 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.233223862 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.194864095 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.2249608 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.208489432 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.241549851 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.200926389 seconds)
  done (took 27.154191885 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.454807068 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.443899116 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.297076954 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.528834568 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.241060613 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.36721157 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.445734754 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.449727301 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.229813581 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.227867594 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.284662665 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.44634405 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.195681658 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.255438488 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.453388591 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.531063971 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.222328202 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.267654637 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.263835785 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.205949165 seconds)
  done (took 8.18293737 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.203314751 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.260532852 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.217466411 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.24458222 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.204807957 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.243025388 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.194680762 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.248323966 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.204847557 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.234341602 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.197126743 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.234530871 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.207461647 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.241723546 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.209826962 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.244362988 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.202416313 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.23129736 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.216269332 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.232072109 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.168606078 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.25115617 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.202700846 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.24855542 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.211312276 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.237043272 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.192709282 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.231683093 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.201032338 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.234721469 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.197823411 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.234309195 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.201945932 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.170750694 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.238670923 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.208499838 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.232878776 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.197333474 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.233465233 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.196635411 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.241866232 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.205722809 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.235124173 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.165774223 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.247117947 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.176634962 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.20805006 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.239966828 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.173189621 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.24882375 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.206519698 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.24074961 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.20342091 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.248516868 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.201567322 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.245628442 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.205135723 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.242123806 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.199744535 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.227106044 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.1928468 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.230299677 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.204082866 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.240538339 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.207228308 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.236630719 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.203573164 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.228390147 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.199235741 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.231347087 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.19821501 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.24107081 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.215052766 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.237971183 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.201429525 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.238502047 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.203658091 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.161278959 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.235207563 seconds)
  done (took 18.623029577 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.220984456 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.238330657 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.212923794 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.261041296 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.207127177 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.234616288 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.205965857 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.247852188 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.209490327 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.248632316 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.211053235 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.243413146 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.216793979 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.23917357 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.205288396 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.244968722 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.206423596 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.266980738 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.207047209 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.255551562 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.209943946 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.234032693 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.207836974 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.241858549 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.223202196 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.240863171 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.255473199 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.207531488 seconds)
  done (took 7.794323427 seconds)
done (took 80.875092987 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.552987639 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.790209355 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.484040883 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.482433834 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.521195956 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.506863688 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.482650343 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.481250583 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.062514235 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.460749443 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.482866572 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.478098088 seconds)
done (took 32.216333796 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.563232098 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.275287591 seconds)
    (2/2) benchmarking "String"...
    done (took 2.289242159 seconds)
  done (took 5.938321347 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.259538171 seconds)
    (2/2) benchmarking "String"...
    done (took 2.276245115 seconds)
  done (took 5.90947124 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.472802373 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.473330303 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.803959707 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.471689382 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.471241489 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.471576728 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.472293439 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.474931135 seconds)
  done (took 18.008388638 seconds)
done (took 36.262719094 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.531298149 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.68062454 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.719679437 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.456599474 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.474788659 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.48619367 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.479443092 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.504544188 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.483669956 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.454866153 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.969038451 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.747894338 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.481355975 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.8461847 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.455365798 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.477844214 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.497804085 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.737561949 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.47263587 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.512109536 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.453628426 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.455814248 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.497404384 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.480789212 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.482766768 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.476232697 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.512466355 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.472422157 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.688964148 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.483769409 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.514606292 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.475979802 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.501003585 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.47188815 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.473424379 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.482395772 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.686528853 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.485805074 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.460127995 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.477535446 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.682574719 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.492250655 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.475143242 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.478660031 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.460357703 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.513455866 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.464275031 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.65561703 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.499252034 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.475205751 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.560768098 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.848581094 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.480030107 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.4784665 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.473646404 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.710082336 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.492819932 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.530613146 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.502540721 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.478164088 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.475078011 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.472640061 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.478718558 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.477843237 seconds)
  done (took 161.52569339 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.473082715 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.477282062 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.474771407 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.478032577 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.475844449 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.47767017 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.475269516 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.473476201 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.477131764 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.479554209 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.475431757 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.476164602 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.475950888 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.48081212 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.481886489 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.495520764 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.475264488 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.489416007 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.482630368 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.473147109 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.47730099 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.476457446 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.473571115 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.474835592 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.517549054 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.537292347 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.491431208 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.501544016 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.482362527 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.468365705 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.507880087 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.476276139 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.16097934 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.428596471 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.486708541 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.491197309 seconds)
  done (took 90.395738176 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.473343643 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.472541305 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.470017382 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.502903966 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.4724165 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.028054615 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.02861132 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.435525495 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.192233245 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.470350105 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.774954692 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.697524525 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.470948925 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.560541951 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.471217464 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.482116685 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.473847268 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.564193114 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.493127164 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.471207756 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.465544257 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.015421234 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.487123188 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.457263107 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.641951257 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.471380055 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.499192321 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.865989104 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.472006531 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.498132549 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.797366201 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.501089489 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.467224289 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.782380009 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.625386371 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.576457174 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.466876899 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.494699571 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.469384271 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.750524491 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.468240829 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.463533736 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.469332937 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.067225169 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.467886803 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.003771639 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.469586251 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.404143502 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.472232956 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.468175597 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.922736404 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.112015781 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.468367451 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.468795578 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.471046911 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.466196225 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.462522783 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.49799545 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.97934493 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.309609203 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.469691571 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.471037972 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.473132163 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.496229374 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.468806892 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.692949362 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.469450899 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.29941119 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.52329797 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.736042062 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.99866205 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.4683854 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.559231031 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.583546134 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.467957762 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.468082848 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.469574099 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.471254201 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.580980445 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.468467045 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.230422808 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.640781834 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.468262061 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.708499245 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.570298779 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.469245425 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.778487963 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.470018568 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.472690557 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.162850947 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.566960086 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.470393686 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.470160067 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.468999095 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.231986135 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.004067626 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.686738725 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.474049318 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.30936455 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.472822906 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.361078039 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.992434164 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.087966773 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.474455446 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.581677601 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.643145612 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.472079795 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.476031484 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.470907858 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.697313255 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.477574558 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.531191292 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.476054742 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.874693563 seconds)
  done (took 408.482361769 seconds)
done (took 661.779811612 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.457029207 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.456936947 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.454875581 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.455804261 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.456664985 seconds)
  done (took 13.652247817 seconds)
done (took 15.024119408 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.475680951 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.474910112 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.476216982 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.292826623 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.472925223 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.474971363 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.474014538 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.474328824 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.478492412 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.476357433 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.274420651 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.4772169 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.480648343 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.448456399 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.297960795 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.475164335 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.381985936 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.477410291 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.474575154 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.853649406 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.483856781 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.601977808 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.830548842 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.544346247 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.846949741 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.908167372 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.483748178 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.755355971 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.524623906 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.51932421 seconds)
  done (took 21.724816893 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.383049479 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.838293403 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.485196477 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.610846394 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.839938585 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.549067238 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.832926869 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.863855313 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.48659023 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.729175966 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.523463353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.525434275 seconds)
  done (took 21.656752511 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.259254267 seconds)
done (took 95.752923401 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.534779667 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.603592608 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.527672199 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.515315251 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.514807784 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.514607409 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.51770913 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.515524496 seconds)
  done (took 13.618250338 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.509833129 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.514191085 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.510115567 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.513678101 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.509934817 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.514499156 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.513155548 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.513158412 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.511756767 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.515209091 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.510700348 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.511868304 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.514904653 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.512221002 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.513013911 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.51526727 seconds)
  done (took 25.578940591 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.518287207 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.514192552 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.516052635 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.515185206 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.514825524 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.513675796 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.515411282 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.51241111 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.515702032 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.514570114 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.516613181 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.516593207 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.512801593 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.512886381 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.515477981 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.516057314 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.515336482 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.51421071 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.516180793 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.512234342 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.513252908 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.515621365 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.515184787 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.5113292 seconds)
  done (took 37.731389446 seconds)
done (took 78.303283611 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.476689389 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.480769727 seconds)
  done (took 6.332588942 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.629725051 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.610255187 seconds)
  done (took 4.617402814 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.515079047 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.516247143 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.517054648 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.508532544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.515453397 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.515081911 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.515025898 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.511945409 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.513558114 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.509931884 seconds)
  done (took 16.512443517 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.515452768 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.511369358 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.511459942 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.513596108 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.514562292 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.5115316 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.51437393 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.518371785 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.515544121 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.513996857 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.512369764 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.511099631 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.51381478 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.513809473 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.514499365 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.514011803 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.516545785 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.516686515 seconds)
  done (took 28.625386651 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.537353109 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.538103833 seconds)
  done (took 4.447716989 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.697421998 seconds)
    (2/7) benchmarking "second"...
    done (took 1.595376479 seconds)
    (3/7) benchmarking "month"...
    done (took 1.683625411 seconds)
    (4/7) benchmarking "year"...
    done (took 1.665418417 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.597951178 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.547210787 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.596050377 seconds)
  done (took 12.756382638 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.513224762 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.848244529 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.0326288 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.7231194 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.505906443 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.536350188 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.466699012 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.541086195 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.542269097 seconds)
  done (took 17.086142728 seconds)
done (took 91.753558259 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.481999981 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.515914419 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.492346059 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.504892277 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.879421887 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.536104486 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.487024363 seconds)
done (took 18.278287414 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.467952384 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.479311091 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.467888409 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.494327665 seconds)
  done (took 11.286162089 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.484008965 seconds)
    (2/2) benchmarking "read"...
    done (took 1.891337439 seconds)
  done (took 5.755333412 seconds)
done (took 18.418885461 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.516804825 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.515793594 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.51715508 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.516844286 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.516605569 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.518210591 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.518492052 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.51579513 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.517131893 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.51926729 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.518259759 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.518243975 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.519893067 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.520226071 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.52017795 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.51837346 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.517595079 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.518666864 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.518081245 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.519227131 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.519103512 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.520320985 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.518562102 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.520352832 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.519721608 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.517514343 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.521786185 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.519840547 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.519234883 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.516462534 seconds)
  done (took 46.932993994 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.521987468 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.521747354 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.522625538 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.522675126 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.520758471 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.522709976 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.520461296 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.523554218 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.52152435 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.522995767 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.521219703 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.522326478 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.523312846 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.523395818 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.522648166 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.521914973 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.519097366 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.522015964 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.522152083 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.524137043 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.521143436 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.51967223 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.522036985 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.515741003 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.517399035 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.517882407 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.520388871 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.520948718 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.51854087 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.517635937 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.514998172 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.515554038 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.516946115 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.513292926 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.516325505 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.514728374 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.508861287 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.501548347 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.503119984 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.499312866 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.50096168 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.4999758 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.502931134 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.505140772 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.505478175 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.50469714 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.505630849 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.507129293 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.50573128 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.5029106 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.504527217 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.499014714 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.500603604 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.504865319 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.497569838 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.503125572 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.500503381 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.497238092 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.49820246 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.501900556 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.495773869 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.496906764 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.497678162 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.490529488 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.490417531 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.490018948 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.490608058 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.490369621 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.490318007 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.490285741 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.483880038 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.482345974 seconds)
  done (took 110.060293425 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.484312985 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.4824536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.482392418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.4765437 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.475812323 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.47760885 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.474773852 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.475665586 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.476960374 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.482292336 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.472839808 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.468883718 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.46677032 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.468282244 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.469272106 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.466604936 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.466099914 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.455400578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.453794718 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.457218827 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.454862661 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.451885676 seconds)
  done (took 33.687803178 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.454192814 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.457916262 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.451771835 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.452811911 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.455695099 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.45783741 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.451670705 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.458139614 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.454245334 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.452714204 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.451108832 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.454914134 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.456370465 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.455252655 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.454465823 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.454064445 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.454269569 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.453376788 seconds)
  done (took 27.499731426 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.454276413 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.452643594 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.454627785 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.452960464 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.450808724 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.451921505 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.452365486 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.455266763 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.450442336 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.451102407 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.45557155 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.455533067 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.455023645 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.455006814 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.454861055 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.455546616 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.454164178 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.451545131 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.449165638 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.450850908 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.453997118 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.452743466 seconds)
  done (took 33.290939163 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.454544814 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.458032966 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.455503246 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.452589956 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.453930769 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.454883194 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.44828424 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.455506248 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.4562803 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.452153099 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.456463982 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.452533943 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.454480909 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.456541925 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.45620522 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.452967448 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.453182489 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.45426922 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.456672039 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.452090451 seconds)
  done (took 30.406527045 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.458025353 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.462965298 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.463699748 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.462907958 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.463767494 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.464006281 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.461415799 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.463689412 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.463553361 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.464501805 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.462224142 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.463857799 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.46545493 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.46461858 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.461145164 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.46473298 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.460671849 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.464629476 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.463597919 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.463661057 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.465360365 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.464580726 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.464411501 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.460973844 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.463147514 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.466712911 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.460487259 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.465172072 seconds)
  done (took 42.300202841 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.490037036 seconds)
    (2/2) benchmarking "in"...
    done (took 1.485227835 seconds)
  done (took 4.306049394 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.46498392 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.463243056 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.464734447 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.46321065 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.462921577 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.461160529 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.464798352 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.462665189 seconds)
  done (took 13.038384909 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.453197994 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.465396612 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.462544644 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.463839221 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.463947546 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.456163036 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.470301775 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.469659165 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.459094624 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.458224471 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.460127367 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.459799323 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.462692219 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.459142395 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.460466027 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.459524846 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.47063429 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.466643349 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.467490873 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.468005743 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.467167158 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.462449799 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.465206504 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.468303057 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.462087881 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.476813777 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.476428811 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.473526347 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.455336674 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.468839718 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.456175188 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.466912169 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.463660428 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.465690923 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.469591141 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.458100433 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.467871229 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.457133481 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.461916212 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.464181025 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.454976712 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.45880108 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.448131987 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.451374158 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.451585149 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.455208724 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.451346222 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.453369175 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.446425834 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.449701111 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.453753093 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.445872133 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.457329385 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.458924071 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.454251619 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.464497266 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.460484116 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.446893072 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.449602983 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.466833248 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.468843349 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.45993237 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.454998851 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.458063347 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.462270168 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.460031125 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.464845216 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.461534668 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.459301424 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.458859957 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.463970802 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.473391065 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.464320707 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.459846815 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.459118091 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.456502674 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.451377092 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.461369634 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.465137571 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.469280487 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.460648383 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.456246705 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.459231862 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.455077423 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.454498438 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.461453862 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.456969284 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.455187703 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.450052063 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.472739516 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.465882777 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.459981189 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.449196508 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.453337956 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.450212838 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.460338567 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.450588305 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.451283994 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.463660288 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.459762167 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.459859176 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.454680933 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.464298778 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.465956948 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.461987729 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.466185469 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.467375146 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.452586882 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.471930404 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.462488422 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.460054871 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.454127372 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.462557425 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.463673907 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.453676337 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.462100383 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.462089279 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.462314936 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.464455431 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.457681385 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.464248282 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.46735608 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.464235152 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.457875195 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.456925284 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.464999984 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.46137131 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.464686327 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.467560714 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.462228333 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.462255989 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.463698003 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.466444651 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.456434928 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.466236594 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.456874858 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.462897272 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.462940784 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.462240694 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.462289653 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.461047456 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.458436579 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.467372772 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.471118359 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.466739311 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.462738593 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.477909167 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.460644193 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.468435057 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.464823424 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.468814366 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.46406446 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.456724629 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.466412454 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.455743988 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.466735679 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.455985639 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.467825133 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.463740116 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.464397183 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.464367711 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.456422286 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.46127877 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.467570911 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.470986779 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.464041901 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.469080111 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.465364345 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.465329844 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.457157646 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.466980194 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.457693328 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.457907532 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.468290556 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.465491806 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.463398872 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.470223064 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.47125867 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.465285565 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.465554454 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.46137578 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.466700689 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.470972391 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.476420011 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.470842696 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.465993546 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.466002555 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.460041881 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.461700542 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.464170618 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.460888567 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.470472607 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.479016151 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.473199071 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.460942554 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.469496505 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.456181753 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.46867615 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.471854068 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.473112258 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.4663922 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.464193457 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.460317685 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.471076385 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.464769158 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.470722779 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.458376376 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.469804645 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.466314047 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.46874208 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.468926251 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.463381761 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.465346536 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.470298772 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.467475508 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.46844728 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.460298478 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.471507655 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.459940262 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.46207091 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.471740925 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.468405864 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.47693069 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.476352335 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.471076106 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.475247655 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.46760206 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.464269374 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.47108288 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.472263338 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.467167927 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.481688418 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.469898233 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.468862277 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.483251815 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.470942848 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.463252764 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.477624633 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.476157618 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.470552785 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.463582066 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.472954626 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.471873483 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.471116334 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.470870772 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.463414726 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.473456645 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.479875549 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.477839116 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.464685 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.476040494 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.46626879 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.474659872 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.474257516 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.474969548 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.471596213 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.479070418 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.477638741 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.471613604 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.466854968 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.474265059 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.470725362 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.47024653 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.464851641 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.474234189 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.480780343 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.470892703 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.477941084 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.466750974 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.473073567 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.464804708 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.47389022 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.465743444 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.489748243 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.486452083 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.482640495 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.476190792 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.476917771 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.481726203 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.473561058 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.468264225 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.468671331 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.471438931 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.467687127 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.468396715 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.476806583 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.467331565 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.477353509 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.476652234 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.472544448 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.475278595 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.475039459 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.46710507 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.477906164 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.472132385 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.474573408 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.465339831 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.476083865 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.474143674 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.481511091 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.472722753 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.47551005 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.490113861 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.477884164 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.472852309 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.471653902 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.47149222 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.467264518 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.476797015 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.480416609 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.468824702 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.478615472 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.469575915 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.474318697 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.470877617 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.485523055 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.482682888 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.468459921 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.479471307 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.473356493 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.466714029 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.468206956 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.477594462 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.486434343 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.485456845 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.467033412 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.478298043 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.476392145 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.479766805 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.475307789 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.47537791 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.476412468 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.476776132 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.489085868 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.478440799 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.47165069 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.48523908 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.483682597 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.476535808 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.477093141 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.469784112 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.4857096 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.485055746 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.476487688 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.47552248 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.472758093 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.480175727 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.477217249 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.476779135 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.478774501 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.47792991 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.491002173 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.482359942 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.48023167 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.478843364 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.488573372 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.486468845 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.48899682 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.48829254 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.47571643 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.483363492 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.480325047 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.473182728 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.472719541 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.473739572 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.484379124 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.470148333 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.482289194 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.478785116 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.483031815 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.489919423 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.486934756 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.472073718 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.48537101 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.488362312 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.468500917 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.487881664 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.478979136 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.472595573 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.482310425 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.478019097 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.470201483 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.474559299 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.475934964 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.483978165 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.473810321 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.482542438 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.474901871 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.4843764 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.481827682 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.480449783 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.480584787 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.480906965 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.474191655 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.482185968 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.488671499 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.488058572 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.479207168 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.482843663 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.4753073 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.495338897 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.491594288 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.481774044 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.484352025 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.483620718 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.478830444 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.484184406 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.487792966 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.476718164 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.486307582 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.474322119 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.477051865 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.473745719 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.490997913 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.482148812 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.485616852 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.475018017 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.477724227 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.485505664 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.480821199 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.483722965 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.483061848 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.49060743 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.475894246 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.473711496 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.484316895 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.479877853 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.489137061 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.475433293 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.479964596 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.481385867 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.485839994 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.48548094 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.483137486 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.476750709 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.478668133 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.496089412 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.487214121 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.479679504 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.479073841 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.486446775 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.478683847 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.482731568 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.480085002 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.480284609 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.481567943 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.489183366 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.480617543 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.478888481 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.479727764 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.487592103 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.496395876 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.485034654 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.47967252 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.499307768 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.495447431 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.491315062 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.478393027 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.481052863 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.480627878 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.485835314 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.486923442 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.478373122 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.500445692 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.48721042 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.488172553 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.491212046 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.484403848 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.477671287 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.487358973 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.486433994 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.489623018 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.493119621 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.489644109 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.492142611 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.487719842 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.486811976 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.48022692 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.480731174 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.481734793 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.482896533 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.489209976 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.491616357 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.487640293 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.487389353 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.49156642 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.4885131 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.486944324 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.487216287 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.478425434 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.489683988 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.480076691 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.494044878 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.486397957 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.48222019 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.489419989 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.488204959 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.481891587 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.485880013 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.492015151 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.489470414 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.482392349 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.489828071 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.497666218 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.495464751 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.488242674 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.482674089 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.486635626 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.491546935 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.489794128 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.488910007 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.482973708 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.504882709 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.499703559 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.48436781 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.489051087 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.500132594 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.496572644 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.49084503 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.488350579 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.493445012 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.488550045 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.493486567 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.49074411 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.500501006 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.493054459 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.483863066 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.49054555 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.483519866 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.483498565 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.495250199 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.49764792 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.489693556 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.485491067 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.502269457 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.498127241 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.494459806 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.510044049 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.495013437 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.494291278 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.496909767 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.483365587 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.494431799 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.494707253 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.497008104 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.489223316 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.490777843 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.490794465 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.480683263 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.498266644 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.503241369 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.500268156 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.492466675 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.483889747 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.487000617 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.492110205 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.520249817 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.490203748 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.491282166 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.49271517 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.488965252 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.488589366 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.510174723 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.505414411 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.498878663 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.494027418 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.491224268 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.500735883 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.489399595 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.48990322 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.497704352 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.495645501 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.493117456 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.498532599 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.503797166 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.494011913 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.488044115 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.488188197 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.488079734 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.497158822 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.508476741 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.510281999 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.504623528 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.495352307 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.49691773 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.494726459 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.4896439 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.498043641 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.494900294 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.493685894 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.490302852 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.497526117 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.495947146 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.495819965 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.490001976 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.498408142 seconds)
  done (took 880.698293361 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.495709196 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.494687557 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.497602035 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.496137183 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.495039139 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.496449164 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.495779177 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.495801527 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.494786104 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.495503164 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.495666873 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.495686288 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.495483259 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.495338129 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.495427806 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.494719964 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.493411557 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.494508554 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.495618822 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.495914808 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.496233285 seconds)
  done (took 32.762416018 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.496451399 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.493102999 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.496330294 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.497746676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.497422193 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.496511742 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.497034295 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.496262479 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.497862194 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.498163908 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.497156028 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.496183907 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.49542578 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.498531273 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.498396409 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.498393127 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.497601755 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.495104161 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.498592244 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.498154479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.498289692 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.495001774 seconds)
  done (took 34.288440521 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.496457825 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.499140358 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.49101209 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.500870118 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.49850606 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.498579393 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.504915674 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.496211984 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.498652657 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.489469785 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.492473589 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.487631283 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.495320878 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.502468435 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.50195601 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.501367597 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.499190365 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.499225845 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.498751064 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.500245318 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.509974627 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.506975852 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.49867333 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.488632458 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.502056093 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.499319013 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.498324053 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.496667 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.492171316 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.502096111 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.499564645 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.492612434 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.508197725 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.499697552 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.493861196 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.501729026 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.50364135 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.499639305 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.499772492 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.504669832 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.508883916 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.500887578 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.511683015 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.509095046 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.501459438 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.496081659 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.505472379 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.50091314 seconds)
  done (took 73.345838813 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.49667971 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.494377044 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.501237483 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.500081679 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.501910543 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.500703686 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.499491521 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.498796949 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.498577299 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.501418512 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.501928842 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.502914023 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.503517451 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.502769801 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.502353477 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.501838607 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.503042601 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.503226144 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.502512785 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.502963121 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.502844042 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.502391889 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.504057185 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.502775318 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.502827979 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.502360391 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.500501775 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.502763864 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.502794315 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.50022227 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.500626092 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.50295474 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.504861547 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.503145198 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.501552397 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.501552188 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.503721318 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.504436144 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.503731655 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.504810912 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.504221801 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.504606556 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.504677515 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.501226517 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.505324874 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.505026652 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.504828792 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.505268233 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.50485596 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.505662487 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.505404214 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.500308663 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.504831515 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.5040333 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.506317877 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.50389236 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.506142226 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.504291223 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.502220359 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.506762836 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.506799084 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.505333115 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.503283833 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.506043541 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.50479848 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.505600817 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.506821014 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.504928594 seconds)
  done (took 103.572082458 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.507453078 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.507454056 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.508463332 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.506982488 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.507642347 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.50678763 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.507714773 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.505386893 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.510548863 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.506977249 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.509944316 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.5077953 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.507876875 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.508243402 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.507910538 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.507935472 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.508171046 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.50872803 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.508880074 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.509100424 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.50815184 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.509144494 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.508256671 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.508588278 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.511170799 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.508617401 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.509940545 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.506420684 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.508730754 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.508275808 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.510210621 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.510522043 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.50989892 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.509718938 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.508685287 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.509933212 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.509649795 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.510757129 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.509512209 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.510713199 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.510570094 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.50970043 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.510988653 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.510406875 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.510722698 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.507336094 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.510343389 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.51121857 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.510367345 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.509652938 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.5117817 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.510586087 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.511344215 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.510413999 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.511260266 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.511234354 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.511462037 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.512231898 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.511248113 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.512717853 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.511321726 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.511492488 seconds)
  done (took 94.949039262 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.510680583 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.512590463 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.51288673 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.51109139 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.51151365 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.509758189 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.511620856 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.510737504 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.512775263 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.512443238 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.511759002 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.512065047 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.512465028 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.513219942 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.51296607 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.51146525 seconds)
  done (took 25.560597337 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.510258602 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.512651714 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.513837968 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.512770305 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.512950913 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.513144444 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.510838075 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.513939448 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.512759619 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.513105054 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.51392073 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.514040857 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.513622996 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.516139518 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.512786368 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.514531143 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.512805155 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.514513473 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.513799625 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.514482254 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.51481386 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.514608178 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.514043162 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.514859536 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.514943765 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.51294365 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.513540235 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.514989999 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.514939434 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.514886914 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.514482813 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.515779277 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.513990362 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.514036108 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.517087124 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.515117809 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.514781523 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.515534692 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.515283613 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.515162787 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.515021637 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.512791466 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.515910298 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.515693721 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.516354908 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.516297498 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.51652567 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.515725848 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.515326774 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.515341442 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.515938864 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.516150134 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.513308781 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.517558623 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.516588946 seconds)
  done (took 84.670496718 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.515654889 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.516546204 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.516254756 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.516552629 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.516260412 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.516975309 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.518093327 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.51903416 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.517100254 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.516092864 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.516450451 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.516090069 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.517393797 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.517020006 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.517917746 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.51689101 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.515979651 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.517998902 seconds)
  done (took 28.679125398 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.517981721 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.517199987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.516738616 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.518186216 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.518456572 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.518790553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.518609105 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.518830223 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.518397975 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.51853249 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.515129054 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.518776655 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.518422838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.518014965 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.51828574 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.518016711 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.519595473 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.517752781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.520652242 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.519748286 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.519207785 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.519210928 seconds)
  done (took 34.779947926 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.50704716 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.506287985 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.507219877 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.530244873 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.514933218 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.50772029 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.507871497 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.51307579 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.536690804 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.544057244 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.537586379 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.514609085 seconds)
  done (took 19.603814005 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.520780401 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.521180312 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.520790389 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.520851569 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.520245486 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.520642255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.520908141 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.519498255 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.520654408 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.520822026 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.521752382 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.522764802 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.5228667 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.521211042 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.52196896 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.521078763 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.521343601 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.521431671 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.521563252 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.522103684 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.522058846 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.522961475 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.521049011 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.522034332 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.521701328 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.522468395 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.522027976 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.522533417 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.522607868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.522788826 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.522992484 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.524037869 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.522504713 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.523505608 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.52390063 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.523685798 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.522908255 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.522817601 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.523191252 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.523385621 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.523841754 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.524235868 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.525842986 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.522219132 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.52270823 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.524669862 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.523946795 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.523116312 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.524171824 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.523363481 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.524837621 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.524619297 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.523099411 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.524057703 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.525799405 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.526035818 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.524549386 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.525074382 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.525193672 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.525218535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.525407316 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.525475062 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.524651913 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.526794364 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.525692059 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.525571722 seconds)
  done (took 101.900592319 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.52656312 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.526013608 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.525130186 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.527646637 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.524921431 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.525631507 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.524922967 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.525049729 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.525409202 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.526732415 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.525868478 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.526753717 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.526385164 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.52444609 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.5250359 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.525406129 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.526574503 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.52670832 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.527101526 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527401774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.526566262 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.526882224 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.526667253 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.526972669 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.527811952 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.526782421 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.527496339 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.532479235 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.526531341 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527586993 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.52770705 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.528413285 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.528139088 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.527916713 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.528268364 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.528366142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.531633597 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.527787716 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.527468682 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527930752 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.528072529 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.528115761 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.528947711 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.528454631 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.529840003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.528393869 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.529503298 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.528654028 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.528978371 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.528980187 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.530417521 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.527875088 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.528413634 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.529194809 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.528157387 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.533029305 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.530058117 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.530195984 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.529077057 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.530309406 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.530003431 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.529891196 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.53032107 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.530516206 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.529434504 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.531139889 seconds)
  done (took 102.229778594 seconds)
done (took 1959.944835773 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.492203094 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.493841431 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.516738686 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.455302801 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.519352845 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.301301792 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.186019955 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.517734413 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.519099321 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.518106248 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.518472775 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.494985152 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.8607721 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.518139911 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.517336667 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.493125767 seconds)
  done (took 58.309028335 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.554409956 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.556699494 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.67225504 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.545430323 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.577707333 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.785690764 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.611415809 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.549213905 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.723838625 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.551503233 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.520143728 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.574441555 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.545758926 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.520165728 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.569424925 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.784831995 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.865027319 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.521670668 seconds)
  done (took 33.41729769 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.041542782 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.548439226 seconds)
  done (took 5.996336964 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.568772677 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.544008774 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.554583722 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.543491669 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.515018565 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.51731767 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.544229262 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.520461715 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.533797699 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.68130221 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.550540331 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.56815095 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.54577499 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.547540648 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.556733716 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.601605972 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.738120679 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.563686346 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.555291074 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.562052339 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.544392203 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.763397775 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.600070233 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.556220383 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.679654306 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.518190826 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.563851172 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.568960411 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.754497342 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.557597304 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.54459579 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.545919422 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.553687519 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.520009283 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.150746614 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.534350352 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.583998077 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.563819463 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.5572115 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.746127703 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.547941047 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.563399857 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.531397673 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.146980912 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.724548283 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.813275836 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.522645303 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.571227389 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.550306851 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.744181645 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.551531378 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.550393035 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.648456204 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.520897246 seconds)
  done (took 98.115890019 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.557548484 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.521065912 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.785238961 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.542354234 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.520166217 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.522742452 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.522332554 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.867097275 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.533061501 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.522418947 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.925495693 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.246618442 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.522946877 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.570720621 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.570100779 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.559715031 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.521726541 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.520735143 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.52227675 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.523998547 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.176462244 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.525853043 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.522304757 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.72354585 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.592457462 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.160036762 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.521209575 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.522372922 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.522592713 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.52365018 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.214407013 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.532145184 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.582232141 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.524372059 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.894089884 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.006048255 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968578197 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.527016389 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.551729937 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.523208573 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.525417583 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.165362579 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.988937769 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.526885856 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.52395364 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.164415041 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.525126415 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.525487075 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.528804326 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.878218383 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.524227278 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.524936516 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.52330656 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.52796246 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.523872344 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.593072834 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.608556926 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.16901437 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.527221653 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.524335393 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.526372314 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.524816249 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.528212631 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.5247191 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.525782922 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.988303331 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.74150847 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.531697851 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.987628105 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.212971845 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.527180517 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.282970201 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.526975672 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.566995706 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.642313384 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.524935049 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.524500078 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.159682317 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.532435724 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.525492523 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968349257 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.532148117 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.915738028 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.544628965 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.526438872 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.215032652 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.537356462 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.593245901 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.52627272 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.540628037 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.525616002 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.531235432 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.898462297 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.560554872 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.526113621 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.525630878 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.565096861 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.528392333 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.52735533 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.532213349 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.287157746 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.53407427 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.525873088 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.530477305 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.526609564 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.531194016 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.526638338 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.526311133 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.892683141 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.528035165 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.537640367 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.52621517 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.525794307 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.546350761 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.732765598 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.531054543 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.922810715 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.532599362 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.527844149 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.533287997 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.526757278 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.554645322 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.528863971 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.527103272 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.525373094 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.970959784 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.549021073 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.529128111 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.527598307 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.526304288 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.531526739 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.533108785 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.567038238 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.528857057 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.433766543 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.555143849 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.559155532 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.527334586 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.533320543 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.527471615 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.537755604 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.528231558 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931807948 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.900660831 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.745490052 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.533558143 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.529605616 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.427022039 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.583095169 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.791992333 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.546046464 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.528363069 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.915883927 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.740474889 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.528711786 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.529424238 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.530034232 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.897253484 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.52937486 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.949902708 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.236144695 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.532922169 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.540493034 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.442257078 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.369401863 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.531179209 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.534514898 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.911064389 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.549169067 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.530227413 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.529967114 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.5307742 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.530309895 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.535814785 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.535502245 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.530555736 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.52873239 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.606439059 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.807587543 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.546103663 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.537690792 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.161631098 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.546894965 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.531018575 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.539575668 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.531877482 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.531313514 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.588891437 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.534658703 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.566276759 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.532053133 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.537918754 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.235670053 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.534720372 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.548682064 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.810238509 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.374005521 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.535515166 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.532326004 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.534984721 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.570602448 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.191723193 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.54139629 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.923849185 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.540009243 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.601459655 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.532513528 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.5620126 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.191555085 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.552770014 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.534707521 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.358075074 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.535349991 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.316089288 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.532533362 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.537882157 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.294595493 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.53672349 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.536738924 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.532999343 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.537137858 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931312006 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.534244892 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.565050207 seconds)
  done (took 547.027921302 seconds)
done (took 744.251417745 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.533152855 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.535031655 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.53780568 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.53739229 seconds)
  done (took 11.566216836 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.572421604 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.563136066 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.576463669 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.563199692 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.572806221 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.563175108 seconds)
  done (took 10.833664882 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.535145985 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.53385895 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.537979795 seconds)
  done (took 9.029792127 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.817210136 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.545677562 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.976467329 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.547353473 seconds)
  done (took 10.309842684 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.572994094 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.573225059 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.574036614 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.572802799 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.574554768 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.575409904 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.573892393 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.573870392 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.574952723 seconds)
  done (took 15.588355126 seconds)
done (took 58.750553546 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.803249841 seconds)
    (2/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.675912628 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.822758047 seconds)
    (4/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.524007976 seconds)
    (5/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.604119211 seconds)
    (6/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.788395996 seconds)
    (7/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.597979533 seconds)
    (8/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.734443466 seconds)
    (9/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.776778667 seconds)
    (10/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.693973235 seconds)
    (11/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.523692853 seconds)
    (12/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.539736862 seconds)
    (13/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.72308371 seconds)
    (14/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.695518473 seconds)
    (15/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.521670528 seconds)
    (16/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.526319094 seconds)
    (17/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.848054351 seconds)
    (18/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.632142188 seconds)
    (19/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.522862719 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.131596134 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.862415674 seconds)
    (22/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.692632492 seconds)
    (23/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.769365085 seconds)
    (24/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.739237162 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.693358562 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.763109889 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.734971186 seconds)
    (28/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.879113538 seconds)
    (29/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.53375307 seconds)
    (30/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.775596673 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.6726201 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.523231201 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.900623117 seconds)
    (34/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.521619823 seconds)
    (35/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.719074891 seconds)
    (36/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.522296097 seconds)
    (37/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.605141338 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.858260886 seconds)
    (39/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.032564756 seconds)
    (40/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.988495814 seconds)
    (41/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.100762045 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.923967706 seconds)
    (43/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.526238288 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.199279112 seconds)
    (45/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.701823815 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.139522352 seconds)
    (47/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.837989594 seconds)
    (48/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.717096288 seconds)
    (49/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.963331999 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.725509997 seconds)
    (51/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.760179698 seconds)
    (52/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.527740085 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.947113945 seconds)
    (54/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.920900975 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.541209046 seconds)
    (56/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.883083666 seconds)
    (57/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.76132782 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.543849536 seconds)
    (59/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.614500699 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.69317872 seconds)
    (61/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.602938614 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.716654262 seconds)
    (63/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.605467078 seconds)
    (64/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.521967005 seconds)
    (65/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.783012001 seconds)
    (66/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.544738406 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.698998315 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.536680258 seconds)
    (69/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.747453639 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.538862659 seconds)
    (71/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.775046952 seconds)
    (72/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.66359081 seconds)
    (73/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.505707255 seconds)
    (74/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.019691959 seconds)
    (75/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.515714184 seconds)
    (76/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.524209887 seconds)
    (77/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.739325999 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.754473247 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.685172116 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.662131407 seconds)
    (81/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.114023509 seconds)
    (82/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.726479604 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.704695269 seconds)
    (84/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.587148827 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.682172573 seconds)
    (86/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.881148014 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.007930687 seconds)
    (88/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.535420322 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.711623595 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.853557076 seconds)
    (91/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.670381757 seconds)
    (92/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.739950799 seconds)
    (93/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.883104758 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.71767164 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.586080255 seconds)
    (96/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.596846009 seconds)
    (97/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.816644212 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.165695232 seconds)
    (99/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.51448805 seconds)
    (100/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.596701648 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.68626569 seconds)
    (102/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.6253335 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.596170784 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.77093358 seconds)
    (105/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.506770518 seconds)
    (106/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.593980003 seconds)
    (107/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.511387377 seconds)
    (108/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.515358972 seconds)
    (109/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.516179886 seconds)
    (110/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.984002295 seconds)
    (111/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.513070482 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.546485416 seconds)
    (113/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.910528077 seconds)
    (114/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.959324856 seconds)
    (115/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.876569989 seconds)
    (116/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.827386359 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.705842273 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.596909914 seconds)
    (119/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.523702142 seconds)
    (120/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.921027388 seconds)
    (121/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.335769234 seconds)
    (122/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.085787236 seconds)
    (123/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.660637292 seconds)
    (124/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.767560177 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.536933083 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.788503482 seconds)
    (127/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.704974285 seconds)
    (128/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.683252878 seconds)
    (129/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.882943075 seconds)
    (130/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.711457651 seconds)
    (131/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.648362547 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.741142013 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.686959145 seconds)
    (134/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.718303982 seconds)
    (135/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.658364098 seconds)
    (136/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.726398518 seconds)
    (137/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.627438308 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.664414937 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.765709033 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.711374121 seconds)
    (141/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.913998212 seconds)
    (142/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.517738603 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.96376753 seconds)
    (144/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.517485778 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.804175517 seconds)
    (146/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.539603465 seconds)
    (147/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.870871987 seconds)
    (148/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.921991268 seconds)
    (149/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.984313508 seconds)
    (150/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.514274057 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.75827827 seconds)
    (152/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.695209984 seconds)
    (153/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.662703127 seconds)
    (154/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.823728632 seconds)
    (155/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.602958519 seconds)
    (156/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.518045905 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.520429169 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.653551335 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.521232832 seconds)
    (160/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.178780206 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.605106907 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.720358364 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.756892689 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.773317193 seconds)
    (165/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.337796377 seconds)
    (166/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.516418114 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.726147089 seconds)
    (168/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.606806634 seconds)
    (169/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.512532215 seconds)
    (170/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.519080325 seconds)
    (171/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.560684777 seconds)
    (172/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.668264798 seconds)
    (173/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.527495222 seconds)
    (174/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.527078828 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.738929162 seconds)
    (176/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.022936576 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.095570393 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.821429737 seconds)
    (179/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.764184118 seconds)
    (180/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.514358006 seconds)
    (181/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.540094868 seconds)
    (182/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.720705755 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.532037768 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.746276604 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.676547486 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.517325003 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.736117281 seconds)
    (188/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.955224544 seconds)
    (189/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.189736209 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.592285444 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.69173126 seconds)
    (192/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.93208892 seconds)
  done (took 380.59607553 seconds)
done (took 382.019855468 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.592048193 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.719825405 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.562609253 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.564531146 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.573346513 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.542190107 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.590775684 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.565090924 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.586205411 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.582900312 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.539653262 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.570481763 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.590509589 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.574205909 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.603714062 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.564166994 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.566520156 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.570692404 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.582829422 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.587963455 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.565938728 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.569888531 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.59693366 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.564793051 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.581484419 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.577001517 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.575858355 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.539820671 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.568196487 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.584312013 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.54243504 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.578010165 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.584481169 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.571915185 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.564453203 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.570213572 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.574374786 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.722559203 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.592699113 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.573593122 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.575770564 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.590310402 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.57958327 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.577822292 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.576263853 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.600600677 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.580813314 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.590914668 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.547748774 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.538187223 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.593606421 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.581584362 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.575585135 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.535148499 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.543859593 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.592981622 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.573577408 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.59461919 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.574795649 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.574688373 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.608179713 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.595388422 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.582931531 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.580917587 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.577093289 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.593354085 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.576277263 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.589441786 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.575217561 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.574344266 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.573142995 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.577248615 seconds)
done (took 123.15618865 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.747941202 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.537128569 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.784624078 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.573267662 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.793142969 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.744255118 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.576209866 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.576628006 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.570366944 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.434449031 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.577945352 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.57303055 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.538048309 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.578257542 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.744338718 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.571324468 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.579234761 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.332531252 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.575638913 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.759726708 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.542654342 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.578234145 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.577570653 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.441928055 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.540110164 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.544239111 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.760923788 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.576445162 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.342986353 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.5479928 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.540293846 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.340399502 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.757310618 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.596947349 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.585314655 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.585408312 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.792504619 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.579357682 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.74923983 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.750241843 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.789782905 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.613921994 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.547863174 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.541899777 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.575956202 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.576991809 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.57775685 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.604904087 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.538247077 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.578579301 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.335857025 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.585933239 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.590946935 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.579699346 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.576910094 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.599591261 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.579935968 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.579941695 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.763396938 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.581062019 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.752795799 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.445844614 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.436361216 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.581650851 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.541925338 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.581781105 seconds)
  done (took 125.379935608 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.696663382 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.704583383 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.740095929 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.573868018 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.663447635 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.737633047 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.571940189 seconds)
  done (took 13.116670982 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.586110845 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.583673804 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.663149832 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.662549198 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.581112585 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.805150921 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.58037953 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.589574414 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.579688311 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.663081806 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.583223048 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.582881943 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.591371361 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.548038057 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.664001686 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.591170637 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.744996903 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.571726125 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.580943569 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.785590054 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.580977162 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.586288592 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.668220798 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.594069329 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.581483441 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.585702484 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.397351577 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.58313421 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.582704058 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.583637416 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.578181067 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.69227253 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.576147498 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.547564324 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.580516 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.745989416 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.583572953 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.582989918 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.581431899 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.552596667 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.583959385 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.580597645 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.580429118 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.584627137 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.581397677 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.608274908 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.585498198 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.582260286 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.582352336 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.584368166 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.668659751 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.578185606 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.58475341 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.584431931 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.67064478 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.594206568 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.584726172 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.583466934 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.583327671 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.585053518 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.78820952 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.667897853 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.585239087 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.668704519 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.584686363 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.585125805 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.582076115 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.582693302 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.72425886 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.583703138 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.668557294 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.586176496 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.818362307 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.609823148 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.584919632 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.577090773 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.581227333 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.585051633 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.544480342 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.591085151 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.584243988 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.579472711 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.591013425 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.581600286 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.585386312 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.79559796 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.748375195 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.581942857 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.599510594 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.59203192 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.586200452 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.669565871 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.581710356 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.585384356 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.666320208 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.749697849 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.666522398 seconds)
  done (took 162.850270629 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.59883048 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.596403146 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.586146465 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.613671194 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.579216044 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.575451599 seconds)
  done (took 10.980315235 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.581821543 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.588560738 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.585161773 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.588232485 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.586303747 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.587000903 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.588083163 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.578544381 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.588864967 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.58958964 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.588593214 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.590346509 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.589108364 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.587359398 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.589357209 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.588586998 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.588286611 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.587730465 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.589534326 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.588502002 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.554959608 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.586937208 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.588179544 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.583474267 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.596648359 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.591003297 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.610928876 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.589858319 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.588784231 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.595734345 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.592325044 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.589402256 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.58369287 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.585759614 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.590419285 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.585797398 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.592582269 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.592957527 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.589441157 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.591633406 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.592764695 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.588993824 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.589358465 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.592340968 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.581427149 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.586356408 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.593221666 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.613798305 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.590193697 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.591170078 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.591660225 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.591219526 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.592558034 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.591487228 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.586448808 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.58743748 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.597610562 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.594216066 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.593598739 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.584551989 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.594165362 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.59298253 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.585591436 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.595609959 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.592704281 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.593389983 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.585855505 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.593001456 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.594041882 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.593204415 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.596817794 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.590455252 seconds)
  done (took 116.907028195 seconds)
done (took 430.654371004 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.83477857 seconds)
  done (took 4.275362041 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.610860013 seconds)
  done (took 4.052658652 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.487132966 seconds)
  done (took 22.933320432 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.638661872 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.569835103 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.575863942 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.573200265 seconds)
  done (took 11.800217752 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.039779151 seconds)
  done (took 4.49036578 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.57691198 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.573220798 seconds)
  done (took 6.600109623 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.893707782 seconds)
  done (took 4.34367401 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.263177531 seconds)
  done (took 4.71232082 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.593313438 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.589354694 seconds)
  done (took 6.638744424 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.553095963 seconds)
  done (took 4.0022572 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.449448215 seconds)
  done (took 17.893421923 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.568573001 seconds)
  done (took 4.014502612 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.603100856 seconds)
  done (took 4.045436504 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.101805544 seconds)
  done (took 6.544976844 seconds)
done (took 107.78649457 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.557628663 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.563217153 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.564142269 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.56380773 seconds)
  done (took 11.690643831 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.714832592 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.711701328 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.720121114 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.705861129 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.706185263 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.717859722 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.630103102 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.632204137 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.693178721 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.691075171 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.722904079 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.700593839 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.715350325 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.632834664 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.692391609 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.722200917 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.694867902 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.725501476 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.630343915 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.70674979 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.598769019 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.707589422 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.692698841 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.599697839 seconds)
  done (took 41.90926479 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.146975324 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.718801462 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.803100311 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.682407588 seconds)
  done (took 8.795720741 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.763660518 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.765777478 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.778105232 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.815647646 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.870556165 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.776646877 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.634694328 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.627838149 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.61514275 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.768165072 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.843436865 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.757998835 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.983321064 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.600870753 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.982003228 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.600967413 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.600116817 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.764704017 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.8167239 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.843545607 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.601720861 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.763233579 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.770886018 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.763187693 seconds)
  done (took 43.555964485 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.616783182 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.629667223 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.602684531 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.625345234 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.602745782 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.604085129 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.60441478 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.616640915 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.601202709 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.602645699 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.603988258 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.623887088 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.604985313 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.603218957 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.617143074 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.605962672 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.605746862 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.616779131 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.619323728 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.60266763 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.601299159 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.618408458 seconds)
  done (took 36.877784529 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.567058143 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.56572606 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.005520185 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.907802871 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.566873623 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.565789337 seconds)
  done (took 15.625976041 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.679981791 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.855343686 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.594609482 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.966437352 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.091829136 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.597537438 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.59584686 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.897186646 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.199316128 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.167657493 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.653086192 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.681605042 seconds)
  done (took 23.429225463 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733027852 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.577060253 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.586631372 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583168921 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.578753345 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.577547605 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.591495748 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127638228 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.608717631 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937011473 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.576763288 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739347091 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.906555366 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584015676 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.581401728 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.552726363 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895119624 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189838386 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.582904502 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.578244273 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642906895 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.588226757 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.582190235 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.82430161 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.582541956 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.577406317 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.922890265 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.577172348 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942637259 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891369566 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903258508 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.582380693 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935350438 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078501743 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759409629 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82023133 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581524228 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.581094147 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.577894997 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.584353499 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.596642213 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.586106725 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893162042 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586333988 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.580228324 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.584576083 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138305716 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.614611607 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.579350838 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.580702057 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901750495 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745835696 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.607512799 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.581472337 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615945785 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584487804 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.608349498 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775638928 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312025782 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582294089 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594214111 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.582582534 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.583556121 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602669585 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323165467 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.616328026 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.608984495 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609226076 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579133561 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.5935634 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636335249 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582721797 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.629850556 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58154134 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431089316 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.597396568 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586774268 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239677196 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592512428 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.585276801 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894927351 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.582121861 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582286965 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.581433505 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.582362743 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.442971903 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616963651 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.558008319 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646127276 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.130682051 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.830002475 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637214062 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641742291 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.889679546 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.556473836 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583770604 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.591715679 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590670923 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635299084 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13759557 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587794579 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.611568133 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920685375 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.8802083 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581912476 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.564807578 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146457311 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596184682 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.642546514 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.586547004 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.832856818 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.295680198 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921683407 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.588248897 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653424504 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.58539567 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.523482141 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595531946 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.619440294 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.598190314 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948588225 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.542494894 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586488967 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737300672 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.588823551 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.588446478 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.586869531 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58966458 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.586592121 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.825737407 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.594499412 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911012567 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.588513805 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586714553 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.595291483 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605572678 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.591270859 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.891634544 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594206638 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945296326 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586869043 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588493481 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587237595 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.892270239 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.595913419 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.617779327 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015390714 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586919677 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.605510659 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917145679 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652998122 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.7852611 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652265976 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.602042899 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.929963371 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.617535861 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.617541379 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.588254484 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.593565914 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593947596 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.619513138 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594050333 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297803582 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592004262 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.600482505 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.589517144 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.634162417 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741469428 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619030954 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.83323871 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.598571718 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587788853 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.61757595 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.599303514 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89949951 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91066364 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.596266467 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839252185 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.146036937 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302463533 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636252138 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.591173571 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.590532847 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.591138371 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590459792 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58933898 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.592074593 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835701244 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927229573 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.604007046 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306333927 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594388644 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.601149769 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.621120396 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912261748 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.62383806 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.592681584 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.597152752 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597544353 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609011593 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91488331 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894790462 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.636689274 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.591806891 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.196755816 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621883691 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.593561863 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.592339781 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.65016515 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.603889643 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23670538 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025154595 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.592912269 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915188936 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.600730163 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.642681238 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.59177686 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604999141 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594450104 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.60546198 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62480585 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.839390749 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.598815255 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595926898 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32139932 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466645025 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250447072 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.628888352 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.604225231 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.599635121 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155146545 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597991476 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595833381 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928301148 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151100989 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598583801 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152969732 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.603859402 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.461142021 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917093367 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908384788 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595419921 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.596655483 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920715337 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.893349077 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653199754 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.607760805 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600179395 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.569731389 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238718205 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603401243 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851681209 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154658843 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599230321 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.597174473 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.675988476 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.602140817 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076697043 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.59922187 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595222409 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.595266619 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.602180626 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243026644 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.609467796 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.59761154 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336274466 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.614528845 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.165474324 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602661623 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.842991138 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.921279305 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.905847594 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.598812531 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.598912753 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.928932932 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921011744 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600985153 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.612592495 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253461351 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.547360666 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.62553646 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.598382867 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.526081634 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604237173 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965099123 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.603597218 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.616912667 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600809502 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.597212257 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598564804 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.598476524 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.608103238 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599212302 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191592381 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.600368106 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619663646 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609788018 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604564869 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93461473 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.645642718 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307899838 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921883642 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.596235318 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664104074 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.62610392 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601944424 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.580387073 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.598766575 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.599918887 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615075353 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907879836 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.600655921 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.578608355 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.674563574 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.903333099 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.601638728 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.602534443 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892254455 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.604394665 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.620557195 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460274662 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666423433 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.602953491 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607060088 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.596717991 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66623563 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.75393058 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848300821 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.931514056 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.926653731 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079873635 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607488494 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.605507586 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.646830299 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.761771801 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601640753 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.606505199 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.601572309 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310979769 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467959997 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323845162 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933852342 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.608003504 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607475644 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604098329 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928676405 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.60296236 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962392145 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.604990621 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.59879046 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658793971 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607233573 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61961329 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909908795 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96347692 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603742347 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615359048 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.608762748 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.603693319 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937975003 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.901973918 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220681415 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268133888 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606534253 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.615396483 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176063311 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96628419 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605003401 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.604606424 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604028557 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.60623631 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.612676793 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.63898852 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609661536 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918766206 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921244036 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119403312 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927225452 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.633165363 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.563622162 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606440805 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.945045596 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527942974 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851280669 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327031881 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421015899 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946899184 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758160657 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855453616 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.609392717 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929659142 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.605612558 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.611048514 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.605889338 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607300552 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.605446125 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.922870499 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321810197 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946061437 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.634278004 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.604671027 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669615877 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.85253418 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916679069 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.479614063 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.917239895 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940777105 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.620044351 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.605655649 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325923569 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943150593 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608810311 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.635240487 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894344386 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.613301035 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673789524 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.569254302 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.608745568 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270080085 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.908508128 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657433463 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608941892 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428626923 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332907907 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.615349899 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215258589 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.611927327 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610010603 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.974504788 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.639428799 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.619691722 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983655882 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.638554526 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.621424974 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862869573 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.324453968 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.485627816 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.61832409 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614928267 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.615530998 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6105796 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693783616 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614476464 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.613491352 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.083225667 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.614937626 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.611449682 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654077729 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.616640496 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626445863 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.615039733 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611435923 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.642609441 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.597552943 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.60298436 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.628256499 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804316317 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260275486 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619781818 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.311261998 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.033178521 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.947959723 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.620106789 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.59027611 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.640716602 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612129029 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610270413 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612967334 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.612510152 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276440391 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.627330612 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.940054598 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641440228 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.909865353 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911326852 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.622776961 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864028519 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629701724 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668296785 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.58897769 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61336487 seconds)
  done (took 1100.929165951 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.630333927 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.629911108 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.613011333 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.66434342 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.608815478 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.710990762 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.606226393 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.643797092 seconds)
  done (took 22.588109773 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.603338316 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.638502494 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.618925214 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.638557878 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.604155808 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.172966199 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.621259519 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.639370411 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.66153587 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.616722001 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.623474117 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.323640457 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.642272108 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.620710846 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.622385221 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.643152876 seconds)
  done (took 36.773815162 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.654352764 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.907213341 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.525839983 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.619830706 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.646511124 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.607955942 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.932158692 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.607070006 seconds)
  done (took 28.984786404 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.650941994 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.651171703 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.652611411 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.650704744 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.651096763 seconds)
  done (took 9.737529961 seconds)
done (took 1382.342839373 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.644235276 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.644917486 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.642706311 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.644622336 seconds)
  done (took 8.059513854 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.590483678 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.592225101 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.5936558 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.627740022 seconds)
  done (took 10.888549026 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.059312151 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.2432926 seconds)
  done (took 5.788172993 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.616911061 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.461142929 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.448186743 seconds)
  done (took 9.009782319 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.985609064 seconds)
  done (took 3.471244493 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.132608204 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.192829688 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.609888101 seconds)
  done (took 8.420110756 seconds)
done (took 47.121207035 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.620328186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.375213356 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.767926843 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.61922204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.770217638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.767360919 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.859476195 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.611294565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.607397631 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.610326285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.620567043 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.77171252 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.847505469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.37404575 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.849399215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.374880842 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.772128634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.60814584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.622467215 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.612060654 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.862418678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.608915002 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.623486757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.621257634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.775665118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.755701965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.609549581 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.37358375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.60982252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.608498469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.757295812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.619795576 seconds)
  done (took 90.374491688 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.617731277 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.609399073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.61003365 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.624893501 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.619478148 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.607922977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.627593146 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.623270459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.607474247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.609705256 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.610109358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.616255741 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.609694152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.61035904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.608339371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.610162088 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.622814186 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.620095475 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.610537206 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.609921974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.61247607 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.610714254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.611333117 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.608547567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.618536059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.61118638 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.613230006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.622097335 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.61011746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.611030286 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.611514006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.617551226 seconds)
  done (took 85.130587558 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.623734555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.611509885 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.619894541 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.610853866 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.612091593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.624781335 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.613287486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.612057022 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.629454416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.618587811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.612331499 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.613615181 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.615571366 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.613795301 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.615537283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.61461915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.613059315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.611733587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.635077687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.624077056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.613655759 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.622624148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.613134813 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.626004326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.618629925 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.614208832 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.628175482 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.612180501 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.628658924 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.613211917 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.617434941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.631876861 seconds)
  done (took 85.275912743 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.93860155 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.650542223 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.654505088 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.622901418 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.653061328 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.650737081 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.624203608 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.944185012 seconds)
  done (took 17.228424998 seconds)
done (took 279.494874111 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.63553822 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.640445828 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.6837535 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.623686713 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.670623897 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.681728172 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.902854197 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.681128655 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.897604507 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.625437355 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.66972071 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.625576968 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.525622078 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.837498749 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.618138662 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.624244815 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.609337333 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.616696369 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.63406862 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.930781421 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.686648631 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.617949392 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.625214701 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.62004889 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.600130296 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.720013907 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.722423222 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.856595241 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.818048231 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.717824802 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.617723246 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.627314479 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.638895631 seconds)
  done (took 75.093506585 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.642878191 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.654667608 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.655541113 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.65408185 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.655132891 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.654403608 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.640088031 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.65583256 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.656275284 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.654872453 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.65411677 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.654975608 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.656278427 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.655645876 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.656640624 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.634575109 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.646493594 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.657519018 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.643326292 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.641374018 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.654641906 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.656188332 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.65739512 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.6571358 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.656318865 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.65675237 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.657766047 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.657828205 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.654983989 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.657858307 seconds)
  done (took 51.087345257 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.657374935 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.617305455 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.622193228 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.663527044 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.649420014 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.653572567 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.986864112 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.66451928 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.654234034 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.653630116 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.622801405 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.662021616 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.714172661 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.624487164 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.652495684 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.659135006 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.659092961 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.650578262 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.622335075 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.673625396 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.997763054 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.662045921 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.987118544 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.673318095 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.654284739 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.654200789 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.663278619 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.623041101 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.675047016 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.627159571 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.46383978 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.978281595 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.624812415 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.623534739 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.465975177 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.666151052 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.661625127 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.637803941 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.6580422 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.652114071 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.984838994 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.657372212 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.62355618 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.623130149 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.653228529 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.66313307 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.62816794 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.637268538 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.912029386 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.666898074 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.62628013 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.656976771 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.663801731 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.656404771 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.907610668 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.661362314 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.652292027 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.637093586 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.66323888 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.978325596 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.665291376 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.65478089 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.625189628 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.654671589 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.624866332 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.658245508 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.676531561 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.656122682 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.626333069 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.656080707 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.625492669 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.657675184 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.663518524 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.631071801 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.630585496 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.639433618 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.661372302 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.626342358 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.627046708 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.973941728 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.666962119 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.627392841 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.005289569 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.661240371 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.667243509 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.664817432 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.66373608 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.788413666 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.97918604 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.62386411 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.644748958 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.638820411 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.989524506 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.673802793 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.656420205 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.638097484 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.666137852 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.66258726 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.627391584 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.628920968 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.660471559 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.676117403 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.629182873 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.664651071 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.989467236 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.669200532 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.629659889 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.661582593 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.791159407 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.66566796 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.677819156 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.666575896 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.003610305 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.661036784 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.66496829 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.627273692 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.629050245 seconds)
  done (took 237.04204383 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.629726588 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.62756912 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.640698863 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.62718611 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.629508473 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.660371127 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.629586556 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.632807985 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.658826727 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.633784087 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.630222251 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.661541946 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.659931545 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.629636143 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.630241527 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.631747026 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.631313731 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.634465389 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.631016835 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.631311146 seconds)
  done (took 50.243905459 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.667584753 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.288178615 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.259928515 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.66863775 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.672077573 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.656984593 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.723339889 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.668367325 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.669464671 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.01162173 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.848897894 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.668060652 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.668770728 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.667634202 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.259739105 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.648389296 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.012234308 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.292449899 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.669773859 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.289498337 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.64450654 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.6676085 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.654183958 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.291591969 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.021951186 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.986764379 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.727158112 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.294775473 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.667647471 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.670056716 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.293741963 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.670227408 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.65813886 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.285127949 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.670615237 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.691865705 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.668682799 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.725119514 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.727573248 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.015350067 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.30048444 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.998473479 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.692607628 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.899280907 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.670831745 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.649852541 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.306912004 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.672293733 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.65025322 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.672688126 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.683945493 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.272881069 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.667108716 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.275113896 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.67646633 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.669298659 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.302402142 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.273137248 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.268535196 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.861263154 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.662259286 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.98982182 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.676003981 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.31142403 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.67746513 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.672062418 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.671815319 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.857804334 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.305302371 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.990471345 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.023262805 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.021051559 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.673703898 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.742981003 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.672407644 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.020574754 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.740408679 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.14449959 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.019643141 seconds)
  done (took 150.189122796 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.002468819 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.780967399 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.141636936 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.365686447 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.287163193 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.856812309 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.794624722 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.965233428 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.668512944 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.835365727 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.447765879 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.774074064 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.484867803 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.74746195 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.787685851 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.850575761 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.171396866 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.644054108 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.425415481 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.40168425 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.646902933 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.813797131 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.502922474 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.112353673 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.661198746 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.500347704 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.653990288 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.301085355 seconds)
  done (took 63.136429083 seconds)
done (took 628.28277585 seconds)
SAVING RESULT...
DONE!
