cset: moving following pidspec: 15458
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.539779794 seconds)
loading group "string"... done (took 0.509143863 seconds)
loading group "linalg"... done (took 8.455828036 seconds)
loading group "parallel"... done (took 0.177694896 seconds)
loading group "find"... done (took 1.392407025 seconds)
loading group "tuple"... done (took 2.053366464 seconds)
loading group "dates"... done (took 1.341491829 seconds)
loading group "micro"... done (took 0.215278869 seconds)
loading group "io"... done (took 0.595220762 seconds)
loading group "scalar"... done (took 42.12546711 seconds)
loading group "sparse"... done (took 12.968516247 seconds)
loading group "broadcast"... done (took 1.039893484 seconds)
loading group "union"... done (took 14.740075038 seconds)
loading group "simd"... done (took 4.898729901 seconds)
loading group "random"... done (took 9.839997207 seconds)
loading group "problem"... done (took 2.099027884 seconds)
loading group "array"... done (took 24.158523955 seconds)
loading group "misc"... done (took 1.086576796 seconds)
loading group "sort"... done (took 3.639799412 seconds)
loading group "collection"... done (took 21.095361268 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.593647666 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134755146 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148145623 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.175345047 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205856139 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137964064 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155797767 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.461227043 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.022893119 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.229111964 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125461279 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.540741533 seconds)
done (took 5.689067321 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.226114386 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.075918527 seconds)
    (2/2) benchmarking "String"...
    done (took 0.127237162 seconds)
  done (took 0.906619058 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074563853 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.173395656 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093482026 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109648507 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109643287 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109785929 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092794022 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10905062 seconds)
  done (took 1.502859875 seconds)
done (took 3.422869224 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.816929214 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.815454245 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.489974192 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.129112241 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.155456848 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.130173098 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.309522853 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.157700502 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.104530821 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.11559953 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177352776 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.351946099 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.423890313 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.932536324 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.094758411 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127855288 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078380235 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.704179777 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083390086 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129802888 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.500282343 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.110270272 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118393795 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124443621 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.208902182 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131474011 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.181559487 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101925358 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.728745222 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102161748 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.184616586 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096768673 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161637515 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.227645909 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.077413015 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107242836 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671165896 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190540708 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.111555901 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095496043 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.717445335 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079575264 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190551877 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106968604 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109549594 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.199127648 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.124223502 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076619689 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.100580928 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085822183 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.170787852 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.486736428 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.1092948 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.144386825 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108756093 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.742150099 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096285099 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158189145 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126682701 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.109374174 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097646523 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116555929 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157565588 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.122908012 seconds)
  done (took 19.850744899 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116700016 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139214349 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094114321 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137410012 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137797923 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096288341 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083278935 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093340873 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.110093653 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181693801 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137213548 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144768683 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091771279 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080159843 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119274455 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248781361 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103837596 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119972094 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080416889 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105570901 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1382683 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095846565 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108097763 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093302936 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169181411 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.21848283 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106461295 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123161859 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093506681 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098603997 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142423083 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158975845 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074112388 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09392388 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179026614 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120710458 seconds)
  done (took 5.15844911 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198058559 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119267413 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187762399 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175061536 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148062139 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.1656591 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117434733 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263074406 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.186079312 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.163170683 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161786383 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099076577 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081614093 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129364055 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115002981 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07790172 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096686027 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077482413 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.776535688 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185541744 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.146575179 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.123022467 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101310049 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081481525 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.756357028 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101679248 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080904716 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100833809 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071004757 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169500254 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101165454 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.243700617 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100585783 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108158951 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129870336 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199734496 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13033985 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118387025 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101735462 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078381383 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.215907089 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088766024 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094279037 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103468906 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133113459 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133253503 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098753594 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088742772 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.242836878 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081615657 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115071828 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.035576073 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197189894 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09615131 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098719581 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.342451283 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117621678 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085089272 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099781114 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080568987 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282516392 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131847575 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096854464 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078909036 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104733204 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080795549 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395330891 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106781877 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.855277157 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081519402 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156687454 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100845507 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105134664 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08612661 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101988013 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099897862 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097186824 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080386286 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097291055 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079568999 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.1022417 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099295399 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099858133 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095862161 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146961323 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119678439 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100722795 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126746794 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098299428 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078519117 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126603997 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079650932 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098213531 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123074575 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102993626 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112812026 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097199344 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125210193 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098078868 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.179103485 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080678799 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125179797 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097595193 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111634899 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116057585 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095969943 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082096575 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096334026 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079323038 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157779575 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078369013 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077617401 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098531424 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109180142 seconds)
  done (took 23.807741475 seconds)
done (took 49.520927114 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.42062686 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108979006 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109483918 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108598835 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107364868 seconds)
  done (took 1.640276668 seconds)
done (took 2.399248632 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318603424 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196662849 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099668218 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188861549 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086185738 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195389673 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162226571 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098921361 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206851132 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080703262 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184177432 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081857347 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103539132 seconds)
  done (took 2.791049599 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092227819 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115673146 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079727127 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106268233 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074227372 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089328305 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106260462 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.126174945 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088901062 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08325184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091387442 seconds)
  done (took 1.806858646 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091735627 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114104546 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07972098 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088627899 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090835691 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089447321 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105772295 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098579751 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106287497 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08371838 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091131467 seconds)
  done (took 1.795559035 seconds)
done (took 7.140335651 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.132373413 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.90198506 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.12200011 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.175395373 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.332858112 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.219280464 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.650072198 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114259446 seconds)
  done (took 16.585284655 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.125516808 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099056447 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07825057 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095667116 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.077720315 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094901179 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080180562 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092927131 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080572508 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096746053 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080509241 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093484079 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.079892426 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096264937 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.078612252 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094301502 seconds)
  done (took 2.268975743 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114024359 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113188364 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101067836 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086889232 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099720626 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098823325 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085582619 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099038835 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081652274 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097479549 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087793738 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102383739 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085290551 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096197056 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099893342 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.088877772 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097258037 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.085097799 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100656446 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08472282 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103134504 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097976056 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086059256 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102313464 seconds)
  done (took 3.156988974 seconds)
done (took 22.767583401 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166895521 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084691611 seconds)
  done (took 1.014040608 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10140306 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116176093 seconds)
  done (took 0.985865074 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106961753 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094770411 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132965464 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111826209 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080722563 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079157746 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127609566 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096608628 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079596535 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096049128 seconds)
  done (took 1.774224613 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085172131 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098800011 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088839598 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116851701 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107392506 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081316537 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099469038 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083628474 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100207689 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078672144 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102957623 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099358041 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.223223186 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115912451 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084034776 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100993167 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104756087 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083227694 seconds)
  done (took 2.621787387 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081129685 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082845798 seconds)
  done (took 0.935395182 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085267814 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09423203 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081828174 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096716163 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077393133 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093374817 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07769851 seconds)
  done (took 1.375843562 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.471898186 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.244870101 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30244164 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.112071497 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.130952972 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.346767178 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.132077819 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.09247009 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109350924 seconds)
  done (took 2.768036761 seconds)
done (took 12.240081325 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091956069 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.131578088 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.475934201 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114398675 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.07673085 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157405795 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.264226194 seconds)
done (took 2.082996382 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341108151 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120544953 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.0856036 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077641134 seconds)
  done (took 1.394759407 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079399679 seconds)
    (2/2) benchmarking "read"...
    done (took 0.083345751 seconds)
  done (took 0.937701645 seconds)
done (took 3.108747878 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07934967 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076818047 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.109911265 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092417292 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.075053293 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075911957 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.091453309 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074853084 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093756222 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.076660634 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089973631 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.07730039 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075450975 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091641167 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074308861 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08986033 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076954748 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089882253 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074790804 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074001373 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092790834 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.074716973 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090133491 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076109392 seconds)
  done (took 2.818961588 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105135297 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096567969 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085086862 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101248008 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082895511 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099914552 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099806382 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.077942357 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.099125117 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.079915042 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096958783 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081345463 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096339173 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.080803538 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095449111 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081067806 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09871016 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077055753 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096032636 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081224894 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099670168 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077185414 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098006445 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099775794 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081359436 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097421018 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.079476683 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095069636 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082948168 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098125822 seconds)
  done (took 3.499282991 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08719598 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073749175 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092882921 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.085360485 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091238666 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078322801 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090959113 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078738054 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095512478 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.074800482 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07957715 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090773693 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077294694 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095987877 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079824256 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09976631 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.091478414 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093602344 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077500465 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095473715 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080074877 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093814661 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078245144 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074909239 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091702613 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074369232 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091935354 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075058371 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091686003 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075772839 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080342517 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097174143 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074423029 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104092339 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08074499 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090997979 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082799848 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092113435 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079626948 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090875751 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075032239 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090649639 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077958659 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085251358 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094924102 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075829192 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0945867 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080040381 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095408974 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081962263 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.090656329 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078358789 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080693324 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097297003 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079892814 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091123299 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.075719656 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.091712889 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079310724 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091116691 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.074907618 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.073914797 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09797495 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.075596018 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114461591 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101308156 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078115856 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07972477 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095467437 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083378888 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096568493 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093193195 seconds)
  done (took 6.983095884 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082532848 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105531186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07738418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093079079 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074687082 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075006606 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099172126 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075724878 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093886852 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093626458 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093030806 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076981576 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093936428 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078945863 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092443082 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.076551899 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102723335 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073504784 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093108604 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078680378 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092945934 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082146117 seconds)
  done (took 2.690746191 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.224112186 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104589041 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14295814 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114039832 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095130869 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112955232 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099135709 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084431136 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099359325 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085599846 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102836871 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083371632 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112874984 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103363836 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085557141 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103477985 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082344071 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103949059 seconds)
  done (took 2.725516965 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092713398 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096795282 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102454106 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096077454 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078225957 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098898096 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084369531 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111601474 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080584012 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096155846 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.105263936 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084420452 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097887972 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078275902 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097218352 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079310941 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096905595 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078845518 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105671017 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085143206 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10257514 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08812596 seconds)
  done (took 2.825217103 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098272337 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098695588 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098772793 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100094421 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076528946 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097085035 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086666919 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096224752 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087832324 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097806136 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078583541 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096367879 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085227777 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096649973 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103647822 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07919198 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097697348 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079124223 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080590597 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094623706 seconds)
  done (took 2.61792348 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121160825 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1107028 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09334008 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121974594 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111240489 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093506174 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12168626 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093068717 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109662163 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123405226 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092475313 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110696929 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122019686 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.101031747 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110369257 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10445933 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121567103 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122047118 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094018259 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110265619 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12285333 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092946723 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121691299 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092663713 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110397292 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110091929 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094074046 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11750485 seconds)
  done (took 3.842080994 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079902519 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077398204 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093814811 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076032269 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093334694 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075654723 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075669819 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093994873 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077753868 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09386178 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077921685 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094304925 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078101993 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077049857 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095361589 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.077692723 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095927384 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.075665846 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092536552 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075691958 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078100101 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095144001 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.077514107 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093454428 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075653807 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095185204 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076118778 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075145902 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09546965 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076226101 seconds)
  done (took 3.30682232 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089287679 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107919206 seconds)
  done (took 0.991391866 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078801085 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114295523 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07697132 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099916078 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084777559 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096991651 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088623373 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101687818 seconds)
  done (took 1.537699413 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105543871 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116760019 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085028744 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108642656 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096884414 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.115147567 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161539938 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084085106 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104870869 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079576119 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115878321 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.078923344 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106987594 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084085683 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10503436 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111370506 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080159522 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089308256 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104806931 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081245562 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104085474 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112794882 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089760276 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104596499 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081695185 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108186918 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091869983 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10776936 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084009341 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109537222 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086082335 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091410208 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08429188 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102416055 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080396424 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.115398322 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114268651 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084282918 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106118614 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085340756 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10637298 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078035485 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108111593 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086854097 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109626148 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0844256 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104178011 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078243963 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097625602 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083207753 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095615015 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083502797 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091155912 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08974466 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105734402 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09844978 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10014464 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.083885674 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102459183 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.082596433 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104591823 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083473898 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107162005 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083457662 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107625497 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08825527 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105467234 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077335361 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091486085 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080120077 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106692248 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103370302 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.10887733 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103320771 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085592174 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098257878 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085047231 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10471998 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087061826 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108552761 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083739404 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105097154 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089815562 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10151498 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08288069 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104333573 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081800065 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100896068 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079747904 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117795578 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081633818 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098513191 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079937782 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108368963 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084297958 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101759547 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080706255 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106891008 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073766775 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10287548 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085928938 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104988506 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091585518 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103558656 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086306652 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10689617 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09081359 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103395572 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082852152 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095884654 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085683999 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100997169 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090841353 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094927058 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087766391 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106213513 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088954104 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113864457 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08472983 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105048988 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094328504 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109058213 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082631058 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094875997 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083389145 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103271143 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089460146 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11004899 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100518159 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079406679 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077926658 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107035649 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084515052 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105120961 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085892794 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103182516 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074700277 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100081688 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087041303 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110735576 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084618301 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106083785 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110207903 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090675345 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.105327875 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094465053 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105228223 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083348819 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112148655 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087213489 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.101294908 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09447846 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107302913 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0857707 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104876952 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090511403 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104297963 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085682442 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101197136 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085589601 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104775976 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080938965 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104286209 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083757992 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112185503 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084380203 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097327202 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076876163 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105231475 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081583631 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102150331 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080237692 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103530578 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086763178 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081833602 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10204033 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083474572 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115412522 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111608495 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09631939 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105945316 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092078315 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103548474 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086718851 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103074169 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086319452 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105063899 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089894939 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105878804 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085456217 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102740299 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0761452 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105510134 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089123031 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098465432 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081578584 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098460701 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084399269 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109916868 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08526435 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10395954 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08269121 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104458181 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090426272 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103171068 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084110593 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098778793 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084932276 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.107101485 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086803846 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104725329 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092117262 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104031141 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078830157 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108186051 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083151813 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106988006 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07926935 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099729289 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080892851 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104835218 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083164545 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083351604 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093317934 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089531855 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108738638 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103979658 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081433761 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085489563 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112909197 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102108346 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090655594 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103038567 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087918102 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116775779 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080283713 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103850825 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092780623 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104054346 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075264289 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107448763 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082120485 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098560856 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083287975 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101931415 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085844075 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106540404 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.085843598 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092826494 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084138581 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101454128 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081533343 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078882564 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109276653 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104196054 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084380361 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112062884 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086748128 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104685049 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086538383 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103766991 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086740118 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105139492 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08619109 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105469503 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082945551 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099439528 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085420091 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099168329 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081914404 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102435681 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08596299 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104630001 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086927218 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10267404 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089639886 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104512389 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086967527 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121056734 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100168284 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081352916 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104965502 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087425989 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103426099 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084996001 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098142061 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090779727 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10394247 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090823578 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103133573 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.07805348 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085715799 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10354976 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087127418 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106384127 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086873675 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102485215 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084175383 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104886998 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112772921 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082213653 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11073942 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088324424 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105966271 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085188054 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.105527002 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083963588 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099523563 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084692703 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106067065 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085890665 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10377631 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087349433 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104611342 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084496091 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102691284 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086709701 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105255796 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088249691 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093704503 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080884009 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100455136 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086735852 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108360578 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086894259 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101688831 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083275101 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105981326 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083442841 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.077432728 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108825145 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088132712 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106127202 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113064123 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081373724 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103973396 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095483089 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094028444 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082879369 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08212556 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102130092 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110095975 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087098447 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110224202 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086722098 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099740728 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078515281 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086834508 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103607845 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.075541681 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100652672 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088445205 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102757756 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084106902 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106117073 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088396055 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10661532 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090127411 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103740509 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085225491 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105065485 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078693468 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101375134 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080941332 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104962062 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086624902 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101578944 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079343979 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104880262 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086139465 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104979747 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084916887 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103445395 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091171773 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104538804 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085919359 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110512509 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07559685 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105231905 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085465411 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104668643 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082038164 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105191062 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087632278 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107032014 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091519967 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105138684 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088056734 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105729718 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083004875 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104765646 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086322875 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105308195 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082051735 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087962662 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111187175 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082843079 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10502258 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10422015 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083489217 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106364874 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087332521 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104280216 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089627168 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104973441 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085902563 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108282918 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086805596 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105094821 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087757588 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103262983 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090561726 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100697776 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092635659 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106156128 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087166345 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103653298 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08270481 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104525552 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085055879 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104125021 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091296139 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106467498 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08133877 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100046958 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083556597 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086008579 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110291437 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110700628 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085928288 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106382946 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080702235 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096847833 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087492199 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100916799 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084581298 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10686599 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0904939 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105432385 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082982011 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103457531 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091679197 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109540276 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088738459 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101817168 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089051396 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106979772 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087030922 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.1027321 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085181696 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107658405 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089029665 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10412218 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0829218 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11394488 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091069835 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107911005 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084548106 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.107136309 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085302333 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099756504 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087966471 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105618621 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088698984 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105561472 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085649363 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11533674 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081731271 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10499388 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091641605 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104601873 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091771449 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081039072 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086418318 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107444352 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088297105 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099938644 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082099569 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101644589 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086638688 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101635437 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081124005 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115849308 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091195064 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106075448 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08457908 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105018202 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080890095 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099811451 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082946448 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108021763 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085175899 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113654975 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081368086 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10126128 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08047131 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105739824 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086935523 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108186988 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.078596656 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100306803 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082256734 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106785226 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093296226 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103844908 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08660506 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107303356 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086581948 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103117421 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092583455 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09864651 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08820082 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116478014 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087791263 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108256598 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088934394 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112281555 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087765411 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100061065 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08801144 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106364953 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087302052 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107388223 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088346728 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120323122 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106657062 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082287431 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104481736 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.0862532 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102319199 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093480342 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108208385 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08822023 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107413527 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084943795 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108690555 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094671408 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108198434 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089541937 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107556854 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085110812 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105247438 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084570707 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10391462 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088601536 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108581151 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086556392 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10906727 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081799033 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116966628 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093451242 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108416362 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078765189 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101931801 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082812216 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100869869 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089579914 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100008482 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085403441 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084714164 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105576562 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089422292 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109918049 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086971046 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109091251 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086599984 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096340985 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090136684 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106687338 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089189488 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100077825 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087895975 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109556812 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091143675 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113131582 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084979433 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107725042 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085464343 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109326785 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080940866 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110401533 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085911801 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104535787 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083788795 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107192172 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089455042 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108101134 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089463344 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109579937 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087440823 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.111169968 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091130839 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099324464 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080587146 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11040284 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084332661 seconds)
  done (took 57.794830309 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150071675 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088206565 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077252279 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098629574 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124823801 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082692611 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098414216 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083595335 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102456902 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092336141 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098128002 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077929011 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119664234 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126120896 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12344776 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093214283 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0984075 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083190484 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097878511 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082977796 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119495109 seconds)
  done (took 2.963321675 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10593299 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11702251 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116109911 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100839077 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108449673 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117078033 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0950397 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116826623 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.12077514 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091641215 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120341174 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116242003 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090815871 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111617045 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110815949 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094090799 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121253384 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110048842 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098656882 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114924819 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113546013 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094960977 seconds)
  done (took 3.22655619 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093333311 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086129499 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110818641 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080959148 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106274196 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080971465 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11131066 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083691286 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111672554 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.086898142 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104128781 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087000371 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111573864 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.080548414 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105108783 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083007252 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112194797 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087050587 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108279712 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081028321 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.125706988 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.080609144 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101742191 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.084617269 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116743675 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089257248 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.107549619 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087093244 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.105101315 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087412606 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.103163618 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088968253 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109507529 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084811569 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.104279251 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087123108 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086663668 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101577581 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.083887086 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110418446 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.08193754 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108133959 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093235252 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.104368247 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.083053213 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108535971 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087714261 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101351399 seconds)
  done (took 5.471800396 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11942119 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156551235 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085278187 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14566348 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122646068 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096643769 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.108127482 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145541818 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080795673 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.106603814 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124783317 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.101078613 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109258153 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.113764929 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090974702 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107086835 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089055761 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102225497 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092302267 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105954795 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113028552 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090144994 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12170572 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118123877 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092270139 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106126181 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082977024 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11358854 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117759176 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093856777 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11291389 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094643571 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12384374 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105056233 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086449821 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109643503 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12428986 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087694873 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11050447 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.081632004 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110163822 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093035246 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110899958 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124775391 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088420121 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108730818 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086949027 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100429771 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119694797 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090298552 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118065123 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121063022 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092433965 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107422248 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093203277 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122942962 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10747139 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08606771 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111662286 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097271217 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101043541 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09184637 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122061955 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110021294 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.0967387 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121145299 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109089167 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091772766 seconds)
  done (took 8.212950506 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117114457 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113836355 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124973149 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10447738 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11309336 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.091950638 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113537543 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112633011 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09278653 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119892986 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092252803 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.161611947 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.11042678 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119318327 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.093226851 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11282814 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092467091 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113820918 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112966509 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092945243 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113327836 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.104936094 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112656303 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12433451 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125270181 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091065926 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113258014 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092820265 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125100086 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113329526 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105561871 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113190494 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112458379 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105287648 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125950369 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112847535 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087127502 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114106867 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092924635 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113182253 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089349506 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125648042 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11279788 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090575191 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112660148 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112971259 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10472574 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125726672 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119083416 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100367121 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114185015 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125011952 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092321638 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112989415 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124824625 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133832146 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104954163 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124497907 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113596845 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125230473 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104736231 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133076138 seconds)
  done (took 7.763074055 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085575606 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084722385 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102436722 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081616342 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104525919 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081728457 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083709229 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104635747 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083892531 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.103886079 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08460216 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102355859 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081889963 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083557045 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102741612 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081259907 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102585549 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081646245 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10435792 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08184996 seconds)
  done (took 2.678642721 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09457871 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125582775 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085352171 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112749794 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087290439 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112849452 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086154968 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107440887 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088335272 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108023983 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118376276 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098257004 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105543956 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092722723 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117073535 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112631041 seconds)
  done (took 2.512459129 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106807253 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125976687 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131012695 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08990922 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10299376 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092842985 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107552504 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.080283059 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100629363 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.093604296 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111455499 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090719571 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107430267 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082906519 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.0846588 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112803838 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.079694452 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.10924503 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08711702 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130912124 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109765034 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088039529 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108801133 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086252763 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109202624 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089969406 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112064869 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082462519 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.1037464 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088015928 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108892035 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092791105 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102540653 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.090461371 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104428396 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082313232 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108056035 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087781277 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111378329 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087835252 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103102995 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087767275 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.108562272 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.090693433 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101853575 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088381167 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100865731 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090832414 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107297397 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087603837 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108609164 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.093147427 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112225428 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.095818717 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116426362 seconds)
  done (took 6.336028185 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101329871 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1087779 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090588853 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103295161 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088432629 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113918014 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089165411 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107728845 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087073493 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102075658 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087869655 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109843803 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087823191 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110168374 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087276399 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110163495 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080802589 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107050677 seconds)
  done (took 2.637775937 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091802512 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084635283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.113986965 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084093321 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105616535 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086797577 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10210687 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083058841 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103666675 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084959253 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105833341 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087348773 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10321203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087916406 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105360145 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085343925 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107230578 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083123666 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084822754 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102037307 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086303809 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10387928 seconds)
  done (took 2.946790798 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104203149 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.137241932 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.098575703 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.146893446 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.110149617 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088439944 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.119570925 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.089203153 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.127762644 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.088757827 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.108782447 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.089344651 seconds)
  done (took 2.173226689 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110992743 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143252627 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085976306 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108898979 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120345968 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090549601 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110902938 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09174936 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12449663 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124597158 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090207217 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124563242 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124193889 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124005701 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09918425 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1205093 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110297811 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090619262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106518396 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133770582 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091548751 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125144911 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09048881 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111839187 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110696357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102477112 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125988394 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124941167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089678763 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124706022 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119411402 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089982706 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125610059 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123616786 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088110507 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125242609 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111233654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134145173 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10034809 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123040298 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108198989 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099697966 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124935015 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118514388 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103477852 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112124261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118993433 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090364944 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111186998 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140745489 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120838795 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1031018 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119498626 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125542492 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103767257 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139791404 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124467519 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123319632 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119886193 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125217886 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102506791 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120160048 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12310148 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124892494 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100037638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122801714 seconds)
  done (took 8.371397802 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127135167 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108834925 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090137442 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126137964 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123272233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112064808 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091353095 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.351044113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091604109 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107914125 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158031691 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090580411 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123462 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122932305 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089809464 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112008264 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11132604 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102012911 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108322644 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140663269 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090365493 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123837991 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123037804 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122517922 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123929164 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100283885 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111427695 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09189542 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112765597 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11112556 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098634556 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111228489 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122792097 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087471769 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122211771 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090400987 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111697482 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118948125 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090658677 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120361951 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122587837 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134212285 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091299643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11083236 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123866826 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090801922 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111104931 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087287269 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110901973 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087472594 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1259559 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124341725 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124603728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102662542 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111910077 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110921362 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090954073 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110814188 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091335711 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119359694 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122883727 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090245227 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14001443 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111633422 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090395456 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124309852 seconds)
  done (took 8.409202387 seconds)
done (took 156.113153083 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.105246039 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141430527 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098950231 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169421706 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084999317 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140862898 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118742367 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.121510071 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084778392 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.106087957 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086024654 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109472979 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151235672 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106529939 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086191423 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108649235 seconds)
  done (took 2.692593657 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18373142 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288624135 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106048262 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113477932 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091218992 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109984514 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089565799 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113496774 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086183788 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.119467919 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107705403 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088475699 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.11837774 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08787734 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106833112 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087829061 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118951388 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087382973 seconds)
  done (took 2.9805289 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118575455 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151339495 seconds)
  done (took 1.150876404 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12430463 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186056935 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304398875 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.159331836 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.114400029 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129499753 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161881083 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.126162871 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.203599359 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130509769 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108110585 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.114530416 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138657665 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096978901 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116139401 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091427765 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141653821 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115610204 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.0942205 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113951409 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118095884 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.116754976 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.118647972 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095726674 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187757634 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130629753 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.093500513 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115909574 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114009778 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094549763 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119188487 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127967726 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.107771562 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.192889268 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098109697 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187457808 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100252515 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113312795 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095103291 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113823936 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096818833 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120015321 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128981251 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09218049 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114221972 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100526393 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114809891 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.092603857 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.122723813 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122237531 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100997527 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120769923 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164638567 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123554744 seconds)
  done (took 7.70465309 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.806718092 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15451043 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092394505 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.90904431 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146397468 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106612033 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.813441257 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138601919 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24522338 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.820706415 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107179949 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128829628 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236133847 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255802466 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.153035446 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.34115147 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.684628502 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105051247 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144961847 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154313647 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120120017 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120854886 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132589656 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431602239 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.114125933 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091439834 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119350419 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104630484 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185371224 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092760805 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116804991 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18471557 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267736156 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206199245 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092458027 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112061632 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091409432 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170639536 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274397628 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223108391 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180426067 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087675696 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11182785 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105270131 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134208728 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108874917 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167577145 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177235578 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.176953749 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117823146 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126182826 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100969253 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125359983 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165460713 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110671185 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318382724 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346949446 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113095383 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100543205 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133930954 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275652725 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091507511 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230273105 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14187178 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195057416 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113587224 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83153522 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170698927 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091013814 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123706813 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120957549 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097194414 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125494883 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169487916 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.411177123 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107064515 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118246196 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089929717 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234742212 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091089547 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112191551 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167276713 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114498839 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100773844 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130284986 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127633693 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175084662 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.255523103 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129039341 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100088014 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119568758 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126164714 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092940256 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.221831731 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223304291 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162746418 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.240374024 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104637996 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.189187791 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170581883 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102761116 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196942218 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099138817 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132622696 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126712073 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196612643 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145856889 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.113857675 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096747493 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121408623 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148365701 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095124549 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121249849 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.172933192 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484486441 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16942524 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088677603 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117394878 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100956348 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165881225 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099948243 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270854196 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100588515 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193985692 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099523344 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111007478 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100858972 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.189970869 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107690309 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123309029 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126774944 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100910571 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.253195182 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226757259 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129713232 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225687013 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186393956 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124533092 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17853128 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123817626 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173389971 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123769032 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103874542 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116168701 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826109384 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104780522 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121902507 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097372309 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190754564 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113350423 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09268658 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113235176 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08853225 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827354147 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094735222 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111065601 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092717758 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124273386 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099477538 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120542992 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118781187 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165702914 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240374868 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105171791 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121596673 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090823156 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.187356871 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093402231 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114430161 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092062931 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113214315 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102138924 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118865245 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093639409 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176433038 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.184644949 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.203389771 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.611573365 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092228018 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114404279 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237412752 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091704376 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310794828 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121776017 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.208286435 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192482956 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08903875 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343466257 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.173917632 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190577966 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.116461413 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.176126335 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088900055 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12033856 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167442769 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113785646 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099019137 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162578285 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132062027 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129338431 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.130805144 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11411796 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236918523 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110730868 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174024494 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092897958 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126941902 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312511634 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091180112 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134563921 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16608742 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118918077 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091931581 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.875958287 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092884443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124845486 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102257604 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230154424 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.19167996 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099771473 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12266905 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106452456 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.190633463 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.219366615 seconds)
  done (took 45.087273453 seconds)
done (took 60.494125629 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318378958 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266314378 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.2987871 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.199389233 seconds)
  done (took 2.064296708 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.18497982 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155562507 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126942515 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112261361 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157769062 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088963423 seconds)
  done (took 1.733375135 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.481948613 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.379073896 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.352414736 seconds)
  done (took 2.124372202 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.258211596 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2848432 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.3253803 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.430778527 seconds)
  done (took 2.31610893 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210667849 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129595724 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101574122 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.142410388 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.176565221 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.181064213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14698383 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157131434 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131955761 seconds)
  done (took 2.332251599 seconds)
done (took 11.48062727 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.220997315 seconds)
    (2/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.321535218 seconds)
    (3/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.217630313 seconds)
    (4/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.245096314 seconds)
    (5/286) benchmarking ("sort", Float64, true)...
    done (took 0.23142597 seconds)
    (6/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.240716602 seconds)
    (7/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.216992898 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.133518943 seconds)
    (9/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.274567898 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.1036537 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120353549 seconds)
    (12/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.236493026 seconds)
    (13/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.127156632 seconds)
    (14/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.211752178 seconds)
    (15/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.13173736 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.136791432 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119528085 seconds)
    (18/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.101129874 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.146658243 seconds)
    (20/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.149117668 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.145759517 seconds)
    (22/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.21431825 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.159319063 seconds)
    (24/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.255312354 seconds)
    (25/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.221600002 seconds)
    (26/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127598241 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.16147125 seconds)
    (28/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.228763954 seconds)
    (29/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.193934554 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095660939 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.247366996 seconds)
    (32/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.117257313 seconds)
    (33/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.22454249 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125666307 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.16052191 seconds)
    (36/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.095234829 seconds)
    (37/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.127025482 seconds)
    (38/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.245515314 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.095459114 seconds)
    (40/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.103502469 seconds)
    (41/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.130366018 seconds)
    (42/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187265214 seconds)
    (43/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215597377 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120257953 seconds)
    (45/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.186407262 seconds)
    (46/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.163729249 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120780012 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.096936418 seconds)
    (49/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.165444418 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11954103 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12601955 seconds)
    (52/286) benchmarking ("sort", Int8, false)...
    done (took 0.209294128 seconds)
    (53/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.121110485 seconds)
    (54/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093655587 seconds)
    (55/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.241690844 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.135018843 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.14548587 seconds)
    (58/286) benchmarking ("sort", Float32, true)...
    done (took 0.231907023 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093158579 seconds)
    (60/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.118249897 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120245693 seconds)
    (62/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.103024053 seconds)
    (63/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.095807013 seconds)
    (64/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.101756334 seconds)
    (65/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.186185084 seconds)
    (66/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.18874336 seconds)
    (67/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.128359641 seconds)
    (68/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107256105 seconds)
    (69/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.131611783 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.119850466 seconds)
    (71/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.115225414 seconds)
    (72/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.180959665 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128533692 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119032045 seconds)
    (75/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.173093758 seconds)
    (76/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.198906311 seconds)
    (77/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.2015367 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120079892 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.089987259 seconds)
    (80/286) benchmarking ("sort", BigInt, true)...
    done (took 0.249264267 seconds)
    (81/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.102957236 seconds)
    (82/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.078505698 seconds)
    (83/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121299089 seconds)
    (84/286) benchmarking ("sort", Float32, false)...
    done (took 0.153402519 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.101862772 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095910205 seconds)
    (87/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.195705644 seconds)
    (88/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.12880789 seconds)
    (89/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.189424247 seconds)
    (90/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189728859 seconds)
    (91/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.118125265 seconds)
    (92/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.165157147 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.172068378 seconds)
    (94/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100884535 seconds)
    (95/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.159795348 seconds)
    (96/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.095126271 seconds)
    (97/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.123794321 seconds)
    (98/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.138577981 seconds)
    (99/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118859722 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.148493964 seconds)
    (101/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.105374468 seconds)
    (102/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097022423 seconds)
    (103/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120742089 seconds)
    (104/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078030721 seconds)
    (105/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119170066 seconds)
    (106/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095201777 seconds)
    (107/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.200459523 seconds)
    (108/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.124247895 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.102633247 seconds)
    (110/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118365765 seconds)
    (111/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.084787127 seconds)
    (112/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.128784259 seconds)
    (113/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.087624008 seconds)
    (114/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.101642825 seconds)
    (115/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.105434388 seconds)
    (116/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127512049 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.095292342 seconds)
    (118/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.104798078 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.186217397 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.101605775 seconds)
    (121/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.186800284 seconds)
    (122/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187227349 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126226705 seconds)
    (124/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.078208385 seconds)
    (125/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.143778723 seconds)
    (126/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.098999927 seconds)
    (127/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.151804551 seconds)
    (128/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08130334 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.119398312 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102293207 seconds)
    (131/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.102252922 seconds)
    (132/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.127999186 seconds)
    (133/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136510508 seconds)
    (134/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089712174 seconds)
    (135/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.114976996 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.100800752 seconds)
    (137/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.127664191 seconds)
    (138/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.185114171 seconds)
    (139/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.15158267 seconds)
    (140/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096349317 seconds)
    (141/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.129203296 seconds)
    (142/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095048134 seconds)
    (143/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118055513 seconds)
    (144/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09812719 seconds)
    (145/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189243474 seconds)
    (146/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.15334552 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090591327 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.12173692 seconds)
    (149/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.093779468 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137186679 seconds)
    (151/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.102257344 seconds)
    (152/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.159494323 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10201541 seconds)
    (154/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.109664464 seconds)
    (155/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.078996957 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.130113018 seconds)
    (157/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117842611 seconds)
    (158/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.154912826 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113508037 seconds)
    (160/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098400498 seconds)
    (161/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077362695 seconds)
    (162/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.122134197 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119736979 seconds)
    (164/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079376021 seconds)
    (165/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.196673923 seconds)
    (166/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.114611998 seconds)
    (167/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.189133147 seconds)
    (168/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.118925348 seconds)
    (169/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092712096 seconds)
    (170/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.108855883 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096350525 seconds)
    (172/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.10538538 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097513946 seconds)
    (174/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.101778465 seconds)
    (175/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.113458539 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.126787298 seconds)
    (177/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078420749 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.121837044 seconds)
    (179/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079774335 seconds)
    (180/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.125024535 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 0.223602313 seconds)
    (182/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088927417 seconds)
    (183/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123834047 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.092979791 seconds)
    (185/286) benchmarking ("sort", BigInt, false)...
    done (took 0.258424629 seconds)
    (186/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.105607769 seconds)
    (187/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.125063434 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084101892 seconds)
    (189/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.106429011 seconds)
    (190/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.094580017 seconds)
    (191/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113447156 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090831315 seconds)
    (193/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.130932811 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.106236635 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126899608 seconds)
    (196/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097375661 seconds)
    (197/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.167735288 seconds)
    (198/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120819047 seconds)
    (199/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090438251 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120172595 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.093598721 seconds)
    (202/286) benchmarking ("sort", Int8, true)...
    done (took 0.222263745 seconds)
    (203/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.128034784 seconds)
    (204/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113091185 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117023573 seconds)
    (206/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078440277 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.117532741 seconds)
    (208/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.079483805 seconds)
    (209/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.184560215 seconds)
    (210/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116502187 seconds)
    (211/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15907956 seconds)
    (212/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.105496347 seconds)
    (213/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078840434 seconds)
    (214/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.103166156 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098136487 seconds)
    (216/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.104362083 seconds)
    (217/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104067539 seconds)
    (218/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.103004163 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096752524 seconds)
    (220/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.127610014 seconds)
    (221/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096056519 seconds)
    (222/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120649781 seconds)
    (223/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.198915261 seconds)
    (224/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079322762 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.105086058 seconds)
    (226/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077878707 seconds)
    (227/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.19571993 seconds)
    (228/286) benchmarking ("sort", Float64, false)...
    done (took 0.151648791 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115414733 seconds)
    (230/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081947437 seconds)
    (231/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119642785 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081727192 seconds)
    (233/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.248779231 seconds)
    (234/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.118751586 seconds)
    (235/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095436309 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140382837 seconds)
    (237/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117549753 seconds)
    (238/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078609072 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09773118 seconds)
    (240/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115769285 seconds)
    (241/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.105391385 seconds)
    (242/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120521596 seconds)
    (243/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084216624 seconds)
    (244/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.105815181 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.104442725 seconds)
    (246/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114823285 seconds)
    (247/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.099394228 seconds)
    (248/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.105147096 seconds)
    (249/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094994899 seconds)
    (250/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.108841375 seconds)
    (251/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098086353 seconds)
    (252/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.102519402 seconds)
    (253/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095386766 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126960687 seconds)
    (255/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077768583 seconds)
    (256/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132492055 seconds)
    (257/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.085802484 seconds)
    (258/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.179553702 seconds)
    (259/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.142827554 seconds)
    (260/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093892575 seconds)
    (261/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.085346532 seconds)
    (262/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.111030669 seconds)
    (263/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105220052 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.123645984 seconds)
    (265/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.086009529 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.11526003 seconds)
    (267/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078511539 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.115904501 seconds)
    (269/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.079131743 seconds)
    (270/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.103437714 seconds)
    (271/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.091811892 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129047219 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096962897 seconds)
    (274/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.161076496 seconds)
    (275/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.078999475 seconds)
    (276/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.103033096 seconds)
    (277/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.077860671 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123099496 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093811898 seconds)
    (280/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121141246 seconds)
    (281/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.191845666 seconds)
    (282/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096170202 seconds)
    (283/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139319882 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092416919 seconds)
    (285/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.1199051 seconds)
    (286/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.079043427 seconds)
  done (took 38.557179933 seconds)
done (took 39.470632993 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.107971384 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155373506 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101480506 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145917248 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.128269867 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106177581 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124409477 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103053323 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129895001 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.105972791 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.127091736 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.084994765 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125081593 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100806204 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.125592507 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144459625 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103906426 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121925387 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093246873 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.117790359 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.09391742 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118514491 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.095591715 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.109740028 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101927248 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124143216 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096793423 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.125665649 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094258552 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.117791319 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092708231 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.122673919 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091581972 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128599302 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095288935 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118138934 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102103023 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.125020251 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.096121864 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119462323 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.098295278 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.118147897 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097410291 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.123431255 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095122088 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.117569986 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09410504 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130561819 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145822665 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095102634 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098422204 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124588001 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101944363 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122394345 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092446931 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119054453 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118721982 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121488454 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117850772 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095121234 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.140530995 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097517265 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117351884 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093273892 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11775526 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100562176 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126660936 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.093692138 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124131935 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.096950171 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.114011968 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094370677 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.116613927 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.091447602 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.124380324 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10108687 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088727006 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119214073 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097413706 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.119788201 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.094266482 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116888235 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.095791801 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119517728 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092469391 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109733628 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092170982 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.12074917 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094065859 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117504735 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096962333 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.121180357 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096395743 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127141585 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094239352 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119394056 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.094962636 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.118603352 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.096475871 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118190189 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.089632945 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116473028 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098754637 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.11650407 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095314985 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12998274 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091607261 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120848719 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.093831602 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.118485645 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107142556 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124346498 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.095365146 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119914354 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091640039 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12214457 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.092258555 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117135275 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092037799 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.119085862 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096023509 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.118620631 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092673582 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.122415855 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104639997 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114507747 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.092945354 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117810419 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094710995 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.12134695 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094726056 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.116497773 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093614486 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.113723348 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092972834 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.116663503 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09799499 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117473275 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094110689 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119062204 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093956645 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.120357865 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095538801 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119744619 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.09196368 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.112295013 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095634275 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116803506 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.096423997 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.119050687 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095122701 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113734186 seconds)
done (took 17.587375875 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.103328732 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189543803 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152696162 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.155887347 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.151294394 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112012746 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130782235 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150972748 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.103536646 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147121642 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151384812 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.1401834 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.130909535 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127282793 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.13627606 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.101355549 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125420266 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110753656 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.159989658 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.146742251 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152105486 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.102018073 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148103542 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.146319484 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100371517 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.144877418 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128865875 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.101974511 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.12868308 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120665193 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.141647216 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128941952 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.104041412 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.138178005 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.108864025 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.126997567 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.13692208 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097488666 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126413144 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.101574766 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138997452 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.138014027 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098039626 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.133158524 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126223876 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105144033 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.125787647 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.099855212 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.126047404 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.096122868 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13095038 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147637578 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.099703256 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128678994 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.126554947 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.101750686 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.129402518 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104812688 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128062818 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.104852149 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.127003911 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12902568 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106527025 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143642495 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.125405585 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103421847 seconds)
  done (took 9.29929903 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117788255 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.153637887 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132642266 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107636479 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128989809 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090506042 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114982898 seconds)
  done (took 1.82538298 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093679186 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146676961 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124006746 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.149454328 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.142082586 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127200127 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134100157 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092572342 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.141307129 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126450141 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120639238 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.172158052 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118289111 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.103784567 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.151662542 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091630469 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.152528463 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091993393 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124688836 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149761321 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097215267 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.139520947 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.105034682 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.119748652 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.13899924 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094132231 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186357586 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131111894 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091679388 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125193582 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097711678 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.187633446 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13980903 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.101947958 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115948823 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120477513 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.138436979 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121956492 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.1174101 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122608354 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.113910999 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.124836033 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099980294 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123374217 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099990312 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.13244196 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128865697 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.100420971 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.123629695 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.120880779 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.129177522 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114791243 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119212026 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097243392 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127511185 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124961288 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107326774 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.122906987 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.120509506 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125715674 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117614008 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143707214 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138993731 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.119505 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135100187 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139523733 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.113371925 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.123190151 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099883633 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.12464883 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.119140559 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.122171161 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.102816526 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.13378556 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126860071 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120287658 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144842735 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096813884 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.130955942 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096318129 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120666746 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093090156 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13380159 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096814794 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120205856 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11020141 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129736544 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122857679 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096573345 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.139925941 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.097668463 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.130052683 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.104243373 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.1226403 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133656551 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.120640326 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129576442 seconds)
  done (took 12.834135188 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096570236 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094459552 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12485639 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.094578713 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.121280738 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09549666 seconds)
  done (took 1.61278784 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.126477914 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122214198 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.110156927 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124948644 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16196872 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.119175546 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.147008681 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102966051 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138618729 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134089037 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.118312478 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.145311968 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.150371751 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101097526 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.144980006 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101010984 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143550473 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123593157 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.10899165 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123436014 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111400351 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.127327845 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097427592 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141220488 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.102220126 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.127580716 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126510068 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.108930071 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133478085 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103571091 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126786413 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103072433 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.127320817 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.128338133 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.11865411 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.127294652 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096751885 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129530975 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102127302 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.127537235 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.120068757 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122939988 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131877176 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.104391873 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129359269 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.100771262 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.130083423 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100403363 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143898868 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.104140588 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12954673 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.126927028 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.10296497 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.129357828 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.102323733 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129831843 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.103487225 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.144128181 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.101117042 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.127142492 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.122968696 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.102719581 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130035784 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.102255679 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.128832471 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.103362482 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12660235 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097752964 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124137062 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.101053633 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.129950123 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097636339 seconds)
  done (took 9.660291296 seconds)
done (took 36.198311197 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.682352705 seconds)
  done (took 1.6657166 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.83978307 seconds)
  done (took 1.825499147 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.923652903 seconds)
  done (took 18.938755414 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.505600245 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.597575942 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.997872406 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168671249 seconds)
  done (took 3.255765414 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.970954431 seconds)
  done (took 1.977543673 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.310724693 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.273258077 seconds)
  done (took 1.576800405 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.823990066 seconds)
  done (took 1.821168478 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.545419119 seconds)
  done (took 2.544587135 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362631629 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204307471 seconds)
  done (took 1.574398246 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.577546971 seconds)
  done (took 1.580108542 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.19977729 seconds)
  done (took 16.20655411 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249503431 seconds)
  done (took 1.264678881 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305081274 seconds)
  done (took 1.310384661 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.700488712 seconds)
  done (took 4.705446087 seconds)
done (took 61.243729145 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105279153 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132272187 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107062247 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129591343 seconds)
  done (took 1.474109386 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110163555 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128079053 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105153676 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127622799 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108747483 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127572964 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100955181 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.183958308 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126522711 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.103276216 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128552449 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100776349 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.12976722 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099963595 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125487479 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104281709 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130707096 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101341055 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129668988 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.127807892 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.09887328 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128790776 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103901211 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.125944856 seconds)
  done (took 3.864609061 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105980669 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097696992 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.126735692 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.097545807 seconds)
  done (took 1.437247264 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.110197305 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140471854 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11330996 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134116648 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114083557 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.140028823 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12379258 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097448209 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.125295091 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.10733814 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.124437848 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.117925865 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139405052 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.093306735 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.134888445 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.09503024 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11930088 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114371253 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.132903615 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.134891588 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097371136 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.132424552 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.104696412 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138128716 seconds)
  done (took 3.900032131 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.181474125 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.136885964 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147965866 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.104321474 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172994998 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149359147 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.095838153 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.150290106 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.097055819 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145159118 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.127790538 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.147603098 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.140548468 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.125311113 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.09739815 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.129606906 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.113624999 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.144509545 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.126472934 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.109655479 seconds)
  done (took 3.656022266 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106075168 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122770048 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09334119 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.095154209 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.128948465 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099668235 seconds)
  done (took 1.667457704 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095970359 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09189386 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118638246 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091027798 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.123580753 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091838214 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117101319 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.092965025 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092388225 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118642044 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090987989 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117024435 seconds)
  done (took 2.26443044 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.386526828 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122244738 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121243425 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097032391 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129298951 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09522293 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134757957 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095027094 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.151835124 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09684005 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.122208823 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.098744113 seconds)
  done (took 2.668876952 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218182294 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101742083 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270919415 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.431443375 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162660168 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172084914 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.338254102 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169844395 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.189745904 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144500208 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202278647 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163944818 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160964497 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186391031 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145123589 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.182220367 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182755107 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20856965 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155536459 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212418018 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170013767 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174605299 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187062001 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158796682 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115404915 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165150454 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125220667 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107408941 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205843058 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176951579 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181637274 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154613049 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117661983 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236377792 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219960684 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185537839 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.393178551 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138933426 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196990735 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188774917 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259968124 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119277254 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227458669 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134403311 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134446437 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187174369 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163533638 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187471317 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13777378 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118450923 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217021682 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183844293 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.186959035 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142458362 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.352143302 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152584793 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.153955761 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194379101 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191604808 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196019535 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173346937 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12522854 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228802956 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212424414 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185685553 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.12406829 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.172562215 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130002287 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181401832 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200233729 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183056531 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169963942 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.220124763 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140098021 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171044279 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174171264 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13375868 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184408026 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167267056 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.126755218 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156426875 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116554889 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134449601 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191956636 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101107858 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210150081 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140369354 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.196652347 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220230867 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163426811 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168012399 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171846553 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172638156 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153374928 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.123562634 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125708007 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.167782234 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166493536 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138435129 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163604654 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121362559 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133554505 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160051074 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101784013 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167653819 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.140247021 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175352537 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172993187 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.106675724 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170630624 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156001785 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164796165 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179503918 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192748553 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138749527 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110130555 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200501496 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163720843 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142114317 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181811194 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192528993 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.17166343 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145361196 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177791295 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199723121 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148733977 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195295084 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147952402 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111846563 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.156721641 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166246605 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163177149 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163464503 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107945644 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162055851 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199516132 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133317972 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142702609 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182805161 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1055954 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134667151 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149094686 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115321389 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149512929 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155759566 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.117923906 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164642562 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167538212 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161110424 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167118448 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147889589 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200416737 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139447074 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167814393 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127587205 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125779457 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187008406 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191970603 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134751122 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206438028 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.176136588 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267702352 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171184983 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109775459 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184897554 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135411856 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.097928876 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173123049 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167259112 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171077712 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189387382 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270078973 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.171621874 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159774497 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157969217 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175212553 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181546113 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162461584 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.151214912 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141204899 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204925849 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100735987 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.130642137 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.1050708 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149765365 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136601201 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111477944 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190182358 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172261493 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.261636277 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167610355 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149201262 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18965715 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104675811 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173489136 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178270186 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146574489 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.190523493 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189617624 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174849341 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150044676 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1823531 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125827642 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101870471 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140421482 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173743806 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111046139 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14135121 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150301293 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189284792 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184269283 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158488717 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271421369 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178681405 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199618117 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100851544 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171113235 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178001441 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166632391 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.166913565 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136953088 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168617516 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184059055 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15086424 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19731894 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170760218 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175751728 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206549294 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164833633 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137383627 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127824985 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173602528 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148963197 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173334868 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154208767 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113648892 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162594056 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.141177347 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132685423 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190531955 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150609283 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188437658 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.163813955 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181386122 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10487722 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150158586 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168296759 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153928181 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093974167 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179103473 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223838027 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121882166 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167791862 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182166926 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136890627 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.359677123 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224380231 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194462019 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144034326 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121257144 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168699413 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167133291 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173114411 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187903375 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151672766 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187590955 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166803166 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.121330922 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142414978 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154329417 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156803577 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129569591 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139381309 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.16067766 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.153260856 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193939639 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150704549 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165833998 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171789242 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126933252 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.160920578 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149844609 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209203882 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166663676 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18676421 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163140336 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.173916363 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208544563 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102471015 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137200824 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104449016 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187599159 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140191063 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167092651 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.22868512 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276263532 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165944471 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175478617 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146655507 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098018506 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167564218 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157561166 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271547115 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14766777 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.114465066 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198931921 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159023952 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137780237 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171773108 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.342923432 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150972824 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182881452 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.09373009 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.354466003 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104125351 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137036888 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166857706 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178275558 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.144881683 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.162017514 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171370774 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151857758 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167962042 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116563205 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.261031471 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250210529 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180052623 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185338007 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.120700309 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164520509 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172102522 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183856179 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151832714 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.153220186 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169602976 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190440145 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19560529 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140402378 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142526866 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171087875 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166971859 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180434237 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140800357 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207269874 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139818416 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175423699 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148718985 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101460217 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16828166 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.2561313 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111434628 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210561154 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136780599 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139882531 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132298529 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129509949 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166071509 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149849063 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136390854 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189313831 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.10316558 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171642046 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187969788 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137575012 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16047785 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123940172 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146373123 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150468736 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124224746 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143887152 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176373177 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189837871 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.108440314 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212842358 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185082519 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174660275 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168833539 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12190527 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669888287 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134172212 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189210184 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125780364 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191416476 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154957995 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175453867 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169021859 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158720625 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176516541 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158242487 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226490999 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173746987 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164742989 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109564218 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152897802 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150784461 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.109482738 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159342349 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170939535 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148213967 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.115480684 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165982456 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153347878 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.151234516 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116576323 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192395541 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155797656 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191595688 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188059911 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146208778 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175434933 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182713083 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138099784 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167960486 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179998836 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117784543 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158656215 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138035759 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.112897247 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187511632 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.131460815 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170269888 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169254777 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171418403 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141895478 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141964238 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168467253 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150538252 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170102821 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108820817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161878402 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165982353 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137331242 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106275547 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164191081 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168360682 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166247197 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10446443 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.17925452 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191039218 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102667296 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141422632 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366159761 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139698767 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228902451 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.129131553 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142555515 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152722551 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163239963 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.131513477 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167924976 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136216078 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139164426 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108464334 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.189587983 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.16168011 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163973597 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202064221 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169561896 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208858112 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.142836576 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.240610304 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146605029 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162675748 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.106553484 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137751149 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150903603 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11302 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151722883 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.258752107 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187815863 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.15855641 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123297254 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1340524 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104808896 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14088096 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168334964 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163707979 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166911865 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121570963 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.124116115 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151047747 seconds)
  done (took 81.00218383 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.155798324 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.139216274 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154842027 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202466075 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174291656 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250761504 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212943983 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233870346 seconds)
  done (took 2.627939085 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.108867759 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164568965 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144894105 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131018111 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.096850622 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.340643582 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144936666 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129839901 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.154609329 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141415528 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.098954085 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.572271499 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.100408192 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130810272 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120943433 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.096332561 seconds)
  done (took 3.774975217 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.359806549 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545915116 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.184873469 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.25424167 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233563001 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.160197995 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.764046625 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.18974417 seconds)
  done (took 12.802096217 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.129991275 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146558644 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.14055114 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.169980263 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.125638581 seconds)
  done (took 1.826038618 seconds)
done (took 123.966431637 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104622824 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132252292 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102256955 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133510498 seconds)
  done (took 1.568659779 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.116386274 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086675212 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.11926406 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085810872 seconds)
  done (took 1.51285992 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.433209758 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.116032706 seconds)
  done (took 1.695094306 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.124772691 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140990598 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.112014558 seconds)
  done (took 1.487381723 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111373594 seconds)
  done (took 1.225806376 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.106318861 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.104812118 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.148984971 seconds)
  done (took 1.472916292 seconds)
done (took 10.076625129 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120819785 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.533697559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.390121177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143668887 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727349008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384592579 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.048910027 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162563869 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142971889 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12600355 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112698641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.704967047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.071725688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.443787478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.056100922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.441181179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681511051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128616489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131140171 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098726338 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.026644551 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096267075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097351873 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128421209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677231758 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42972019 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096580895 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.482390758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123724136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101752011 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.41328525 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096766295 seconds)
  done (took 17.520460637 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104423672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184943745 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104304838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128341567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100043997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128327518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106995117 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13874238 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188742487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096030805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144259676 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096271238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131761034 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097014666 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146476759 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096191141 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128359915 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09926014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133502245 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09837488 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146636313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09567139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128139518 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098477249 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126336235 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108880187 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126701155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109074385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12724058 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1010392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132327848 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097075976 seconds)
  done (took 4.965674967 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150224756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195451998 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134983027 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132085357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176026032 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126924725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.18163145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16516412 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190046264 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125733105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114762631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125714841 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132139984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127938819 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116957091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12641227 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099314068 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128862517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103687187 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128164815 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116847463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124810453 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098509941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127728034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097154371 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139802745 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097532602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139837947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125775267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102143634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.13206436 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097942298 seconds)
  done (took 5.302669988 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10769605 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135050252 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114024796 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143307491 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100170748 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134408685 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.107023609 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128294456 seconds)
  done (took 2.093393862 seconds)
done (took 30.995355721 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117543497 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.102366022 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140767637 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.109545803 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.138023072 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.121110737 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125849423 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108325182 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.139620559 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.106345876 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.142862672 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096246066 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.128155327 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096163991 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.140142221 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103035703 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.141121859 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.106577954 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.147682188 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.112877873 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.127095637 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.109247845 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106828286 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.148346376 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.146509911 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.116739356 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.143073501 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102859811 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127916358 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098880696 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.140515107 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.119538459 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129859753 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.113858147 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.132790822 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102315971 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.128244595 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099975355 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.142298676 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10816075 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133051063 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108887498 seconds)
  done (took 6.220688619 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.127698252 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.170394659 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.097935804 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.129882371 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.098712542 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.165788474 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.161318705 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.098812755 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.128301933 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.123139769 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.153257302 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.098224254 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.128187693 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.098374752 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.127749996 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.099094261 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.151036724 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.122568483 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.157405456 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.127465026 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.172051244 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.158754997 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.131503148 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.152822819 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.168796437 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.163061046 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.119427791 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.163627863 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.124615987 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.128034365 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.157893543 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.129773345 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.126861219 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.098775767 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.167082048 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.132786342 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.158041553 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.168298188 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.157402204 seconds)
  done (took 6.476267867 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110041823 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141392881 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119710731 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.195161417 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136517916 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.143155171 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107980176 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.146601782 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114794958 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.128033832 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.10775987 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159527027 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146630066 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106036645 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103713101 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142789246 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.148121066 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.10056012 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.13220992 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11739697 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.145945425 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.110509349 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140337044 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108078029 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.127005796 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106545295 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.130734583 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112827562 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.132749556 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.105546712 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131515028 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102359133 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.13506612 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109458839 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131542828 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.105305729 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.149583817 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107348568 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.138877167 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.131488627 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.139725506 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102738254 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.149383411 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16710689 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097745498 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135347412 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105111636 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137029337 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097639739 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115881423 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139529379 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098493879 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143289851 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.128136407 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097546441 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142777833 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100521321 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101529961 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.136582768 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105659663 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.14849124 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.10224289 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144383775 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.099065504 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.13486564 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098344446 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127868332 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103562345 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.151116474 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101324712 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.168399241 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127898123 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.10460814 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135751885 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105027653 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106382414 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.129377779 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112770614 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137960577 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.1029365 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.139086269 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101201866 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132732381 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116712303 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143331494 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.135743252 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.105152826 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.134728253 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103176813 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0991503 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144392641 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.10084393 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.132260002 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116474406 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128676613 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101375515 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.136129052 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103366962 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127484156 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111215339 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134402398 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098021106 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13828359 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098362243 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.133235178 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107126664 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.132743526 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09823832 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.133706562 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.105888262 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.127856146 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101361171 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.132055797 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100643315 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.14129019 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.106220229 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131028502 seconds)
  done (took 15.520790429 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.256787065 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227148825 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.201037046 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.31133646 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.151572726 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.124543507 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.223495092 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.180432011 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130053895 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.137193683 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.21648028 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.19607711 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.153158757 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.195637641 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.187090114 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.130559127 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118226528 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.182508384 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.22836411 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.30763787 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.149173604 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.112383749 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171045373 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.170227274 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.148646685 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.115205974 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.153649197 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.15017386 seconds)
  done (took 6.16519541 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.118284724 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165662134 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.10669271 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.155100476 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156867488 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.099955551 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.13544749 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100331844 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.143394855 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113846984 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.132074019 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106129966 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.135954914 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.109124953 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.130113817 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107923008 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.14031407 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.108525304 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.13320824 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.10282033 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.143985819 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.116556011 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136232841 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101504125 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147066437 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.132069297 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100688761 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151435343 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.136346271 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.125051591 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.127435764 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.108318588 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.143684471 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099127553 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101653206 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.134432568 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101991687 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.133240888 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.100985911 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12754142 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.098562149 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.120367563 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102700939 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.146287288 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106116115 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.127779486 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105162072 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134334497 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.106666253 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12712749 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101160976 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101875122 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134858051 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110789544 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.133613624 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.106242051 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.134705267 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100389056 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.138954074 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.102337043 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.127597673 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100537314 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.136529264 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103738166 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138716189 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105331356 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.132204171 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.102352243 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.135468874 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106510741 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.133079875 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.605515185 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.127668825 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100680012 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.140340253 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108089526 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.134303958 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101173113 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.102135075 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129668552 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.088009786 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.129312631 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086185681 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134708634 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098564669 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130974216 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102596755 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.105221352 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.145798317 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.139679177 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.106850437 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.130496338 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.101525442 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.135521039 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097045743 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.135096149 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.117016497 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149987878 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098014716 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.128475492 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115177466 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.132889676 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09783551 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122159073 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109527332 seconds)
  done (took 14.267080732 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143090328 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.180571536 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132227731 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11868915 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.165872127 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.172203191 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108520275 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.138879397 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.100111445 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119606285 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.135554393 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108181225 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134648911 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.114353934 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.173350247 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.141074105 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100050149 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.145916691 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104696972 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.184535903 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150680287 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.138626597 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.170060718 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.133998216 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.104647698 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.168174099 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.174923187 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113124712 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.142451524 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14112791 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.143717832 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.174997879 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.171932006 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.1047917 seconds)
  done (took 5.917223463 seconds)
done (took 55.680640092 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.222623905 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.464037152 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.219923846 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.219185874 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.225457081 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.242539562 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.217580715 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.414044034 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.980626557 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.209687151 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.218306503 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.220211296 seconds)
done (took 27.99970409 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.298630578 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.377666851 seconds)
    (2/2) benchmarking "String"...
    done (took 1.515284294 seconds)
  done (took 4.034208324 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.219363896 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.220445061 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.466836406 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.222439458 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.242671517 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.240190287 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.238165049 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.223841627 seconds)
  done (took 15.995152512 seconds)
done (took 25.690958174 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.279330888 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.392103879 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.475319524 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.240943123 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.220227927 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.22354867 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.238155286 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.2599679 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.222805885 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.227136191 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.220540087 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.481037716 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.254692726 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.597122906 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.235379497 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.222705531 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.243047436 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.443568244 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.222019482 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.233126268 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.225099232 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.212409693 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.236213474 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.261218262 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.232161074 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.224899709 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.261385264 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.231938709 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.432218864 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.239184234 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.222399655 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.239358493 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.262598732 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.22509553 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.348871762 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.259510912 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.408208683 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.233861194 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.213297546 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.223992556 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.413178148 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.652429103 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.235767998 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.224590363 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.233256009 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.280848975 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.208437121 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.966775811 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.229970416 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.225326613 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.23852717 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.621566637 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.230822244 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.239322059 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.240075096 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.460402814 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.226886922 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.268643064 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.275842634 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.231900545 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.224173465 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.224740008 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.242936977 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.239129691 seconds)
  done (took 144.905466424 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.225939959 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.227529362 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.230182243 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.244400116 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.228813893 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.227596399 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.227170762 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.226379674 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.223332006 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.230095756 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.230684875 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.230557678 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.22823507 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.226577649 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.229229524 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.248807614 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.22974606 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.225502964 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230227481 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.228029604 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.230465373 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.228710086 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.243925883 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.224459055 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.231112688 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.311488956 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.282112163 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.236809078 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.226242173 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.228631023 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.271540868 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.247868073 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.869565242 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.08532826 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.240787513 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.257453742 seconds)
  done (took 81.161911294 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.228931401 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.228974559 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.228756892 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.263823846 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.23123565 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.832044279 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813351253 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.965546724 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.648379801 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.231668963 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.666247083 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.230601474 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.227332765 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.565818121 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.231669101 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325118827 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.240628802 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.228503111 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.243896242 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255142195 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.228040393 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.228905604 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.834346162 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.242937592 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.455699558 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.42451641 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.242745749 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265261695 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.631954018 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.227640476 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263190637 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.570309176 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.276926502 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22814812 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.651346505 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.238413916 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350158109 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.231236238 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266041919 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.237354477 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.516964431 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.231126138 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.232608806 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.233561584 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946213047 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.23311435 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.834546052 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.234575492 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.203493222 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.228551347 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.231547028 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.436982351 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.00763652 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.249777035 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.230830805 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.233589859 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.231906779 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.231342323 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.265982372 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.234709904 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.445961267 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.346789246 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.235514509 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.23366192 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267690256 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.235144065 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.314790836 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233358053 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.571066109 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.307443399 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.337473733 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.836243602 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233370035 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331677453 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.355048633 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.233909419 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.235467915 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.234339293 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.235081709 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.347250817 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.232843575 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.671075859 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.412885328 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.250222294 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.687994593 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.335853088 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.233012546 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.664597546 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.235724652 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.235184827 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995468621 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330545362 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.232375222 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.231389294 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23334655 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.672082743 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.838754392 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.519965675 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.237151818 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.805092468 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.233899177 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.679324725 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.80780835 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.974583801 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.238132915 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34850052 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.411463877 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.247786739 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.23455837 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.68786139 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.237710087 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.295029327 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.232420537 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.635079702 seconds)
  done (took 371.276666986 seconds)
done (took 598.487322061 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.958283735 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.905759176 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.044959893 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.932417779 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.899724533 seconds)
  done (took 10.893532844 seconds)
done (took 12.047191295 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.436527874 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.437127754 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.303487816 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.44102715 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274703036 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.458832993 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418279931 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.257977125 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.346774011 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.32806804 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.345423618 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.298481512 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.277002046 seconds)
  done (took 18.777159565 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568988915 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.24577665 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300098958 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.589667743 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.277574595 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.579637449 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.45390092 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.255581259 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455428373 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253481614 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249666877 seconds)
  done (took 18.38585175 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.58628734 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.240276676 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.329907205 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.581606322 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.278848981 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.593866148 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.453000366 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.256035672 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.467868339 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252459465 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.250203324 seconds)
  done (took 18.446164965 seconds)
done (took 56.765736112 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.277503716 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.406004052 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.266616037 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.250823424 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.248915467 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.248333431 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.253895742 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.247625897 seconds)
  done (took 11.357177682 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.243922047 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.245279484 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.243683839 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.243278463 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.242289316 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.243261496 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.246216462 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.241811928 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.245043989 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.246206875 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.245791229 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.243732771 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.24441152 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.245148151 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.24459007 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.243705136 seconds)
  done (took 21.066521834 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.244185602 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.242262227 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.244372672 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.243334366 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.243969852 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.244735262 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.244465651 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.243800988 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.245766719 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.244261648 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.24714872 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.244477885 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.24512549 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.245853674 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.245585586 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.246096622 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.247040198 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.24486915 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.249415494 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.246699503 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.244448368 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.245507616 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.246336995 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.24592669 seconds)
  done (took 31.047292842 seconds)
done (took 64.626586494 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.245984035 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.239816883 seconds)
  done (took 5.644848938 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.304038112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.307534833 seconds)
  done (took 3.772990855 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.246797831 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.248487055 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.248789557 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.246888907 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.247828357 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.248878579 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.25053797 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.247697148 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.246841084 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.248254637 seconds)
  done (took 13.640327978 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.249846526 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.250548032 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.245465354 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.248522796 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.250238284 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.246033976 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.249494466 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.248720926 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.247961874 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.246690041 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.25084707 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.246369403 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.249414088 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.247406091 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.249337015 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.247109296 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.246911949 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.245895614 seconds)
  done (took 23.626455301 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.261374576 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.269315384 seconds)
  done (took 3.690957803 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.376613445 seconds)
    (2/7) benchmarking "second"...
    done (took 1.290032139 seconds)
    (3/7) benchmarking "month"...
    done (took 1.356875039 seconds)
    (4/7) benchmarking "year"...
    done (took 1.344215599 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.290745647 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.26957174 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.28850361 seconds)
  done (took 10.377705742 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.249809577 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.452301787 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.564585631 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813320608 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.252170847 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.255078301 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.150950892 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.255054826 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.256497197 seconds)
  done (took 14.411493879 seconds)
done (took 76.323899612 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.242778223 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.265833023 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.279035298 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.259454902 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.586270031 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.278267048 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.245942891 seconds)
done (took 16.321261398 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.232469251 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.239816694 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.242104628 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.244358134 seconds)
  done (took 10.121670591 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.259285084 seconds)
    (2/2) benchmarking "read"...
    done (took 1.562951987 seconds)
  done (took 4.98682172 seconds)
done (took 16.272942873 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252545458 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.25379771 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.25265005 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.24939046 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.249126307 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.252370745 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.250205125 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.247850988 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.250469263 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.251243067 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.250273583 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.252579179 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.252983861 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254137352 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24985397 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25007748 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252370398 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.250515418 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249620886 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249613897 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253333472 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.251436334 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.251022566 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.253573356 seconds)
  done (took 31.194701584 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.251137187 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.25120984 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.252940098 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.252188992 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.250116568 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.254394283 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.253662631 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.250867211 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.252197931 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.252125553 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249213184 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.253595766 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.253946613 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.252262071 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253430616 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.253987048 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.254681283 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251436767 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252451975 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.251441719 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.254315864 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249900473 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.25182396 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256644206 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.253323317 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251775936 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.255931107 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.254436925 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255951189 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.253009445 seconds)
  done (took 38.750170357 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.259936218 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.263344236 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.255691933 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.255148937 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.25429857 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.255160395 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.255678459 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.255158863 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.253603592 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.25584062 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.25456793 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.255928141 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.25622618 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.255396988 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.255930907 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.255468307 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.254882506 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.257045963 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.256834254 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.256484943 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.256490628 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.25639182 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.255795341 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.25622493 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.256457808 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.256206171 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.256049728 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.25452824 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.257381969 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.256853445 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.257190932 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.25565553 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.257391207 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.257747167 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.256285561 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.25590599 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.261573613 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.263971954 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.256772573 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.256842044 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.256402743 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.258911756 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.25767992 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.259853032 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.257092707 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.258281979 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.257837264 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.25650249 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.258471564 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.259006687 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.257844079 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.258003568 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.258382476 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.26062087 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.257669828 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.260112008 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.259029459 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.260166566 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.257730942 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.259569717 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.25777597 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.258980823 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.259067033 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.257952968 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.257785976 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.25740417 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.259931439 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.256952895 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.259276164 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.259373295 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.26058596 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.259842368 seconds)
  done (took 91.706600209 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.258216786 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257945344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.257435883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.257450787 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257220969 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.259187914 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.257545957 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260379056 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256814637 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.259051835 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260428724 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.258982883 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258165499 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26026235 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260673782 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.2590762 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260177206 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256293513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.262511234 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.262102446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25940538 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.259334786 seconds)
  done (took 28.869441256 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260761971 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262732672 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.258443962 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.26244054 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26200255 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.261958587 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.259128945 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261184058 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263118996 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259327105 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259073171 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262827953 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259571865 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25946405 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259645382 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260937646 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263016363 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260502231 seconds)
  done (took 23.868262792 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.258021343 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.261047244 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.262355266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.259855244 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.260808061 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.26361111 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26058798 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.262270907 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.261428265 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.2586141 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.261863987 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262797694 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.262790287 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258512061 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263224568 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.261504329 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.261516861 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260746902 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262775126 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260031078 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.261582978 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262746166 seconds)
  done (took 28.922726723 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263921232 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.263633895 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.260577332 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.261860278 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.261316721 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.262536683 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.263934437 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.261664224 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.26461219 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.262451846 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261393925 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.264813869 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.262541678 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263583258 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.261928541 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26276295 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.265661694 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261903798 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264580539 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.261373708 seconds)
  done (took 26.430019198 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267976066 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268713578 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267388299 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265475183 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26848371 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.269090779 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268893244 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269002302 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267950847 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267826549 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267432509 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267326928 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269215489 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26905599 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269063904 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269498961 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269176607 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268727461 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268535864 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26868828 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270537872 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270013754 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268652417 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270873361 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270202402 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269310031 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270695323 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269529512 seconds)
  done (took 36.703553967 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266805186 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267939478 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.264198915 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.265298087 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.264501876 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.264872796 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.264552062 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.26463897 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268245236 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264732682 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.267072131 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.269365062 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266389855 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.268507063 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268321294 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.267512297 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267554605 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.265581618 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267652478 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2665465 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.269157195 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268760005 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.269467093 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264508262 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263276436 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.26703367 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265645308 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264650101 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269100273 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266582504 seconds)
  done (took 39.177332574 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.308310661 seconds)
    (2/2) benchmarking "in"...
    done (took 1.308265177 seconds)
  done (took 3.794811 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.264655322 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26822918 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.267436163 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.267375509 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.267399455 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.270984082 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.267676925 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26613337 seconds)
  done (took 11.319859541 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.271120067 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.270700072 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.27100759 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.271269205 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.274019514 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.27384555 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278998303 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.290530741 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.273175766 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.273846092 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.280398123 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.280213052 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.275758631 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271160606 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.272922142 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27275714 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.270926392 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.273465647 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.273303842 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.271012809 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273667351 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275815286 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274701442 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.268444326 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.274837529 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.28535516 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.277341467 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.271824803 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273848187 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.277877736 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.274297827 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.268857239 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.275413353 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.274048292 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.271178724 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.273876398 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28296838 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.29512971 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.279921392 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274631768 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272182429 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.271299514 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.274263479 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.2750492 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276898998 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.276218408 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.272520035 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.271621932 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.273279131 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.278799473 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.27947864 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274053571 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.271349309 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276567321 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.276432832 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281360612 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.293725486 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.278930557 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.285226564 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.286955687 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.287310742 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.299958076 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27757741 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.277521295 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287129378 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.299714739 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280524144 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.289833209 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.270957548 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.272898308 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.281248335 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285890501 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.300581976 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.276363431 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277315099 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.2749941 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273481055 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275047655 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.282946665 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.298134094 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.276765407 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27636443 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28931841 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.30167227 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.278188448 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.277379278 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.278383422 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.277407459 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.278683259 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286768162 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.29783235 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.275680682 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.276376959 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.279189096 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.278324632 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.279893983 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.278407189 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278154244 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.275552387 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.278351447 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278765403 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282386643 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.286706263 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27887588 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27951219 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.282916585 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.275626298 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277737787 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.284542843 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.274183358 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.279749526 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.281331421 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.285019777 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.277073732 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283085884 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.290653942 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.281490441 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.28053363 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.28073194 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.279731627 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292361341 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.306639496 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.278032003 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.278526731 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.286809967 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.293804176 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28107992 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.283686875 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.279654301 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.275874071 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.275556763 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.281996157 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.278397342 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.282202965 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280723835 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281133977 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.277721979 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.278991693 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.282217963 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.28211602 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.280834365 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.28187409 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.2824806 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.283481586 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.282382026 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.281513643 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.286662835 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.282973634 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.282900292 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.282407001 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.278303244 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282216798 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.285462284 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.284098472 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.283147519 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282506358 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.283656057 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.283810228 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281021516 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.281579351 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283130843 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.284969825 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286808846 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.282407904 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.287009246 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.282919906 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.27869516 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.281186191 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.280625782 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.282974776 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.281551305 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.281375702 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.287469449 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.291542438 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.282762725 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.283012048 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.284677874 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285810518 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285485417 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.284788374 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.288172129 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.293127521 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.286854634 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.289092271 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.2826023 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283562301 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.284286803 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.285680322 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.283817295 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.285519341 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.287640903 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.292432746 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299384339 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.308504193 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.28669188 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.28707861 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.287420937 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.289321981 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.289472309 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.285749336 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.281723328 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286411166 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283650331 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285874642 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.286408095 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.2843816 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.284772401 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.283992067 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.286534189 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.286207295 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282869982 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.286133515 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286879927 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.281673435 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285949857 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285196427 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.285430633 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.283384937 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.286691734 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.28582625 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.285155919 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.287718854 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.291957684 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.280230691 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288768953 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.287329005 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.285935586 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.285966672 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.286553551 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288703459 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.286821613 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294121576 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.305553778 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.288840204 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294622089 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.30783812 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.285838848 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.29078066 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.286571718 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.284192714 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.290966514 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.294877133 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.28660836 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.288390556 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.288627255 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287067745 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28659188 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.294312015 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.285110829 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.288018486 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.287558389 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.290561834 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.285540965 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.289743295 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.289694055 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.289598364 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290815775 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287191596 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.287772813 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287815091 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.290165865 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.290685841 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.290305983 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292548479 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.300123678 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.294854544 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.290056273 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.291392541 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.291368871 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.291590698 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.289947416 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.290966282 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.289197129 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301856283 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.314644249 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295329888 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.312938964 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.291932653 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.297634717 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.311174402 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.296336214 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29229719 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29255989 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.292271961 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.291878958 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.28956117 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294907578 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.292788552 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295809433 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.293558002 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.296112936 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.290702617 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.294033023 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.294360868 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.295447163 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.292513927 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.293460547 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.293772687 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.293626927 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294832306 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.292394635 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.294386731 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.300579858 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313489821 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.295575943 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.294076301 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.294697935 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.293200429 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.295055315 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.295370566 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.299300817 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.303095495 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.298817109 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.304760314 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.296286416 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.303561437 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.295109762 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.298025497 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.305306257 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.29068643 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.293573754 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.294977236 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.295618499 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301217336 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.315202987 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.299047202 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.298351057 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.294675309 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.29473748 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.292131511 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.293814568 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290714626 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.295945144 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.301770206 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.315955373 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.298494697 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296367277 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.289149552 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.293539528 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.292412044 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.293889795 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.29713033 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.294739905 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.295642582 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.293635204 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.29480897 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.291779228 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.294927759 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.295324043 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.291348105 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.294170969 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.301856378 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.316999959 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300780633 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.296187954 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.302293748 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296642003 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.302463578 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.316194636 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.29615733 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.296015975 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.294434546 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.297355654 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.295952651 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.295926577 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.297068437 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.297044292 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.298540459 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.29677611 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.298199045 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.297693311 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.299102871 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.298110274 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.308880334 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.322224463 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.298388553 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29966742 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.291074767 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.298858824 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.302539463 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.298641213 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.296185378 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.3002429 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.30928835 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.304243613 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.298144203 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.298407068 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297965435 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2962642 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.296733931 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.296601322 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.299336902 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.296466483 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.29910636 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.298293018 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302332047 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.296257576 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.296185956 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29876274 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.299619003 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.309628917 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.299378425 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.301547615 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.301365465 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.297472638 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.297516471 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.297987501 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.299274904 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300323856 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297522274 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.301759626 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306805759 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.308915338 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.302138241 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.299871449 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.300128575 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.300612063 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.299201341 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301507579 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.300547596 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303246912 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.300717531 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.301615901 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.299312379 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.298431692 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.299744141 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.300675773 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.298188497 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304074157 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.309587084 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.299191207 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.295016877 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.299627908 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.300037855 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.300650446 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.300359557 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.307522629 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.303858191 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.313584503 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.3098943 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.30678956 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.302235561 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304509677 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.308778558 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.298132048 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.302459312 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.300190282 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.301547646 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.301839081 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.305055897 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.301874752 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.306374583 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.301289855 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.303148076 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.308933809 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.325740704 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.303424037 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.303569571 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.307206982 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.302226962 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.297544448 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.302461568 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.302072414 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.306780942 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.322632518 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.30461246 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303761486 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.302169405 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.302243617 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30652572 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.302047412 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.30358694 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.298095411 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.303377363 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.3031249 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301642986 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.298497483 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.302125086 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.303922928 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.307076583 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.311583843 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.299665886 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304311482 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.302632221 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.301461176 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303030482 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301347278 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.299969278 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.298658318 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.300581084 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301733446 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.303430045 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.30658831 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.301660667 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.305155284 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.300685496 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.303336831 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.306899863 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.31519396 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.308652226 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.298921394 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.302882266 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.302826079 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.302014954 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.301119036 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.300668809 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302738293 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.30152101 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.299735455 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.302340022 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.298961456 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.304455657 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.317665256 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.322668043 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.299751205 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.302032307 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303199846 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.302256677 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.297205196 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.301381639 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.304086324 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.30360161 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.310366827 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.30139777 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307980346 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323851126 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.302666203 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.304209356 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.306675805 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.31027122 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.305641858 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.301728945 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.303841191 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.307368666 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.318116775 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.300804751 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.312813771 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.333840233 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.323803971 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.300470152 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.303242524 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298672061 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.302080826 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.302743134 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.302884624 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.301359152 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301382611 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.302579386 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.303322536 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307275363 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.305259187 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.302388999 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.298988622 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.300070177 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.300932443 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.298631949 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.300452514 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.300803448 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.301824155 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.301064546 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.303164785 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.302029246 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.31389443 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.332373459 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.301798427 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.301214298 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.299428005 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.304692401 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.306467117 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.31586372 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.310853752 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.304119364 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.304196793 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.30380346 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.303845442 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.299449551 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.303067118 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.303722991 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.302414735 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.299593802 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.315073948 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.328407635 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.308224464 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.302702337 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.30282304 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.301495094 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.304595246 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.302657823 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.304066323 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.302750427 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.303352433 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.307035409 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.303019497 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.302122492 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.306918321 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.309997703 seconds)
  done (took 771.958202846 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299505099 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299765521 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300417925 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.302134029 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300642418 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299708148 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300049232 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300650043 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.300504848 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29980762 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.298261781 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299776917 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300352463 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.300974329 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301829465 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300052809 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299423505 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300119245 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300380398 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301114158 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30155301 seconds)
  done (took 28.514243755 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.303147965 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.302594813 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300395373 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303696306 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30152572 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.303444506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.303036633 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304034222 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.303075998 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300879151 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.302559139 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303893637 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.299368432 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.302526248 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301435656 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304016763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.304349855 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303370969 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.304535557 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.30356944 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.304522775 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.305300244 seconds)
  done (took 29.876093094 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.308483839 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.308699 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.305716991 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.303726016 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.307830564 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.304030124 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.306775303 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.30459086 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.306142316 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.305659003 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.305801225 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.307148045 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.313841284 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.312721652 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.30866967 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.305764101 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.30908199 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.308695132 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.308837354 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.304041889 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.31280302 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.32413713 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.304268122 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.308577012 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.308830333 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.306793142 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.305689514 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.307792894 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.308803502 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.311979176 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.30504897 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.307899981 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.310000203 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.307072908 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.307956341 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.309875672 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.308147412 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.304240138 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.309329414 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.321745599 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.331933092 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.312252816 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.318465056 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.329501362 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.308847078 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.314824202 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.319588292 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.306550048 seconds)
  done (took 64.090143394 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.308672612 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.30940221 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.307027337 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.308710575 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.309667725 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.308885482 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.310757083 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.310010298 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.307355211 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.3073141 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.311602157 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.306644089 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.30779173 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.309103091 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.310636124 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.308317607 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.307848903 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.306568602 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.307031452 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.30710495 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.308147972 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.310281642 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.309884245 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.307130529 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.309676971 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.308263832 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.306797253 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.309432591 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.308181313 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.307290407 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.311096183 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.309803841 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.310083299 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.305547977 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.308186768 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.310185347 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.309773702 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.307969595 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.310816781 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.308445116 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.310662948 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.313059997 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.312598385 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.311435429 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.308205184 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.308720369 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.308547906 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.309031144 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.310456897 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.311485773 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.31220017 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.309371321 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.313081004 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.309541412 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.311745285 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.312730108 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.311254581 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.30671839 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.313475138 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.311826474 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.311293456 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.315694058 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.3115302 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.314044781 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.315712263 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.309995887 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.310382521 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.312501589 seconds)
  done (took 90.279194042 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31473321 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.314207649 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31194722 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316017641 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314908221 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.314723842 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313820701 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.315213953 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.312497863 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.314272097 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315009146 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.311295966 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.313843186 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.315990225 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.316805853 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.3149855 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.31309433 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315720676 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.314179012 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316046205 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.312638157 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.316237301 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.314177201 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.313385277 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.315852172 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.314547239 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.313219047 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.314395797 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31395537 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.313937573 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.315525673 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.315876868 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.316768654 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.316609989 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.317203568 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.314022744 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31516635 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31625887 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.313540817 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.31471909 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.313023391 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.313067623 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.312816427 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.313279575 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316309643 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.316872758 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.315030461 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.31434412 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.314981533 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315213004 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.315729371 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.317082093 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314934024 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.315496332 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.314413978 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.31288172 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315584516 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315387912 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314754979 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.315194444 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316974468 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.314066793 seconds)
  done (took 82.731737999 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314954473 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.312103909 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.31077109 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.311885937 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.313200313 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.312421534 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.313026794 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.313790362 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.312978328 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.313443148 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315469359 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311913653 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31333149 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317190205 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.312299962 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313953396 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311970204 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.312125615 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31575784 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.313485379 seconds)
  done (took 27.482732848 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.31218851 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314611827 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.314403565 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.31217069 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.314964462 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311564867 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.314795104 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315022255 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312373897 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313830597 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.316909839 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314612964 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312146692 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310687095 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313984542 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.31131092 seconds)
  done (took 22.234038448 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.312540388 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.314813033 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.316680905 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.316981712 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.311949981 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.312750744 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.314579825 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.313206949 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.314235325 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.317197019 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.314650218 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.317711883 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.314738265 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.317968438 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.313442648 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.316123158 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.31298976 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.314103288 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.316581124 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.31717389 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.315369206 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.314026395 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.317113814 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.316691894 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.312601323 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.313311159 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.314715249 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.312359239 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.313385338 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.315070469 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.314731771 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.313077118 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.312024449 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.313986858 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.316927097 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.313992327 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.316619717 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.315796624 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.317298025 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.315929404 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.315919745 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.313827687 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.314483738 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.315987259 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.312179218 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.315078548 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.312604835 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.314471664 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.31464678 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.312362655 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.316244175 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.318935868 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.316017956 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.317790262 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.315582753 seconds)
  done (took 73.541527903 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31741104 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.316956212 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.313424768 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315968088 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.316125959 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.314980655 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.316023472 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.317563122 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314346257 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.31800479 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316318799 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.318831146 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314875032 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.317151066 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314872381 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315766985 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.315678124 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.315414178 seconds)
  done (took 24.906867539 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.314933523 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.315128111 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.317982106 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.315128075 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.314472328 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.317865086 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314270303 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.317140767 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317165656 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315434636 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315558316 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.317922774 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318020917 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.31715339 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315062357 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314753817 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.316757734 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318623851 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.315098373 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314664639 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.318578424 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.318002261 seconds)
  done (took 30.177872389 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.316628629 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.315137633 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.316918357 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.333252338 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.337852235 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.316451568 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.317202265 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.316497353 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.339789801 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.374803856 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.365020085 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.338197784 seconds)
  done (took 17.209008839 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314540895 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319064878 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313227455 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316075752 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317667752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313682823 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316128508 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31561367 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318946928 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316856288 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313836682 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317274539 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319774187 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314937521 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317429278 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317688545 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314724259 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317052214 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315773625 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319705791 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316164997 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317812026 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317060135 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318482837 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317486278 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317399721 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320554577 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316798627 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318409226 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319562632 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319726878 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3166679 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318231782 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318067639 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321750215 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319731514 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316917851 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321154312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319118499 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316174151 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319034274 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319843189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318239673 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316677159 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318632418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316489114 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316059112 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31729391 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317225563 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320243228 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319830097 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317330708 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321905812 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321307469 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321320967 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319591799 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317689068 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317563141 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319201872 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317821649 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316382073 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319505726 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317760572 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318010283 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32204748 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317561694 seconds)
  done (took 88.204089774 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314616897 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316391614 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316120909 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31729666 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316246593 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319620946 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316269149 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316020154 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318030472 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315168478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319379272 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317745089 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317765359 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313847155 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315860273 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3165985 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316367228 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317103767 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315022389 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319682477 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317927317 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316019371 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316096207 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316324092 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316793656 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319484984 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316035523 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316121556 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315402818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315212236 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314063104 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316696756 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316292083 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315998425 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315121002 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319061304 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315077628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316114699 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316096446 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318470777 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315003364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317522619 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316255604 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318199963 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316490274 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31559436 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314589266 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316134285 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314404519 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314719814 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316477669 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31346045 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315681226 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314382276 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318663779 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315656156 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315710234 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315973556 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316640544 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317952097 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314835274 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315883857 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317602984 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316501724 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314450299 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314877289 seconds)
  done (took 88.100345387 seconds)
done (took 1801.209100719 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.480155633 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.432278213 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.318588608 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.329965193 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.317189068 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.341418204 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.329206228 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.314674908 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.3152008 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.318022325 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.318671008 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.503794951 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.371983956 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.315598691 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.317227175 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.412060743 seconds)
  done (took 26.957811712 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.346711074 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.325033744 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.430947636 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.338976396 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343804883 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.502304742 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.372509794 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.323939052 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.486293791 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.361275017 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.327792673 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.342902865 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.322331174 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.325176159 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.338895775 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.497004945 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.559119596 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.32439571 seconds)
  done (took 29.090274747 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.745150433 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.335358551 seconds)
  done (took 5.299372957 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.338540483 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.321150458 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.321738096 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318164409 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.313002171 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.311665626 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.318500855 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.313972373 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.319517423 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.439777185 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.321494592 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.33155089 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.341998108 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.318390444 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.315353488 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.356009536 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.474266346 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317194306 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.314700103 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.327242699 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.319412491 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.40569025 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.360463941 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.317012629 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438324343 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.31583686 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.324153037 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326009812 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.455430298 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.318275816 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.321761331 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318182304 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.322631646 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.232573813 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.839492431 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.312343944 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.34196545 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.329420458 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.314431559 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.480603921 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.324673565 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.327520663 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.327724708 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.819973835 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.470371637 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434946892 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.328303246 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.321352644 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.322603762 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.380334404 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322940653 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.322532532 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.364219019 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.099578256 seconds)
  done (took 84.518885472 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.314297898 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.311544285 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490934147 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.34010866 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.307994959 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.327645031 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.312223151 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.578580572 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.332084158 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314130395 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.585520029 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.849291277 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.330150004 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.311393608 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.162008316 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.366649132 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323078493 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.312677206 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.330609759 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.31047247 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847070996 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313000336 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315017192 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.470345288 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.347966815 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797415696 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.313329481 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.317532531 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.314712591 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.309628373 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.804992548 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.332943047 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.366106503 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.311503776 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.567624038 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.674160523 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641008033 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.320031509 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.346282779 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.314189838 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.32408487 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791792942 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.657704788 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.315430124 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.329678741 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.800493923 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314992791 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.317255524 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.322685443 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.55868105 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.316942299 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315780981 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.314898607 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318254091 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.312082055 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.387097577 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.385413344 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799170125 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315192238 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.316367282 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.381886545 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.315703616 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321606323 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314308873 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.316919963 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.656938484 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.54750775 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318600624 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.659202217 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.804486218 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.330965856 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.884678155 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.32901726 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.318309179 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.386088235 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.32792292 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.31674079 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796181215 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.345714725 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313001739 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641651566 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.324971079 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.584901805 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.335464817 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317206495 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860662951 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.32211444 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.324893777 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.329516611 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.318553041 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.316406266 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318433343 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.588297096 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.36837983 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.315549604 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.317037195 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.333804894 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.315398461 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.320053116 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.317835978 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865393535 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.338642736 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.317204797 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319439585 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318890684 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.321753923 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.318191526 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.320803648 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.576692006 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.320084899 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.324147731 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318235876 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.323503328 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.330193283 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.465833312 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.324136428 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.611953769 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.326010135 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314237381 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.32294384 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318503589 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.33343399 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316605684 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.319595225 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.197715002 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.61301217 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.340528396 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.319746136 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319339506 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326733906 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320043397 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324291377 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.347117297 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.318440466 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043102815 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.343853503 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.327702019 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.319357136 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.326718547 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319333426 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.330339759 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319922506 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.613893573 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.580629745 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.548244533 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.319283371 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.322320526 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.045434159 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.35340875 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495002713 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339213133 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.316805874 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559108383 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.576027138 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.320431884 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.315433661 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.323113718 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569816658 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321886884 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640244046 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.83911168 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.338720708 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325911626 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.052924817 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.042100372 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.322363915 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.321412418 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.581683264 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.334483861 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.320209733 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.320643474 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.328202568 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.323012768 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.338820638 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.329217629 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.320699629 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.322157425 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.532455767 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510535584 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.338372337 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.322567108 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796732192 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325323286 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31918609 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.346472455 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.32229376 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.321607919 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.37482079 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.321537937 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.326003575 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.324083813 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.331531329 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.863748029 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.32331038 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.323995402 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.509936765 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002603497 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.339895501 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.327535043 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.32686873 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.208804182 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822526206 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.360414171 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.614671008 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.327083919 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.359783255 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324701328 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329653013 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832642817 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326050837 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.326030798 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.945424343 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.341271446 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.992986981 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.321370494 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.324705619 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90191412 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.341362809 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.329356992 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.32213455 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324706513 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.644664535 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.327399727 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.368205289 seconds)
  done (took 494.329723901 seconds)
done (took 641.41534286 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.32527096 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322420347 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.315458402 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.32664456 seconds)
  done (took 10.520672549 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.333221685 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.331488893 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.331302494 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.33001188 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.330184489 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.331296483 seconds)
  done (took 9.218986158 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.322997882 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322756332 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.325428894 seconds)
  done (took 8.201405693 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.51960782 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.342933992 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.650517409 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.337472985 seconds)
  done (took 9.081107184 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.331791167 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.334314241 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.33368177 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.335545894 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.334558286 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.337657296 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.335356219 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.335033158 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.337751084 seconds)
  done (took 13.245563283 seconds)
done (took 51.495636635 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.424917055 seconds)
    (2/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.323630562 seconds)
    (3/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.325002558 seconds)
    (4/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.315930159 seconds)
    (5/286) benchmarking ("sort", Float64, true)...
    done (took 2.325903848 seconds)
    (6/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.309103034 seconds)
    (7/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.314226205 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.631750917 seconds)
    (9/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.835373574 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.367348974 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.351702004 seconds)
    (12/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.313536889 seconds)
    (13/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.446313253 seconds)
    (14/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.328853796 seconds)
    (15/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.424061233 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.858251813 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.343218795 seconds)
    (18/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.35352751 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.335785275 seconds)
    (20/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.37880827 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.716690229 seconds)
    (22/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.326888016 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.349783552 seconds)
    (24/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.819194638 seconds)
    (25/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.315393591 seconds)
    (26/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.329945947 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.355044391 seconds)
    (28/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.316191858 seconds)
    (29/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.310391149 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.944374159 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 2.328575997 seconds)
    (32/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342853914 seconds)
    (33/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.31409976 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.456526283 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.193773065 seconds)
    (36/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.313601912 seconds)
    (37/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.429818282 seconds)
    (38/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.319775076 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.134099396 seconds)
    (40/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.314358034 seconds)
    (41/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.136362787 seconds)
    (42/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.360893678 seconds)
    (43/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.332447734 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.944282741 seconds)
    (45/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.319950517 seconds)
    (46/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.878735656 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.43788682 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.123546139 seconds)
    (49/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.317948996 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.43640439 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.585450636 seconds)
    (52/286) benchmarking ("sort", Int8, false)...
    done (took 2.329253274 seconds)
    (53/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.355555325 seconds)
    (54/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.323459837 seconds)
    (55/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.247008645 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.333295359 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.201292826 seconds)
    (58/286) benchmarking ("sort", Float32, true)...
    done (took 2.330142631 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.386678624 seconds)
    (60/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.781848939 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.650814531 seconds)
    (62/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.330338474 seconds)
    (63/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.470483014 seconds)
    (64/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.315420535 seconds)
    (65/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.315222753 seconds)
    (66/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.332745546 seconds)
    (67/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.330537091 seconds)
    (68/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.352575225 seconds)
    (69/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.648084352 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.33359402 seconds)
    (71/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.338312541 seconds)
    (72/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.317499722 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.331329604 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.652174865 seconds)
    (75/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.331528539 seconds)
    (76/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.317034028 seconds)
    (77/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.31608762 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.176296106 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 2.32977088 seconds)
    (80/286) benchmarking ("sort", BigInt, true)...
    done (took 2.331041072 seconds)
    (81/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.33217332 seconds)
    (82/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.320020952 seconds)
    (83/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.356176914 seconds)
    (84/286) benchmarking ("sort", Float32, false)...
    done (took 2.329958202 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.327945691 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.205770657 seconds)
    (87/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.882166452 seconds)
    (88/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.41494019 seconds)
    (89/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.055345727 seconds)
    (90/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.325094635 seconds)
    (91/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.046186982 seconds)
    (92/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.504582858 seconds)
    (93/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.317843235 seconds)
    (94/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.164720435 seconds)
    (95/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.681413698 seconds)
    (96/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.332102113 seconds)
    (97/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414152717 seconds)
    (98/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.323952394 seconds)
    (99/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.440502682 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.356775113 seconds)
    (101/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.329749487 seconds)
    (102/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.353247088 seconds)
    (103/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.355979811 seconds)
    (104/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.246699246 seconds)
    (105/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.39676288 seconds)
    (106/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.393842915 seconds)
    (107/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.316492017 seconds)
    (108/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.424848015 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.547014888 seconds)
    (110/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.335367749 seconds)
    (111/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.048487072 seconds)
    (112/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.422038253 seconds)
    (113/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.476136889 seconds)
    (114/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.325909056 seconds)
    (115/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.335203123 seconds)
    (116/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.335560713 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.56827044 seconds)
    (118/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.339480557 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.863617646 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.355155354 seconds)
    (121/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.319921281 seconds)
    (122/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.431136841 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.610264057 seconds)
    (124/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.328201936 seconds)
    (125/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.345514969 seconds)
    (126/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.412830597 seconds)
    (127/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.472753054 seconds)
    (128/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.324053679 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.055936523 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.587600366 seconds)
    (131/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.19465534 seconds)
    (132/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.476598442 seconds)
    (133/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.339529091 seconds)
    (134/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.338691019 seconds)
    (135/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.33006424 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.437783555 seconds)
    (137/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.34144121 seconds)
    (138/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.321335762 seconds)
    (139/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.363122727 seconds)
    (140/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.453594482 seconds)
    (141/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.321305746 seconds)
    (142/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.360163338 seconds)
    (143/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.395667137 seconds)
    (144/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.358190098 seconds)
    (145/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.474370348 seconds)
    (146/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.90559903 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.062970928 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.354600147 seconds)
    (149/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.441233996 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.340552523 seconds)
    (151/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.461273762 seconds)
    (152/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.321885263 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.353663893 seconds)
    (154/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.321338308 seconds)
    (155/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.325147553 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.34099545 seconds)
    (157/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.362463351 seconds)
    (158/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.891567312 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.762950931 seconds)
    (160/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.360504281 seconds)
    (161/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.277755329 seconds)
    (162/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.205442584 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.719912431 seconds)
    (164/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.342386912 seconds)
    (165/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.324004702 seconds)
    (166/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.143671288 seconds)
    (167/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.3403241 seconds)
    (168/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.366440695 seconds)
    (169/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.470760962 seconds)
    (170/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.673025303 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.718643543 seconds)
    (172/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.340562333 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.37853606 seconds)
    (174/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.84389529 seconds)
    (175/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.352030038 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.377735014 seconds)
    (177/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.329968295 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.346580721 seconds)
    (179/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.325643577 seconds)
    (180/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.340409003 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 2.340108102 seconds)
    (182/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.33084202 seconds)
    (183/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.346244148 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.39417533 seconds)
    (185/286) benchmarking ("sort", BigInt, false)...
    done (took 2.338135625 seconds)
    (186/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.35873138 seconds)
    (187/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.382161301 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.356321199 seconds)
    (189/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.342107963 seconds)
    (190/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.363100154 seconds)
    (191/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.336241391 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.161535248 seconds)
    (193/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.340072116 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.335601168 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.539873792 seconds)
    (196/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.341191007 seconds)
    (197/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.514456021 seconds)
    (198/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.36340414 seconds)
    (199/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.07043996 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.341760007 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.334513062 seconds)
    (202/286) benchmarking ("sort", Int8, true)...
    done (took 2.339970003 seconds)
    (203/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.463269127 seconds)
    (204/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.346334968 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.359734148 seconds)
    (206/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.066169591 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.37831046 seconds)
    (208/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.32652746 seconds)
    (209/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.335763143 seconds)
    (210/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.362756627 seconds)
    (211/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.325576386 seconds)
    (212/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.324068425 seconds)
    (213/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.832228002 seconds)
    (214/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.329279479 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.335797581 seconds)
    (216/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.333022249 seconds)
    (217/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.0691164 seconds)
    (218/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.341688606 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.227501931 seconds)
    (220/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.391069551 seconds)
    (221/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.386769815 seconds)
    (222/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.338150474 seconds)
    (223/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.333493497 seconds)
    (224/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.601977253 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.330634594 seconds)
    (226/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.342105711 seconds)
    (227/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.328712165 seconds)
    (228/286) benchmarking ("sort", Float64, false)...
    done (took 2.341109814 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.54348892 seconds)
    (230/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.351726867 seconds)
    (231/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.42445945 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.32472436 seconds)
    (233/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.340157083 seconds)
    (234/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.357915449 seconds)
    (235/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.402053586 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.353811427 seconds)
    (237/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.343844422 seconds)
    (238/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.85263025 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.368550414 seconds)
    (240/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.108894537 seconds)
    (241/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.350498558 seconds)
    (242/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.443250454 seconds)
    (243/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.361331154 seconds)
    (244/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.329829855 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.753594461 seconds)
    (246/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.544871623 seconds)
    (247/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.442754669 seconds)
    (248/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.329952541 seconds)
    (249/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.54519471 seconds)
    (250/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.670114782 seconds)
    (251/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367893274 seconds)
    (252/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.328329507 seconds)
    (253/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.370459063 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.340934116 seconds)
    (255/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.326529391 seconds)
    (256/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.344258051 seconds)
    (257/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.335972744 seconds)
    (258/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.328594668 seconds)
    (259/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.359354435 seconds)
    (260/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.455871769 seconds)
    (261/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.33061024 seconds)
    (262/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.672684721 seconds)
    (263/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.072156868 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.441323985 seconds)
    (265/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.332061554 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.426281309 seconds)
    (267/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.602100822 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.459936837 seconds)
    (269/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.190120423 seconds)
    (270/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.256319944 seconds)
    (271/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.478830594 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.340006955 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.727667834 seconds)
    (274/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.060696242 seconds)
    (275/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.255848556 seconds)
    (276/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.350475983 seconds)
    (277/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.656491855 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.345281754 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.387509926 seconds)
    (280/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.351724742 seconds)
    (281/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.330454369 seconds)
    (282/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.369965872 seconds)
    (283/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.36043215 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.365379869 seconds)
    (285/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.426234302 seconds)
    (286/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.328355641 seconds)
  done (took 565.04622609 seconds)
done (took 566.278660203 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.376227855 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386018458 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.353416596 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.375585082 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.464886459 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.530244925 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.362656158 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.3562689 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.401530345 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.405864649 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.352975383 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.530286842 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353498995 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.353120234 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.354754487 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382846919 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.352245345 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.351396914 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.372136183 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.363561661 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.372823062 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.353159615 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.404421956 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.531242196 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.359504556 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.35978542 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.358587109 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.373618207 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.468157439 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.357852101 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.360361686 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367362589 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.354802271 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.349089506 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.351919111 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.375273286 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.36668571 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.36562104 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.360685738 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.388479607 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.354118115 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.351274118 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.357577423 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.36052688 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.357400295 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.362885705 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357203225 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.363200324 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388644476 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386188311 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.346745741 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.368816989 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.359336409 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.359029468 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.368486376 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.355974649 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.363485166 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389736944 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.377084647 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391347463 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.346556658 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.359711236 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.361554987 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.374766291 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.366672009 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.348313914 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.35016165 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.36324116 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.357070655 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.36060237 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.350191953 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.361678916 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36052058 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.371351619 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.390619638 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.358261129 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.34981354 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.357801755 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.36559808 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.355348823 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.369122907 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387672626 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.364216179 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.361247232 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388319218 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.535894707 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.369943209 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.36119361 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.370234248 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379904751 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.366714818 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.368468229 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.363804027 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.357526593 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.370596403 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.36401793 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.362758463 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.36266294 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.364937559 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37139024 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.356096105 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389757416 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.358661176 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.358231753 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.361663872 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373736047 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.356752835 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.356467388 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.381478989 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.408612484 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.363614688 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.349290471 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.36135086 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396752608 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.371772957 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.366371355 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.355889244 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.348751906 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.345941742 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.372618255 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.363434712 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.36009159 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39473493 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.362404582 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.358853674 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.350200783 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.375627503 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390492844 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.482268877 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.373751495 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.395014432 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.360563091 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.365714554 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.393292886 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395553366 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.394542932 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.365659241 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396379784 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.377418892 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.358708961 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.373767686 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.372771937 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.363890806 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.369120433 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.358077303 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.39387982 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390945189 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39290433 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.382892129 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.483286969 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.360085546 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.352078831 seconds)
done (took 226.226148717 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.422833416 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.360036409 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.466868959 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.360076723 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.469059737 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.457457665 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.358036951 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.358387627 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.358101595 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.779859039 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.356420598 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.358913706 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.360749639 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.358036719 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.455718597 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.361360968 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.35894015 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.701905406 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.363981513 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.432127963 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.361948018 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.359115216 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.361284731 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.744208077 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.359991775 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.35662113 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.434296881 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.363223419 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.744792954 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.358072647 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.360672376 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.708263394 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.452114047 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.379895933 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.372286949 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.368854834 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.462610784 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.379119417 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.444885411 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.455531163 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.470994947 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.402105056 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.35767248 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.360987329 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.363684189 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.36417177 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.360074739 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.390054994 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.362718374 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.361537046 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.741117295 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.374376134 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.368316867 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.360946325 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.360921653 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.384241239 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.361121952 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.366630471 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.452771861 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.368019893 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.426538791 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.786261424 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.740365755 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.362930441 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.36101035 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.360321909 seconds)
  done (took 106.555981623 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.431984862 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.441336492 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.472694301 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.37993933 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.414829159 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.477311707 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.381502324 seconds)
  done (took 11.260202566 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.370068744 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.365433621 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.416221996 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.41424569 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.365975407 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.579515844 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365892648 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.376415419 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.364479228 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.442573171 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367116252 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.366355585 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.371284459 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.360851676 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.416465973 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.377292271 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.47996243 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.367797569 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367322303 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.521769175 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364206186 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.372237345 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.443147118 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.376397433 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.36675617 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.37397429 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.324497531 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368005575 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363791459 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.364852231 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363161748 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.477298423 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364694377 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.365881382 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362593972 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.525723862 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.368483448 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364900283 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.366314021 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.366755571 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.363791936 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.367549472 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.367223013 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.36373037 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.365970495 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.389801588 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.366199478 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368017937 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.367941742 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.367759765 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.442743553 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367252486 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.364210992 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.364745793 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.445459679 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374103667 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.370184246 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.368013361 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.368213995 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366553037 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.520793368 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.417677807 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.366938902 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416722514 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36903238 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.367599705 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.368980825 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.368087115 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460253428 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.370606215 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417491781 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.36808172 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.594858501 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.392114306 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370670261 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372706499 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.373237056 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369564797 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.366996669 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.375633523 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.366447171 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.371984262 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.377797742 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369506638 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367971571 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.55462173 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.528711117 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.367518892 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383908677 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.378734273 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.366759998 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.448844715 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.369556853 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.368980675 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423334198 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48830732 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.449572556 seconds)
  done (took 141.494388777 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.376178928 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.380910252 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.377476284 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.398913445 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370592428 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.373623804 seconds)
  done (took 9.543568233 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.372715237 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.37038266 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.369749179 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.372081508 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.372645772 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.374278301 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.37230162 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375450435 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375455031 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.370961117 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.372055771 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.374840235 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.374555952 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.376452721 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.376795477 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.371405179 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.37473494 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370954576 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.37431869 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374115315 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.370717842 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.374187745 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373482431 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375015846 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.3772892 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.372488095 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381208492 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.376077633 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.373633171 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.380775334 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.392498074 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374447989 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.374368002 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380068706 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.379404798 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.375507609 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375998826 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.377229507 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371723634 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.379249672 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.379331733 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376654872 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.377462293 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.375171483 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.374788977 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.379902468 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.378332156 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.384462999 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.37722359 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.376840567 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.376665251 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.373899802 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.37818521 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.375949469 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.378299487 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39721672 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.379598926 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.374728932 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.377321318 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.377272671 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.374578125 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.375007291 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376813967 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.380012113 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.374032379 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.377167005 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377986021 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380042958 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377088616 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375996412 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.378304682 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.372696418 seconds)
  done (took 101.360627893 seconds)
done (took 371.472327609 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.791456197 seconds)
  done (took 4.062792467 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.422034043 seconds)
  done (took 3.696107342 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.829735902 seconds)
  done (took 22.106030143 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.418965125 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.381209225 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.371433041 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.36324216 seconds)
  done (took 10.808291572 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.57262667 seconds)
  done (took 3.839795683 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.356974841 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.373840033 seconds)
  done (took 5.994410701 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.639197008 seconds)
  done (took 3.901527019 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.757461974 seconds)
  done (took 4.018452439 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.366675492 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.36498224 seconds)
  done (took 6.003403536 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.343891974 seconds)
  done (took 3.599587223 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.75027923 seconds)
  done (took 17.00721436 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.345194893 seconds)
  done (took 3.59939217 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.376750353 seconds)
  done (took 3.626383399 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.806442046 seconds)
  done (took 6.057390737 seconds)
done (took 99.593515194 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.338997861 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.338473406 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.336870949 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.335669741 seconds)
  done (took 10.598600407 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.382597085 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.377410761 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.37977 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.390420594 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.38209065 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.376623801 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.369890596 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.372978701 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.38447472 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.377578678 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.375383029 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.377021948 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.374673865 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.367476989 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.376755029 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.374653539 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.381497536 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.373747608 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.36356754 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.373160141 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.340014587 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.38372656 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.374356247 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.337072443 seconds)
  done (took 34.214670469 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.855719256 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.408833418 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.489958192 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.387440855 seconds)
  done (took 7.382610865 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.388438451 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.391017082 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.401226928 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.440532215 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.467639229 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.399744596 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.363181618 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.358406924 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.344721722 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.389621871 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.467279848 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.406126076 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.474592752 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.338142845 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.549791036 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.337478819 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.33828392 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.38925231 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.442797663 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.474110238 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.339108965 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.389230954 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.394592198 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.407795189 seconds)
  done (took 34.932489279 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.337547754 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.356152721 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.339667548 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.336531372 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.347490876 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.337961481 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.33602433 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.335740541 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.337937884 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.856028777 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.339048809 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.350493962 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.833374381 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.340458717 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.345306864 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.338560723 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.848052219 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.840211126 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.339486818 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.346720702 seconds)
  done (took 30.083609207 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.332081055 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.33377344 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.686708951 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.589545014 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.332356672 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.334421483 seconds)
  done (took 13.852090183 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.405525371 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.561405722 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.342412702 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.682318413 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.764085899 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.34509231 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.345042106 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.58866882 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.89178796 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.874949304 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.399841196 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.416173365 seconds)
  done (took 19.860128712 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.346749231 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.339633458 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.342184944 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.359368152 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.399192591 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.367859031 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.351668417 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.337171606 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.40112285 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.4197456 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.366718938 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.399447957 seconds)
  done (took 21.681100271 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42642454 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340602868 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339264916 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392381768 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33959251 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.550297328 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377048278 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.068190922 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.366396615 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614431801 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34460155 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43718905 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59966308 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344623231 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344883795 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.33103449 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570468886 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826004978 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343902224 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35411686 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371521615 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352131129 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351984047 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.556717417 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348156328 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342600083 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.604227511 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345928845 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620865689 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362539058 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355016042 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341977216 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617349667 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997609496 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460810575 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550195719 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36486081 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361507325 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.337711864 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.352856418 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352759694 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342669694 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348962936 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336419693 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338304065 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340927002 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074862311 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.359622652 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.331967612 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334806592 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582015549 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431916141 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.337810917 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332428155 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389493203 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333244651 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.336378223 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.332394657 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922996056 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346452278 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347134865 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.335684409 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338724548 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361869855 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94933722 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.335706634 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.337264662 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.338932329 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332883096 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341054622 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351964251 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334468358 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.357638347 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334514469 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019778892 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346511828 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339085499 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888968704 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337185378 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.336312552 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561568405 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333445483 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333571458 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.332838168 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334156524 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037379727 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345918481 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.321635913 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354349896 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.070920206 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.564162888 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357351618 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359343848 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558709247 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.319626959 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335219943 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.334887614 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339404 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355520465 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.072063731 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355858747 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.338945243 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593287283 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.548585402 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3408614 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.334973497 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822005756 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366001745 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.352014259 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33600908 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564333389 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.906981536 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354927411 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336150584 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374005391 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336536195 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073527058 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351355095 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.441493935 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346079669 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603827898 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.123513374 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341042431 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405761687 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341620212 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338839594 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348970651 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34204114 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338233511 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.53930534 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361913219 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.351172735 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.339568963 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339692727 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.336748769 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357474341 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.362340413 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564307479 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356086437 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618572047 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340275765 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34103432 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337137027 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.56226215 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.338828521 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.680076315 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601744071 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343882297 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345872178 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353703463 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358427881 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440889716 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362700266 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.35432968 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599069429 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.344259437 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.345225276 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351340452 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343259323 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348502416 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.346669144 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355248328 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916180579 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318182732 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339513802 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229728364 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.354865131 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409691063 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345513144 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.550807111 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.347077914 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373179802 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.368283384 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.350548808 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566273984 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351778124 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.354788835 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423877812 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.821789605 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935982903 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353342329 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.342742592 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.340093199 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.33814244 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341608846 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342027167 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341916418 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550485825 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360542879 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360582017 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938894002 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341536955 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355487727 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.350670679 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357676938 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.350781451 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343993276 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.349113615 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345108502 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373530848 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.357212117 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487304126 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.358669895 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344408402 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.861541436 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349459154 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343589618 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345148383 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379262675 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356008832 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232148639 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605265959 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355404729 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615042173 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360396581 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.3628688 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.34336854 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34876699 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356655656 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.357069572 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373926034 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.357752995 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344529163 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36759564 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908348334 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068074517 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875509577 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360382997 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.358910997 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349240563 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084075358 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365957952 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345608289 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580457719 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101841189 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366004994 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829200602 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.363181876 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088486636 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598767624 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577276524 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362492254 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.353738831 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602528888 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561710466 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380788553 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353822025 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348143215 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.330556133 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920793207 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36664445 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427701999 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088049177 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37442249 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351288965 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.400548144 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.357066187 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74986516 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367709055 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346466061 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356489817 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349093 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250151984 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347939091 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345897832 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965283732 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348667296 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.830646867 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367576875 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.557721957 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.361515034 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.353161286 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.34865393 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.351701548 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.606881162 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598284497 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352389803 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348245299 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877481655 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.201606965 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.354440918 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347309152 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092181616 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354212204 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629035188 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.353805317 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.3492781 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361438944 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350159159 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350143555 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.348103666 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359251113 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325194981 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83085607 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.356791976 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377220824 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35318016 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20025072 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605545141 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.362566125 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926398506 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574586894 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353118898 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394454406 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.353752655 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349223369 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.35920196 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352086783 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.585674394 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411313438 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57653627 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359534857 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.33960999 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375477225 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566847299 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350656054 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351461077 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590668402 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.351967273 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.369028207 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06987707 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376846595 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351143999 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353946258 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35623046 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370514991 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442123308 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56261598 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.367303026 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.362561819 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751335565 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378155381 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35579313 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.366681529 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446289855 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351263674 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.354574286 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.127346756 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932519318 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076141433 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933190206 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607014483 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357577409 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355421394 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353892457 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501506055 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352013626 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628742421 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354915171 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.349034079 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401055756 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356840502 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359821962 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570962963 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631408956 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356690668 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359917763 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359531943 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.355648963 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366493524 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.569713258 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845706488 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914416297 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359601598 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356647829 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.10474754 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653934021 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357641374 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358240673 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357070036 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.370206452 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.391226618 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.365963015 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366367694 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505595575 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60863006 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016564867 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.3881068 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.384136702 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.130404882 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356374023 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617314871 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354292656 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569163454 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94106598 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050519394 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619792978 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427836391 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567719192 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.358973706 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5071173 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.355673331 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359513364 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357563152 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20406721 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.353052949 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.368643282 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943724298 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619850886 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.359938776 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.355639422 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384171184 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.36752438 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582443801 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070348083 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585940005 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369157755 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363072414 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359698162 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941677542 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609198854 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360340103 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.360027029 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595613261 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360904109 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386201263 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.811840225 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.353716886 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91063729 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.327787381 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380549021 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369040262 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059397159 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941851681 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.357207198 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847712697 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356169696 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367559232 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634491844 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.364192292 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366612966 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635517138 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.361384175 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357724322 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574404207 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.94042577 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106234189 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.374593045 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379017724 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.365133193 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360753578 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408802106 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364352993 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366705678 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.777100758 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381967982 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361998116 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37040247 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.360916237 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370982979 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.361562219 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36155751 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.363931467 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.365137864 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.347492094 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374239583 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.36253262 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946515396 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385243789 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.027543759 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.697680369 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61812268 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363205034 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.349673513 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.365795581 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363608966 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364354053 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364313392 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375538323 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938409994 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.36389899 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.376374302 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366949553 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.578476027 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574227468 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369155223 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577354985 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366019256 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378337194 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.347994818 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362886099 seconds)
  done (took 965.425743078 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.365447642 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.376127391 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.354338655 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.384994897 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.377709409 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.410811131 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.373741487 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.384158387 seconds)
  done (took 20.296029727 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.362593392 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.370287492 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.369407683 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.373687602 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.369250857 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.834115721 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.393713381 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.369575299 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.373780906 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.37295646 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.375855751 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.03808536 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.391500566 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.368929481 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.348291383 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.369561775 seconds)
  done (took 32.350151836 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.267236255 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.486519136 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.172732459 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.404971268 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.366697212 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.36621093 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.574795424 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.377081097 seconds)
  done (took 26.288106358 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.36989749 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.374207212 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.375870988 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.374818392 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.375513017 seconds)
  done (took 8.141493541 seconds)
done (took 1226.356937623 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.370570706 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.371825401 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.368074768 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.369776585 seconds)
  done (took 6.750287576 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.353565773 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.354572065 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.35652584 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.366302406 seconds)
  done (took 9.703692103 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.055620638 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.990203021 seconds)
  done (took 5.317118365 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.36932335 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.128342963 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.103814606 seconds)
  done (took 7.876116139 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.671923171 seconds)
  done (took 2.945404986 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.792243456 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.73417902 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.564697819 seconds)
  done (took 6.368119188 seconds)
done (took 40.233372726 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.369806384 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.70671007 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.524286005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.367383364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.526791915 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.524795578 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.103810139 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.38283836 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.374681053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.371218783 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.364645637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.525247823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.156289498 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.706160737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.156826378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.708137729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.532052614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.376713754 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.364204076 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.364733039 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.100672628 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.379798551 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.36705945 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.366986624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.545198272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.515755811 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.370177219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.713390883 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.374838491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.372313308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.514453345 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.372115797 seconds)
  done (took 82.776772464 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.378158953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.365990383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.374527212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.366184808 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.377111284 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.372170725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.368982261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.368753019 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.368491597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.368815376 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.368587292 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.371287954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.369089391 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.377930222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.371217796 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.378794225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.368698851 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.380622721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.382631058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.369212516 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.370137421 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.383858824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.370049949 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.385949496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.369415442 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395569446 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.373414734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.373197583 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.368672865 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.382129958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.380766011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.369030226 seconds)
  done (took 77.247370916 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.375019072 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.370386745 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.368680293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.366548742 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.387123309 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.375295719 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.370749151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.370834834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.374747664 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.371752746 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.389721568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.389623966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.387101166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.369469864 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.386003673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.369606267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.371090014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.387439887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.368892482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.369466352 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.389539048 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.379137488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.372066804 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.368631294 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.392663744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.369579926 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.370291769 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.371791931 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.379706011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.371616197 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.372806764 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.372918958 seconds)
  done (took 77.310201156 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.576073485 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.378942228 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.381061025 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.312681852 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.382118514 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.379879873 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.373160551 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.57621566 seconds)
  done (took 14.639400155 seconds)
done (took 253.251662405 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.371894452 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.369650272 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.575734808 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.40362497 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.372606068 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.399056482 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.40328792 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.593429303 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.346966803 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.613441597 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.391870852 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.399617442 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.373493289 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.400700172 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.652529281 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.523167206 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.30330759 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.377585189 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.715052833 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.395883431 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.642075868 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.389141129 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.645770106 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.321618923 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.392379022 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.381909498 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.371895878 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.290420728 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.421177381 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.717552519 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.389364609 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.375046016 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.461414391 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.484162116 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.592887954 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.535848166 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.378178966 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.461731077 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.599507256 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.379757598 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.376305548 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.147791894 seconds)
  done (took 83.020466816 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.381964673 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.504317732 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.382409029 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.383818151 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.38287197 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.503057639 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.481739774 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.384048518 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.382162742 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.382638521 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.383286815 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.383730492 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.383193883 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.383541684 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.382415172 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.382615339 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.382646052 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.384694998 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.383431945 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.42924498 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.508690253 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.407123494 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.37810694 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.383778629 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.488446305 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.523988762 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.383073432 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.379950897 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.428869902 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.384482339 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.385999417 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.433360074 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.386721728 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.384788242 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.506399717 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.487362602 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.407310714 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.382675573 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.499824043 seconds)
  done (took 56.472754664 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.386195984 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.626623423 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.802255607 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.395845777 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.385875899 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.391088535 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.462208467 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.391033426 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.390024327 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.392238372 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.540652699 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.390253229 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.421131856 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.826738298 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.392453131 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.387381676 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.388719111 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.38708991 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.639357288 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.399545988 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.482735025 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.390894398 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.464506417 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.399053189 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.410281145 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389564773 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.394203591 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.954956153 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.391678852 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.540783338 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.153824309 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.462144801 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.913185518 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.81163156 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.154857927 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.393051262 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.389651549 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.545230841 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.394916395 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.38980432 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.463018916 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.390479809 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.812005703 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.063916241 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.412101063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.389159109 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.978007263 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.546586126 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.627235016 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.400980548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.837351076 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.392898594 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.391126857 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.390711667 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.62693338 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.394726954 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.390289593 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.996799685 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.414964223 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.464872993 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.392396081 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.38955987 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.647248493 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.392364033 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.634914005 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.396489271 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.397851491 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.413200284 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.813177651 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.396279493 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.087681823 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.411986712 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.389986024 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.545618294 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.638157734 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.011686168 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.397982456 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.650563992 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.924617584 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.467687383 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.399573722 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.945706386 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.471247396 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.40031124 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.394704812 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.393958506 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.392333232 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.442979583 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.464170475 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.022296531 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075745327 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.02785492 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.490146114 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.407846155 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.393203643 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.000709328 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.412022944 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.392412863 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.811375156 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.086376611 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.414306449 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.399760706 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.090254255 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.415473182 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.47074336 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.4014895 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.825643197 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.398667037 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.44389979 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.393745133 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.399914458 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.418977982 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.471520208 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.400349323 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.393876989 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.055234099 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.57138405 seconds)
  done (took 183.28883606 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.394035547 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.402337532 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.395742043 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.384459546 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.386073427 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.395977818 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.387960557 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.387959348 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.394378419 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.384999244 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.389131371 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.390671547 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.390278471 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.390846848 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.397287153 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.393864037 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.387230655 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.388360391 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.391070142 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.38648181 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.387536234 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.410016199 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.388539 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.385703713 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.388856043 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.388668399 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.396060313 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.387983295 seconds)
  done (took 64.247097817 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.395080232 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.941057377 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.396056489 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.521653028 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.417532462 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.394242441 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.519604143 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.452329583 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.399815756 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.393834621 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.393469449 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.687340716 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.396900292 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.891562811 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.579969784 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.542343917 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.894353452 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.412959587 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.39434736 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.395032001 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.523472856 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.407866855 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.688004289 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.940495801 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.395519274 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.942429202 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.387263817 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.398868001 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.395054923 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.945354154 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.395003852 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.691279614 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.470713704 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.455585948 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.947380489 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.891303972 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.910652974 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.540051668 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.398411283 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.396578406 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.395389137 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.387176857 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.94917075 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.39647842 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.397604234 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.940575217 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.411742263 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.399790807 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.403815266 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.39461043 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.45602667 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.459394287 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.696214613 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.950475304 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.471707224 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.413405206 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.525024553 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.785444573 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.403571461 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.896263091 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.404245771 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.95174956 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.417247631 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.391084787 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.398517682 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.404456579 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.541460501 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.528813155 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.900319454 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.415499962 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.896331842 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.559130075 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.399804067 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.396953663 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.400648358 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.951471523 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.897314188 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.559371221 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.532101676 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.590463387 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.394161418 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.398253691 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.391201489 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.475752041 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.401325124 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.953474474 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.920412157 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.41991963 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.40002891 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.400964699 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.402026722 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.569371081 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.973108683 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.473385485 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.905079832 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.718265777 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.696426637 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.401077176 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.457954256 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.416491052 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.700331837 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.401692153 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.455652576 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.864412003 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.69889403 seconds)
  done (took 165.798794788 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.640670683 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.414779297 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.493423705 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.549468031 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.997233162 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.972247974 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.397036929 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.521803862 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.508626526 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.661300337 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.398959543 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.511890735 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.613969291 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.478200609 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.100568636 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.47034662 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.491566877 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.545087898 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.536921514 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.399936181 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.041162507 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.692164309 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.586746134 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.419992772 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.508807955 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.189199485 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.979452223 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.934049791 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.580367789 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.416325096 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.916377214 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.414124158 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.322555428 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.060120373 seconds)
  done (took 65.064162949 seconds)
done (took 619.173278956 seconds)
SAVING RESULT...
DONE!
